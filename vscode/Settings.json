{
	// Specifies the style of the gravatar default (fallback) images
	//  - identicon: A geometric pattern
	//  - mp: A simple, cartoon-style silhouetted outline of a person (does not vary by email hash)
	//  - monsterid: A monster with different colors, faces, etc
	//  - retro: 8-bit arcade-style pixelated faces
	//  - robohash: A robot with different colors, faces, etc
	//  - wavatar: A face with differing features and backgrounds
	"gitlens.defaultGravatarsStyle": "robohash",

	// Specifies whether the file annotations button in the editor title shows a menu or immediately toggles the specified file annotations
	//  - null: Shows a menu to choose which file annotations to toggle
	//  - blame: Toggles file blame annotations
	//  - heatmap: Toggles file heatmap annotations
	//  - changes: Toggles file changes annotations
	"gitlens.fileAnnotations.command": null,

	// Deprecated. Use the [Insiders edition](https://marketplace.visualstudio.com/items?itemName=eamodio.gitlens-insiders) of GitLens instead
	// 
	"gitlens.insiders": null,

	// Specifies how much (if any) output will be sent to the GitLens output channel
	//  - silent: Logs nothing
	//  - errors: Logs only errors
	//  - verbose: Logs all errors, warnings, and messages
	//  - debug: Logs all errors, warnings, and messages with extra context useful for debugging
	"gitlens.outputLevel": "errors",

	// Specifies whether to enable GitLens+ features
	"gitlens.plusFeatures.enabled": true,

	// Specifies the proxy configuration to use. If not specified, the proxy configuration will be determined based on VS Code or OS settings
	"gitlens.proxy": null,

	// Specifies whether to show the Welcome (Quick Setup) experience on first install
	"gitlens.showWelcomeOnInstall": true,

	// Specifies whether to show the What's New notification after upgrading to new feature releases
	"gitlens.showWhatsNewAfterUpgrades": true,

	// Specifies whether to enable virtual repositories support
	"gitlens.virtualRepositories.enabled": true,

	// Controla se as ações embutidas estão sempre visíveis na exibição de Controle do Código-fonte.
	"scm.alwaysShowActions": false,

	// Controla se os repositórios devem sempre estar visíveis na exibição do Controle do Código-Fonte.
	"scm.alwaysShowRepositories": false,

	// Controla se a exibição do Controle do Código-Fonte deve revelar e selecionar arquivos automaticamente ao abri-los.
	"scm.autoReveal": true,

	// Controla o selo da contagem no ícone de Controle do Código-fonte na Barra de Atividade.
	//  - all: Mostrar a soma de todas as notificações de contagem dos Provedores de Controle do Código-fonte.
	//  - focused: Mostrar a notificação de contagem do Provedor de Controle do Código-fonte com foco.
	//  - off: Desabilitar a notificação de contagem do Controle do Código-fonte.
	"scm.countBadge": "all",

	// Controla o modo de exibição do repositório de Controle do Código-fonte padrão.
	//  - tree: Mostrar as alterações do repositório como uma árvore.
	//  - list: Mostrar as alterações do repositório como uma lista.
	"scm.defaultViewMode": "list",

	// Controla o repositório padrão de Controle de Fonte altera a ordem de classificação quando visto como uma lista.
	//  - name: Classifique as alterações do repositório por nome do arquivo.
	//  - path: Classifique as alterações do repositório para o caminho.
	//  - status: Classificar as alterações do repositório pelo status do Controle do Código-Fonte.
	"scm.defaultViewSortKey": "path",

	// Controla decorações de comparação no editor.
	//  - all: Mostrar as decorações de comparação em todas as localizações disponíveis.
	//  - gutter: Mostrar as decorações de comparação somente na medianiz do editor.
	//  - overview: Mostrar as decorações de comparação somente na régua de visão geral.
	//  - minimap: Mostrar as decorações de comparação somente no minimapa.
	//  - none: Não mostrar as decorações de comparação.
	"scm.diffDecorations": "all",

	// Controla o comportamento das decorações da medianiz de comparação do Controle do Código-Fonte.
	//  - diff: Mostrar a exibição de espiada de comparação embutida ao clicar.
	//  - none: Não fazer nada.
	"scm.diffDecorationsGutterAction": "diff",

	// Controla se um padrão é usado para as decorações de comparação na medianiz.
	"scm.diffDecorationsGutterPattern": {
		"added": false,
		"modified": true
	},

	// Controla a visibilidade do decorador de comparação do Controle do Código-fonte na medianiz.
	//  - always: Mostrar o decorador de comparação na medianiz a qualquer momento.
	//  - hover: Mostrar o decorador de comparação na medianiz somente no foco.
	"scm.diffDecorationsGutterVisibility": "always",

	// Controla a largura (px) das decorações de comparação na medianiz (adicionado a & modified).
	"scm.diffDecorationsGutterWidth": 3,

	// Controla se o espaço em branco à esquerda e à direita é ignorado nas decorações da medianiz de comparação do Controle do Código-fonte.
	//  - true: Ignore o espaço em branco à esquerda e à direita.
	//  - false: Não ignore o espaço em branco à esquerda e à direita.
	//  - inherit: Herdar de `diffEditor.ignoreTrimWhitespace`.
	"scm.diffDecorationsIgnoreTrimWhitespace": "false",

	// Controla a fonte da mensagem de entrada. Use 'default' para a família de fontes da interface do usuário do workbench, `editor` para o valor de `editor.fontFamily` ou uma família de fontes personalizada.
	"scm.inputFontFamily": "default",

	// Controla o tamanho da fonte da mensagem de entrada em pixels.
	"scm.inputFontSize": 13,

	// Controla os selos de contagem nos cabeçalhos do Provedor de Controle do Código-fonte. Estes cabeçalhos só aparecem quando há mais de um provedor.
	//  - hidden: Ocultar notificações de contagem do Provedor de Controle do Código-fonte.
	//  - auto: Somente mostrar a notificação de contagem para o Provedor de Controle do Código-fonte quando diferente de zero.
	//  - visible: Mostrar notificações de contagem do Provedor de Controle do Código-fonte.
	"scm.providerCountBadge": "hidden",

	// Controla a ordem de classificação dos repositórios na exibição de repositórios de controle do código-fonte.
	//  - discovery time: Os repositórios na exibição de Repositórios de Controle do Código-Fonte são classificados pela hora da descoberta. Os repositórios na exibição de Controle do Código-Fonte são classificadas na ordem em que foram selecionados.
	//  - name: Os repositórios nas exibições de Controle do Código-Fonte e Repositórios de Controle do Código-Fonte são classificados pelo nome do repositório.
	//  - path: Os repositórios nas exibições de Controle do Código-Fonte e Repositórios de Controle do Código-Fonte são classificados pelo caminho do repositório.
	"scm.repositories.sortOrder": "discovery time",

	// Controla quantos repositórios são visíveis na seção Repositórios de Controle do Código-fonte. Defina como `0` para poder redimensionar manualmente o modo de exibição.
	"scm.repositories.visible": 10,

	// Controla se um botão de ação pode ser mostrado na exibição do Controle do Código-Fonte.
	"scm.showActionButton": true,

	// Controla se o editor mostra CodeLens.
	"diffEditor.codeLens": false,

	// 
	//  - smart: Usa o algoritmo de comparação padrão.
	//  - experimental: Usa um algoritmo de comparação experimental.
	"diffEditor.diffAlgorithm": "smart",

	// Quando habilitado, o editor de comparação ignora as alterações no espaço em branco à esquerda ou à direita.
	"diffEditor.ignoreTrimWhitespace": true,

	// Tempo limite em milissegundos após o cancelamento da computação de comparação. Use 0 para nenhum tempo limite.
	"diffEditor.maxComputationTime": 5000,

	// Tamanho máximo do arquivo em MB para calcular as diferenças. Use 0 para nenhum limite.
	"diffEditor.maxFileSize": 50,

	// Controla se o editor de comparação mostra indicadores +/- para alterações adicionadas/removidas.
	"diffEditor.renderIndicators": true,

	// Quando ativado, o editor de diferenças mostra setas em sua margem de glifo para reverter as alterações.
	"diffEditor.renderMarginRevertIcon": true,

	// Controla se o editor de comparação mostra a comparação lado a lado ou embutida.
	"diffEditor.renderSideBySide": true,

	// 
	//  - off: As linhas nunca serão quebradas.
	//  - on: As linhas serão quebradas na largura do visor.
	//  - inherit: As linhas serão encapsuladas de acordo com a configuração do `editor.wordWrap`.
	"diffEditor.wordWrap": "inherit",

	// Controla se as sugestões devem ser aceitas em caracteres de confirmação. Por exemplo, no JavaScript, o ponto e vírgula (`;`) pode ser um caractere de confirmação que aceita uma sugestão e digita esse caractere.
	"editor.acceptSuggestionOnCommitCharacter": true,

	// Controla se as sugestões devem ser aceitas pressionando `Enter`, além de `Tab`. Ajuda a evitar ambiguidade entre a inserção de novas linhas ou a aceitação de sugestões.
	//  - on
	//  - smart: Somente aceitar uma sugestão com `Enter` quando ela fizer uma alteração textual.
	//  - off
	"editor.acceptSuggestionOnEnter": "on",

	// Controla o número de linhas no editor que podem ser lidas por um leitor de tela de uma vez. Quando detectamos um leitor de tela, definimos o padrão automaticamente como 500. Aviso: esta opção afeta o desempenho para números maiores que o padrão.
	"editor.accessibilityPageSize": 10,

	// Controla se o editor deve ser executado em um modo em que é otimizado para leitores de tela.
	//  - auto: O editor usará APIs de plataforma para detectar quando um Leitor de Tela está anexado.
	//  - on: O editor será otimizado permanentemente para uso com um Leitor de Tela.
	//  - off: O editor nunca será otimizado para uso com um Leitor de Tela.
	"editor.accessibilitySupport": "auto",

	// Controla se o editor deve fechar automaticamente os colchetes após o usuário adicionar um colchete de abertura.
	//  - always
	//  - languageDefined: Usar as configurações de linguagem para determinar quando fechar automaticamente os colchetes.
	//  - beforeWhitespace: Fechar automaticamente os colchetes somente quando o cursor estiver à esquerda do espaço em branco.
	//  - never
	"editor.autoClosingBrackets": "languageDefined",

	// Controla se o editor deve remover as aspas ou os colchetes de fechamento adjacentes durante a exclusão.
	//  - always
	//  - auto: Remover as aspas ou os colchetes de fechamento adjacentes somente se eles foram inseridos automaticamente.
	//  - never
	"editor.autoClosingDelete": "auto",

	// Controla se o editor deve digitar usando colchetes ou aspas de fechamento.
	//  - always
	//  - auto: Digitar usando colchetes ou aspas de fechamento somente se eles tiverem sido inseridos automaticamente.
	//  - never
	"editor.autoClosingOvertype": "auto",

	// Controla se o editor deverá fechar as aspas automaticamente depois que o usuário adicionar aspas de abertura.
	//  - always
	//  - languageDefined: Use as configurações de linguagem para determinar quando fechar as aspas automaticamente.
	//  - beforeWhitespace: Fechar automaticamente as aspas somente quando o cursor estiver à esquerda do espaço em branco.
	//  - never
	"editor.autoClosingQuotes": "languageDefined",

	// Controla se o editor deve ajustar automaticamente o recuo quando os usuários digitam, colam, movem ou recuam linhas.
	//  - none: O editor não inserirá o recuo automaticamente.
	//  - keep: O editor manterá o recuo da linha atual.
	//  - brackets: O editor manterá o recuo da linha atual e honrará os colchetes definidos por linguagem.
	//  - advanced: O editor manterá o recuo da linha atual, honrará os colchetes definidos por linguagem e invocará onEnterRules especiais definidos por linguagens.
	//  - full: O editor manterá o recuo da linha atual, honrará os colchetes definidos por linguagem, invocará onEnterRules especiais definidos por linguagens e honrará indentationRules definido por linguagens.
	"editor.autoIndent": "full",

	// Controla se o editor deve envolver as seleções automaticamente.
	//  - languageDefined: Usar as configurações de linguagem para determinar quando circundar as seleções automaticamente.
	//  - quotes: Colocar entre aspas, mas não entre colchetes.
	//  - brackets: Colocar entre colchetes, mas não entre aspas.
	//  - never
	"editor.autoSurround": "languageDefined",

	// Controla se a colorização do par de colchetes está habilitada ou não. Use `workbench.colorCustomizations` para substituir as cores de realce do colchete.
	"editor.bracketPairColorization.enabled": true,

	// Controla se cada tipo de colchete tem seu próprio pool de cores independente.
	"editor.bracketPairColorization.independentColorPoolPerBracketType": false,

	// Os tipos de ação de código a serem executados ao salvar.
	"editor.codeActionsOnSave": {},

	// Habilitar/desabilitar a exibição de cabeçalhos de grupo no menu de ação de código.
	"editor.codeActionWidget.showHeaders": true,

	// Controla se o editor mostra CodeLens.
	"editor.codeLens": true,

	// Controla a família de fontes do CodeLens.
	"editor.codeLensFontFamily": "",

	// Controla o tamanho da fonte do CodeLens em pixels. Quando esta configuração é definida como `0`, será usado 90% do `editor.fontSize`.
	"editor.codeLensFontSize": 0,

	// Controla se o editor deve renderizar o seletor de cor e os decoradores de cor embutidos.
	"editor.colorDecorators": true,

	// Permite que a seleção com o mouse e as teclas faça a seleção de coluna.
	"editor.columnSelection": false,

	// Controla se linhas vazias devem ser ignoradas com as ações de alternância, adição ou remoção para comentários de linha.
	"editor.comments.ignoreEmptyLines": true,

	// Controla se um caractere de espaço é inserido durante o comentário.
	"editor.comments.insertSpace": true,

	// Controla se o realce de sintaxe deve ser copiado para a área de transferência.
	"editor.copyWithSyntaxHighlighting": true,

	// Controla o estilo de animação do cursor.
	"editor.cursorBlinking": "blink",

	// Controla se a animação de cursor suave deve ser habilitada.
	"editor.cursorSmoothCaretAnimation": false,

	// Controla o estilo do cursor.
	"editor.cursorStyle": "line",

	// Controla o número mínimo de linhas visíveis à esquerda e à direita ao redor do cursor. Conhecido como 'scrollOff' ou 'scrollOffset' em alguns outros editores.
	"editor.cursorSurroundingLines": 0,

	// Controla quando `cursorSurroundingLines` deve ser imposto.
	//  - default: `cursorSurroundingLines` é imposto somente quando disparado via teclado ou API.
	//  - all: `cursorSurroundingLines` é sempre imposto.
	"editor.cursorSurroundingLinesStyle": "default",

	// Controla a largura do cursor quando `editor.cursorStyle` está definido como `line`.
	"editor.cursorWidth": 0,

	// Define um formatador padrão que tem precedência sobre todas as outras configurações do formatador. Precisa ser o identificador de uma extensão que contribui com um formatador.
	//  - null: Nenhum
	//  - ms-dotnettools.csharp: C# for Visual Studio Code (powered by OmniSharp).
	//  - kreativ-software.csharpextensions: C# IDE Extensions for VSCode
	//  - vscode.css-language-features: Fornece suporte de linguagem avançada para arquivos CSS, LESS e SCSS.
	//  - haskell.haskell: Haskell language support powered by the Haskell Language Server
	//  - vscode.html-language-features: Fornece suporte de linguagem avançada para arquivos HTML e Handlebar
	//  - tht13.html-preview-vscode: Provides ability to preview HTML documents.
	//  - redhat.java: Java Linting, Intellisense, formatting, refactoring, Maven/Gradle support and more...
	//  - vscode.json-language-features: Fornece suporte de linguagem avançada para arquivos JSON.
	//  - ms-toolsai.jupyter: Jupyter notebook support, interactive programming and computing that supports Intellisense, debugging and more.
	//  - justusadam.language-haskell: Syntax support for the Haskell programming language.
	//  - yzhang.markdown-all-in-one: All you need to write Markdown (keyboard shortcuts, table of contents, auto preview and more)
	//  - vscode.markdown-language-features: Fornece suporte de linguagem avançada para Markdown.
	//  - vscode.php-language-features: Fornece suporte de linguagem avançada para arquivos do PHP.
	//  - ms-vscode.powershell: Develop PowerShell modules, commands and scripts in Visual Studio Code!
	//  - esbenp.prettier-vscode: Code formatter using prettier
	//  - ms-python.python: IntelliSense (Pylance), Linting, Debugging (multi-threaded, remote), Jupyter Notebooks, code formatting, refactoring, unit tests, and more.
	//  - vscode.references-view: Referenciar os Resultados da pesquisa como modo de exibição estável e separado na barra lateral
	//  - vscode.search-result: Fornece recursos de linguagem e realce de sintaxe para resultados da pesquisa com guias.
	//  - eirikpre.systemverilog: Language support for Verilog and SystemVerilog.
	//  - vscode.typescript-language-features: Fornece suporte de linguagem avançada para JavaScript e TypeScript.
	//  - mshr-h.veriloghdl: Verilog-HDL/SystemVerilog/Bluespec SystemVerilog support for VS Code
	//  - dbaeumer.vscode-eslint: Integrates ESLint JavaScript into VS Code.
	//  - vscjava.vscode-java-debug: A lightweight Java debugger for Visual Studio Code
	//  - vscjava.vscode-java-pack: Popular extensions for Java development that provides Java IntelliSense, debugging, testing, Maven/Gradle support, project management and more
	//  - vscjava.vscode-maven: Manage Maven projects, execute goals, generate project from archetype, improve user experience for Java developers.
	//  - ms-python.vscode-pylance: A performant, feature-rich language server for Python in VS Code
	//  - Pivotal.vscode-spring-boot: Provides validation and content assist for Spring Boot `application.properties`, `application.yml` properties files. As well as Boot-specific support for `.java` files.
	//  - styled-components.vscode-styled-components: Syntax highlighting for styled-components
	//  - rangav.vscode-thunder-client: Lightweight Rest API Client for VS Code
	//  - redhat.vscode-xml: XML Language Support by Red Hat
	//  - naumovs.color-highlight: Highlight web colors in your editor
	//  - vscode.configuration-editing: Fornece recursos (IntelliSense avançado, correção automática) em arquivos de configuração, como arquivos de recomendação de extensão, de inicialização e de configuração.
	//  - GitHub.copilot: Your AI pair programmer
	//  - vscode.debug-auto-launch: O auxiliar para o recurso de anexação automática quando as extensões de depuração de nó não estão ativas.
	//  - vscode.debug-server-ready: Abrir URI no navegador se o servidor em depuração estiver pronto.
	//  - EditorConfig.EditorConfig: EditorConfig Support for Visual Studio Code
	//  - vscode.emmet: Suporte Emmet para VS Code
	//  - vscode.extension-editing: Fornece funcionalidades de lint para extensões de criação.
	//  - redhat.fabric8-analytics: Insights about your application dependencies: Security, License compatibility and AI based guidance to choose appropriate dependencies for your application.
	//  - vscode.git: Integração SCM do Git
	//  - vscode.git-base: Seletor e contribuições estáticas do GIT.
	//  - vscode.github: Recursos do GitHub para VS Code
	//  - vscode.github-authentication: Provedor de Autenticação do GitHub
	//  - eamodio.gitlens: Supercharge Git within VS Code — Visualize code authorship at a glance via Git blame annotations and CodeLens, seamlessly navigate and explore Git repositories, gain valuable insights via rich visualizations and powerful comparison commands, and so much more
	//  - vscode.grunt: Extension to add Grunt capabilities to VS Code.
	//  - vscode.gulp: Extensão para adicionar funcionalidades do Gulp ao VSCode.
	//  - hoovercj.haskell-linter: An extension to use hlint in vscode
	//  - vscode.ipynb: Fornece suporte básico para abrir e ler os arquivos de notebook .ipynb do Jupyter
	//  - vscode.jake: Extensão para adicionar funcionalidades do Jake ao VS Code.
	//  - ms-vscode.js-debug: An extension for debugging Node.js programs and Chrome.
	//  - ms-vscode.js-debug-companion: Companion extension to js-debug that provides capability for remote debugging
	//  - ms-toolsai.jupyter-renderers: Renderers for Jupyter Notebooks (with plotly, vega, gif, png, svg, jpeg and other such outputs)
	//  - ritwickdey.LiveServer: Launch a development local Server with live reload feature for static & dynamic pages
	//  - vscode.markdown-math: Adiciona suporte matemático ao Markdown em notebooks.
	//  - PKief.material-icon-theme: Material Design Icons for Visual Studio Code
	//  - zhuangtongfa.material-theme: Atom‘s iconic One Dark theme for Visual Studio Code
	//  - vscode.media-preview: Fornece visualizações integradas do VS Code para imagens, áudio e vídeo
	//  - vscode.merge-conflict: Realce e comandos para conflitos de mesclagem embutida.
	//  - vscode.microsoft-authentication: Provedor de autenticação da Microsoft
	//  - vscode.npm: Extensão para adicionar suporte de tarefa para scripts npm.
	//  - chrmarti.regex: Regex matches previewer for JavaScript, TypeScript, PHP and Haxe in Visual Studio Code.
	//  - ms-vscode-remote.remote-wsl: Abra qualquer pasta no Subsistema do Windows para Linux (WSL) e aproveite o conjunto completo de recursos do Visual Studio Code.
	//  - ms-vscode-remote.remote-wsl-recommender: Recommends using the Windows Subsystem for Linux (WSL) and the WSL extension.
	//  - vscode.simple-browser: Um modo de exibição da Web interno muito básico para exibir conteúdo da Web.
	//  - mshr-h.systemverilog: System Verilog support for VS Code
	//  - miramac.vscode-exec-node: Execute the current file or your selected code with node.js.
	//  - vscode-icons-team.vscode-icons: Icons for Visual Studio Code
	//  - vscjava.vscode-java-dependency: Manage Java projects in Visual Studio Code
	//  - vscjava.vscode-java-test: Run and debug JUnit or TestNG test cases.
	//  - ms-vscode.vscode-js-profile-table: Text visualizer for profiles taken from the JavaScript debugger
	//  - GitHub.vscode-pull-request-github: Pull Request and Issue Provider for GitHub
	//  - fernandoescolar.vscode-solution-explorer: Visual Studio .sln file explorer for Visual Studio Code
	//  - vscjava.vscode-spring-boot-dashboard: Spring Boot Dashboard for VS Code
	//  - vscjava.vscode-spring-initializr: A lightweight extension based on Spring Initializr to generate quick start Spring Boot Java projects.
	//  - bradlc.vscode-tailwindcss: Intelligent Tailwind CSS tooling for VS Code
	//  - ms-vsliveshare.vsliveshare: Real-time collaborative development from the comfort of your favorite tools.
	"editor.defaultFormatter": null,

	// Controla se o gesto do mouse Ir para Definição sempre abre o widget de espiada.
	"editor.definitionLinkOpensInPeek": false,

	// Controla se `editor.tabSize#` e `#editor.insertSpaces` serão detectados automaticamente quando um arquivo for aberto com base no conteúdo do arquivo.
	"editor.detectIndentation": true,

	// Controla se o editor deve permitir a movimentação de seleções por meio de arrastar e soltar.
	"editor.dragAndDrop": true,

	// Controla se você pode arrastar e soltar um arquivo em um editor de texto mantendo pressionada a tecla `shift` (em vez de abrir o arquivo em um editor).
	"editor.dropIntoEditor.enabled": true,

	// Controla se a cópia sem uma seleção copia a linha atual.
	"editor.emptySelectionClipboard": true,

	// Habilitar/desabilitar a execução de edições de extensões ao colar.
	"editor.experimental.pasteActions.enabled": false,

	// Multiplicador de velocidade de rolagem ao pressionar `Alt`.
	"editor.fastScrollSensitivity": 5,

	// Controla se Localizar Widget deve adicionar linhas extras na parte superior do editor. Quando true, você poderá rolar para além da primeira linha quando Localizar Widget estiver visível.
	"editor.find.addExtraSpaceOnTop": true,

	// Controla automaticamente a condição para habilitar a Localização na Seleção.
	//  - never: Nunca ativar Localizar na seleção automaticamente (padrão).
	//  - always: Sempre ativar Localizar na seleção automaticamente.
	//  - multiline: Ative Localizar na Seleção automaticamente quando várias linhas de conteúdo forem selecionadas.
	"editor.find.autoFindInSelection": "never",

	// Controla se o cursor deve ir para a localização de correspondências durante a digitação.
	"editor.find.cursorMoveOnType": true,

	// Controla se a pesquisa é reiniciada automaticamente do início (ou do fim) quando nenhuma correspondência adicional é encontrada.
	"editor.find.loop": true,

	// Controla se a cadeia de caracteres de pesquisa em Localizar Widget é propagada da seleção do editor.
	//  - never: Nunca propagar a cadeia de caracteres da pesquisa da seleção do editor.
	//  - always: Sempre propague a cadeia de caracteres de pesquisa da seleção do editor, incluindo a palavra na posição do cursor.
	//  - selection: Somente propagar a cadeia de caracteres da pesquisa da seleção do editor.
	"editor.find.seedSearchStringFromSelection": "always",

	// Controla se o editor tem a dobragem de código habilitada.
	"editor.folding": true,

	// Controla se o editor deve realçar intervalos dobrados.
	"editor.foldingHighlight": true,

	// Controla se o editor recolhe automaticamente os intervalos de importação.
	"editor.foldingImportsByDefault": false,

	// O número máximo de regiões dobráveis. Aumentar esse valor pode fazer com que o editor se torne menos responsivo quando a fonte atual tiver um grande número de regiões dobráveis.
	"editor.foldingMaximumRegions": 5000,

	// Controla a estratégia para os intervalos de dobragem de computação.
	//  - auto: Usar uma estratégia de dobragem específica a um linguagem, se disponível, senão usar uma baseada em recuo.
	//  - indentation: Usar a estratégia de dobragem baseada em recuo.
	"editor.foldingStrategy": "auto",

	// Controla a família de fontes.
	"editor.fontFamily": "Consolas, 'Courier New', monospace",

	// Configura as ligaturas de fonte ou os recursos de fonte. Pode ser um booliano para habilitar/desabilitar ligaturas ou uma cadeia de caracteres para o valor da propriedade 'font-feature-settings' do CSS.
	"editor.fontLigatures": false,

	// Controla o tamanho da fonte em pixels.
	"editor.fontSize": 14,

	// Controla a espessura da fonte. Aceita palavras-chave "normal" e "bold" ou números entre 1 e 1.000.
	"editor.fontWeight": "normal",

	// Controla se o editor deve formatar automaticamente o conteúdo colado. Um formatador precisa estar disponível e o formatador deve ser capaz de formatar um intervalo em um documento.
	"editor.formatOnPaste": false,

	// Formatar um arquivo ao salvar. Um formatador precisa estar disponível, o arquivo não deve ser salvo após o atraso e o editor não deve estar desligando.
	"editor.formatOnSave": false,

	// Controla se o formato no salvamento formata o arquivo inteiro ou somente as modificações. Aplica-se somente quando `editor.formatOnSave` é habilitado.
	//  - file: Formate todo o documento.
	//  - modifications: Formate modificações (exige controle do código-fonte).
	//  - modificationsIfAvailable: Tentará formatar apenas as modificações (requer controle do código-fonte). Se o controle do código-fonte não puder ser usado, todo o arquivo será formatado.
	"editor.formatOnSaveMode": "file",

	// Controla se o editor deve formatar automaticamente a linha após a digitação.
	"editor.formatOnType": false,

	// Controla se o editor deve renderizar a margem vertical do glifo. A margem do glifo é usada principalmente para depuração.
	"editor.glyphMargin": true,

	// ID de comando alternativa que está sendo executada quando o resultado de 'Ir para Declaração' é a localização atual.
	"editor.gotoLocation.alternativeDeclarationCommand": "editor.action.goToReferences",

	// A ID de comando alternativa que está sendo executada quando o resultado de 'Ir para Definição' é a localização atual.
	"editor.gotoLocation.alternativeDefinitionCommand": "editor.action.goToReferences",

	// A ID de comando alternativa que está sendo executada quando o resultado de 'Ir para Implementação' é a localização atual.
	"editor.gotoLocation.alternativeImplementationCommand": "",

	// A ID de comando alternativa que está sendo executada quando o resultado de 'Ir para Referência' é a localização atual.
	"editor.gotoLocation.alternativeReferenceCommand": "",

	// A ID de comando alternativa que está sendo executada quando o resultado de 'Ir para Definição de Tipo' é a localização atual.
	"editor.gotoLocation.alternativeTypeDefinitionCommand": "editor.action.goToReferences",

	// Essa configuração foi preterida. Use configurações separadas como 'editor.editor.gotoLocation.multipleDefinitions' ou 'editor.editor.gotoLocation.multipleImplementations'.
	// 
	"editor.gotoLocation.multiple": null,

	// Controla o comportamento do comando 'Go to Declaration' quando há vários locais de destino.
	//  - peek: Mostrar exibição com espiada dos resultados (padrão)
	//  - gotoAndPeek: Ir para o resultado primário e mostrar uma exibição com espiada
	//  - goto: Ir para o resultado primário e habilitar a navegação sem espiada para outros
	"editor.gotoLocation.multipleDeclarations": "peek",

	// Controla o comportamento do comando 'Go to Definition' quando há vários locais de destino.
	//  - peek: Mostrar exibição com espiada dos resultados (padrão)
	//  - gotoAndPeek: Ir para o resultado primário e mostrar uma exibição com espiada
	//  - goto: Ir para o resultado primário e habilitar a navegação sem espiada para outros
	"editor.gotoLocation.multipleDefinitions": "peek",

	// Controla o comportamento do comando 'Go to Implementations' quando há vários locais de destino.
	//  - peek: Mostrar exibição com espiada dos resultados (padrão)
	//  - gotoAndPeek: Ir para o resultado primário e mostrar uma exibição com espiada
	//  - goto: Ir para o resultado primário e habilitar a navegação sem espiada para outros
	"editor.gotoLocation.multipleImplementations": "peek",

	// Controla o comportamento do comando 'Go to References' quando há vários locais de destino.
	//  - peek: Mostrar exibição com espiada dos resultados (padrão)
	//  - gotoAndPeek: Ir para o resultado primário e mostrar uma exibição com espiada
	//  - goto: Ir para o resultado primário e habilitar a navegação sem espiada para outros
	"editor.gotoLocation.multipleReferences": "peek",

	// Controla o comportamento do comando 'Go to Type Definition' quando há vários locais de destino.
	//  - peek: Mostrar exibição com espiada dos resultados (padrão)
	//  - gotoAndPeek: Ir para o resultado primário e mostrar uma exibição com espiada
	//  - goto: Ir para o resultado primário e habilitar a navegação sem espiada para outros
	"editor.gotoLocation.multipleTypeDefinitions": "peek",

	// Controla se as guias de pares de colchetes estão habilitadas ou não.
	//  - true: Habilita guias de par de colchetes.
	//  - active: Habilita guias de par de colchetes somente para o par de colchetes ativo.
	//  - false: Desabilita guias de par de colchetes.
	"editor.guides.bracketPairs": false,

	// Controla se as guias de par de colchetes horizontais estão habilitadas ou não.
	//  - true: Habilita guias horizontais como adição a guias de par de colchetes verticais.
	//  - active: Habilita guias horizontais somente para o par de colchetes ativo.
	//  - false: Desabilita guias de par de colchetes horizontais.
	"editor.guides.bracketPairsHorizontal": "active",

	// Controla se o editor deve destacar o par de colchetes ativo.
	"editor.guides.highlightActiveBracketPair": true,

	// Controla se o editor deve realçar a guia de recuo ativo.
	//  - true: Realçar o guia de recuo ativo.
	//  - always: Realça o guia de recuo ativo mesmo se as guias de colchetes estiverem realçadas.
	//  - false: Não realçar o guia de recuo ativo.
	"editor.guides.highlightActiveIndentation": true,

	// Controla se o editor deve renderizar guias de recuo.
	"editor.guides.indentation": true,

	// Controla se o cursor deve ser ocultado na régua de visão geral.
	"editor.hideCursorInOverviewRuler": false,

	// Prefira mostrar os focos acima da linha, se houver espaço.
	"editor.hover.above": true,

	// Controla o atraso em milissegundos após o qual o foco é exibido.
	"editor.hover.delay": 300,

	// Controla se o foco é mostrado.
	"editor.hover.enabled": true,

	// Controla se o foco deve permanecer visível quando o mouse é movido sobre ele.
	"editor.hover.sticky": true,

	// Habilita as dicas embutidas no editor.
	//  - on: As dicas embutidas estão habilitadas
	//  - onUnlessPressed: As dicas de incrustação são exibidas por padrão e ocultadas ao segurar Ctrl+Alt
	//  - offUnlessPressed: As dicas de embutimento ficam ocultas por padrão e são exibidas ao segurar Ctrl+Alt
	//  - off: As dicas embutidas estão desabilitadas
	"editor.inlayHints.enabled": "on",

	// Controla a família de fontes de dicas de inlay no editor. Quando definido como vazio, o `editor.fontFamily` é usado.
	"editor.inlayHints.fontFamily": "",

	// Controla o tamanho da fonte das dicas de inlay no editor. Por padrão, o `editor.fontSize` é usado quando o valor configurado é menor que `5` ou maior que o tamanho da fonte do editor.
	"editor.inlayHints.fontSize": 0,

	// Habilita o preenchimento em torno das sugestões embutidas no editor.
	"editor.inlayHints.padding": false,

	// Controla se quer mostrar automaticamente sugestões em linha no editor.
	"editor.inlineSuggest.enabled": true,

	// Insira espaços ao pressionar 'Tab'. Essa configuração é substituída com base no conteúdo do arquivo quando `editor.detectIndentation` está ativado.
	"editor.insertSpaces": true,

	// Define os símbolos de colchetes que aumentam ou diminuem o recuo.
	"editor.language.brackets": null,

	// Define os pares de colchetes que são coloridos por seu nível de aninhamento se a colorização de par de colchetes estiver habilitada.
	"editor.language.colorizedBracketPairs": null,

	// Tratamento especial para arquivos grandes para desabilitar determinados recursos de uso intensivo de memória.
	"editor.largeFileOptimizations": true,

	// Controla o espaçamento de letras em pixels.
	"editor.letterSpacing": 0,

	// Habilita a lâmpada de ação do código no editor.
	"editor.lightbulb.enabled": true,

	// Controla a altura da linha. 
	//  - Use 0 para calcular automaticamente a altura da linha do tamanho da fonte.
	//  - Os valores entre 0 e 8 serão usados como um multiplicador com o tamanho da fonte.
	//  - Valores maiores ou iguais a 8 serão usados como valores efetivos.
	"editor.lineHeight": 0,

	// Controla a exibição de números de linha.
	//  - off: Os números de linha não são renderizados.
	//  - on: Os números de linha são renderizados como um número absoluto.
	//  - relative: Os números de linha são renderizados como distância em linhas à posição do cursor.
	//  - interval: Os números de linha são renderizados a cada dez linhas.
	"editor.lineNumbers": "on",

	// Controla se o editor tem a edição vinculada habilitada. Dependendo da linguagem, os símbolos relacionados, por exemplo, a marcas HTML, são atualizados durante a edição.
	"editor.linkedEditing": false,

	// Controla se o editor deve detectar links e torná-los clicáveis.
	"editor.links": true,

	// Realçar colchetes correspondentes.
	"editor.matchBrackets": "always",

	// Linhas acima desse comprimento não serão indexadas por motivos de desempenho
	"editor.maxTokenizationLineLength": 20000,

	// Controla se o minimapa é ocultado automaticamente.
	"editor.minimap.autohide": false,

	// Controla se o minimapa é exibido.
	"editor.minimap.enabled": true,

	// Limitar a largura do minimapa para renderizar no máximo um determinado número de colunas.
	"editor.minimap.maxColumn": 120,

	// Renderizar os caracteres reais em uma linha, em oposição aos blocos de cores.
	"editor.minimap.renderCharacters": true,

	// Escala de conteúdo desenhada no minimapa: 1, 2 ou 3.
	"editor.minimap.scale": 1,

	// Controla quando o controle deslizante do minimapa é exibido.
	"editor.minimap.showSlider": "mouseover",

	// Controla o lado em que o minimapa deve ser renderizado.
	"editor.minimap.side": "right",

	// Controla o tamanho do minimapa.
	//  - proportional: O minimapa tem o mesmo tamanho que o conteúdo do editor (e pode rolar).
	//  - fill: O minimapa alongará ou reduzirá conforme necessário para preencher a altura do editor (sem rolagem).
	//  - fit: O minimapa será reduzido conforme o necessário para nunca ser maior que o editor (sem rolagem).
	"editor.minimap.size": "proportional",

	// Um multiplicador a ser usado no `deltaX` e no `deltaY` dos eventos de rolagem do mouse.
	"editor.mouseWheelScrollSensitivity": 1,

	// Aplicar zoom à fonte do editor ao usar o botão de rolagem do mouse e segurar `Ctrl`.
	"editor.mouseWheelZoom": false,

	// Mesclar vários cursores quando eles estiverem sobrepostos.
	"editor.multiCursorMergeOverlapping": true,

	// O modificador a ser usado para adicionar vários cursores com o mouse. Os gestos do mouse Ir para Definição e Abrir Link irão adaptar-se de forma a não entrarem em conflito com o [modificador multicursor](https://code.visualstudio.com/docs/editor/codebasics#_multicursor-modifier).
	//  - ctrlCmd: Mapeia para `Control` no Windows e no Linux e para `Command` no macOS.
	//  - alt: Mapeia para `Alt` no Windows e no Linux e para `Option` no macOS.
	"editor.multiCursorModifier": "alt",

	// Controla a colagem quando a contagem de linhas do texto colado corresponde à contagem do cursor.
	//  - spread: Cada cursor cola uma única linha do texto.
	//  - full: Cada cursor cola o texto completo.
	"editor.multiCursorPaste": "spread",

	// Controla se o editor deve realçar ocorrências de símbolo semântico.
	"editor.occurrencesHighlight": true,

	// Controla se uma borda deve ser desenhada ao redor da régua de visão geral.
	"editor.overviewRulerBorder": true,

	// Controla a quantidade de espaço entre a borda inferior do editor e a última linha.
	"editor.padding.bottom": 0,

	// Controla a quantidade de espaço entre a borda superior do editor e a primeira linha.
	"editor.padding.top": 0,

	// Controla se o parâmetro sugere ciclos de menu ou fecha ao chegar ao final da lista.
	"editor.parameterHints.cycle": false,

	// Habilita um pop-up que mostra a documentação do parâmetro e as informações de tipo conforme você digita.
	"editor.parameterHints.enabled": true,

	// Controla se deve focar o editor embutido ou a árvore no widget de espiada.
	//  - tree: Focalizar a árvore ao abrir a espiada
	//  - editor: Focalizar o editor ao abrir a espiada
	"editor.peekWidgetDefaultFocus": "tree",

	// Controla se as sugestões devem aparecer automaticamente durante a digitação. Isso pode ser controlado para digitar comentários, cadeias de caracteres e outros códigos. A sugestão rápida pode ser configurada para ser exibida como texto fantasma ou com o widget de sugestão. Esteja ciente também da configuração '#editor.suggestOnTriggerCharacters#' que controla se as sugestões são acionadas por caracteres especiais.
	"editor.quickSuggestions": {
		"other": "on",
		"comments": "off",
		"strings": "off"
	},

	// Controla o atraso em milissegundos após o qual as sugestões rápidas serão exibidas.
	"editor.quickSuggestionsDelay": 10,

	// Habilitar/desabilitar a capacidade de visualizar alterações antes de renomear
	"editor.rename.enablePreview": true,

	// Preterido. Use `editor.linkedEditing`.
	// Controla se o editor é renomeado automaticamente no tipo.
	"editor.renameOnType": false,

	// Controla se o editor deve renderizar caracteres de controle.
	"editor.renderControlCharacters": true,

	// Renderizar o número da última linha quando o arquivo terminar com uma nova linha.
	"editor.renderFinalNewline": true,

	// Controla como o editor deve renderizar o realce da linha atual.
	//  - none
	//  - gutter
	//  - line
	//  - all: Realça a medianiz e a linha atual.
	"editor.renderLineHighlight": "line",

	// Controla se o editor deve renderizar o realce da linha atual somente quando está focalizado.
	"editor.renderLineHighlightOnlyWhenFocus": false,

	// Controla como o editor deve renderizar caracteres de espaço em branco.
	//  - none
	//  - boundary: Renderizar caracteres de espaço em branco, exceto espaços únicos entre palavras.
	//  - selection: Renderizar caracteres de espaço em branco somente no texto selecionado.
	//  - trailing: Renderizar somente os caracteres de espaço em branco à direita.
	//  - all
	"editor.renderWhitespace": "selection",

	// Controla se as seleções devem ter cantos arredondados.
	"editor.roundedSelection": true,

	// Renderizar réguas verticais após um determinado número de caracteres com espaçamento uniforme. Usar vários valores para várias réguas. Nenhuma régua será desenhada se a matriz estiver vazia.
	"editor.rulers": [],

	// Controla a visibilidade da barra de rolagem horizontal.
	//  - auto: A barra de rolagem horizontal estará visível somente quando necessário.
	//  - visible: A barra de rolagem horizontal sempre estará visível.
	//  - hidden: A barra de rolagem horizontal sempre estará oculta.
	"editor.scrollbar.horizontal": "auto",

	// A altura da barra de rolagem horizontal.
	"editor.scrollbar.horizontalScrollbarSize": 12,

	// Controla se os cliques rolam por página ou saltam para a posição do clique.
	"editor.scrollbar.scrollByPage": false,

	// Controla a visibilidade da barra de rolagem vertical.
	//  - auto: A barra de rolagem vertical estará visível somente quando necessário.
	//  - visible: A barra de rolagem vertical sempre estará visível.
	//  - hidden: A barra de rolagem vertical sempre estará oculta.
	"editor.scrollbar.vertical": "auto",

	// A largura da barra de rolagem vertical.
	"editor.scrollbar.verticalScrollbarSize": 14,

	// Controla o número de caracteres extras acima do qual o editor será rolado horizontalmente.
	"editor.scrollBeyondLastColumn": 4,

	// Controla se o editor será rolado para além da última linha.
	"editor.scrollBeyondLastLine": true,

	// Rolar apenas ao longo do eixo predominante ao rolar vertical e horizontalmente ao mesmo tempo. Evita o descompasso horizontal ao rolar verticalmente em um trackpad.
	"editor.scrollPredominantAxis": true,

	// Controla se o editor deve realçar correspondências semelhantes à seleção.
	"editor.selectionHighlight": true,

	// Controla se o semanticHighlighting é mostrado para as linguagens que dão suporte a ele.
	//  - true: Realce de semântica habilitado para todos os temas de cor.
	//  - false: Realce de semântica desabilitado para todos os temas de cor.
	//  - configuredByTheme: O realce de semântica é configurado pela configuração `semanticHighlighting` do tema de cor atual.
	"editor.semanticHighlighting.enabled": "configuredByTheme",

	// Substitui os estilos e a cor do token semântico do editor do tema de cores selecionado no momento.
	"editor.semanticTokenColorCustomizations": {},

	// Controla variáveis preteridas do tachado.
	"editor.showDeprecated": true,

	// Controla quando os controles de dobragem na medianiz são exibidos.
	//  - always: Sempre mostrar os controles de dobragem.
	//  - never: Nunca mostre os controles dobráveis e reduza o tamanho da calha.
	//  - mouseover: Mostrar somente os controles de dobragem quando o mouse estiver sobre a medianiz.
	"editor.showFoldingControls": "mouseover",

	// Controla o esmaecimento do código não usado.
	"editor.showUnused": true,

	// Se os espaços em branco à direita e à esquerda sempre devem ser selecionados.
	"editor.smartSelect.selectLeadingAndTrailingWhitespace": true,

	// Controla se o editor rolará usando uma animação.
	"editor.smoothScrolling": false,

	// Controla se cercar com trechos ou trechos de modelo de arquivo são exibidos como ações de código.
	"editor.snippets.codeActions.enabled": true,

	// Controla se os snippets são mostrados com outras sugestões e como são classificados.
	//  - top: Mostrar sugestões de snippet na parte superior de outras sugestões.
	//  - bottom: Mostrar sugestões de snippet abaixo de outras sugestões.
	//  - inline: Mostrar sugestões de snippets com outras sugestões.
	//  - none: Não mostrar sugestões de snippet.
	"editor.snippetSuggestions": "inline",

	// Manter editores de espiada abertos mesmo ao clicar duas vezes no conteúdo deles ou ao pressionar `Escape`.
	"editor.stablePeek": false,

	// Mostra os escopos atuais aninhados durante a rolagem na parte superior do editor.
	"editor.stickyScroll.enabled": false,

	// Define o número máximo de linhas autoadesivas a serem mostradas.
	"editor.stickyScroll.maxLineCount": 5,

	// Emular o comportamento da seleção dos caracteres de tabulação ao usar espaços para recuo. A seleção respeitará as paradas de tabulação.
	"editor.stickyTabStops": false,

	// Esta configuração foi preterida. Use configurações separadas como 'editor.suggest.showKeywords' ou 'editor.suggest.showSnippets'.
	// 
	"editor.suggest.filteredTypes": {},

	// Controla se a filtragem e classificação de sugestões considera erros pequenos de digitação.
	"editor.suggest.filterGraceful": true,

	// Controla se as palavras são substituídas ao aceitar as conclusões. Observe que isso depende de extensões que optam por esse recurso.
	//  - insert: Inserir sugestão sem substituir o texto à direita do cursor.
	//  - replace: Inserir a sugestão e substituir o texto à direita do cursor.
	"editor.suggest.insertMode": "insert",

	// Controla se a classificação favorece palavras que aparecem próximas ao cursor.
	"editor.suggest.localityBonus": false,

	// Quando ativado, a filtragem IntelliSense requer que o primeiro caractere corresponda a uma palavra inicial, por exemplo, `c` no `Console` ou `WebContext`, mas _não_ na `descrição`. Quando desativado, o IntelliSense mostrará mais resultados, mas ainda os classificará por qualidade de correspondência.
	"editor.suggest.matchOnWordStartOnly": true,

	// Esta configuração foi preterida. Agora, o widget de sugestão pode ser redimensionado.
	// 
	"editor.suggest.maxVisibleSuggestions": 0,

	// Controla se a visualização do resultado da sugestão é apresentada no editor.
	"editor.suggest.preview": false,

	// Controla se as seleções de sugestão lembradas são compartilhadas entre vários workspaces e janelas (precisa de `editor.suggestSelection`).
	"editor.suggest.shareSuggestSelections": false,

	// Quando habilitado, o IntelliSense mostra sugestões de `class`.
	"editor.suggest.showClasses": true,

	// Quando habilitado, o IntelliSense mostra sugestões de `color`.
	"editor.suggest.showColors": true,

	// Quando habilitado, o IntelliSense mostra sugestões de `constant`.
	"editor.suggest.showConstants": true,

	// Quando habilitado, o IntelliSense mostra sugestões de `constructor`.
	"editor.suggest.showConstructors": true,

	// Quando habilitado, o IntelliSense mostra sugestões de `customcolor`.
	"editor.suggest.showCustomcolors": true,

	// Quando habilitado, o IntelliSense mostra sugestões 'preteridas'.
	"editor.suggest.showDeprecated": true,

	// Quando habilitado, o IntelliSense mostra sugestões de `enumMember`.
	"editor.suggest.showEnumMembers": true,

	// Quando habilitado, o IntelliSense mostra sugestões de `enum`.
	"editor.suggest.showEnums": true,

	// Quando habilitado, o IntelliSense mostra sugestões de `event`.
	"editor.suggest.showEvents": true,

	// Quando habilitado, o IntelliSense mostra sugestões de `field`.
	"editor.suggest.showFields": true,

	// Quando habilitado, o IntelliSense mostra sugestões de `file`.
	"editor.suggest.showFiles": true,

	// Quando habilitado, o IntelliSense mostra sugestões de `folder`.
	"editor.suggest.showFolders": true,

	// Quando habilitado, o IntelliSense mostra sugestões de `function`.
	"editor.suggest.showFunctions": true,

	// Controla se os ícones em sugestões devem ser mostrados ou ocultados.
	"editor.suggest.showIcons": true,

	// Controla se os detalhes da sugestão são mostrados embutidos com o rótulo ou somente no widget de detalhes
	"editor.suggest.showInlineDetails": true,

	// Quando habilitado, o IntelliSense mostra sugestões de `interface`.
	"editor.suggest.showInterfaces": true,

	// Quando habilitado, o IntelliSense mostra sugestões de `issues`.
	"editor.suggest.showIssues": true,

	// Quando habilitado, o IntelliSense mostra sugestões de `keyword`.
	"editor.suggest.showKeywords": true,

	// Quando habilitado, o IntelliSense mostra sugestões de `method`.
	"editor.suggest.showMethods": true,

	// Quando habilitado, o IntelliSense mostra sugestões de `module`.
	"editor.suggest.showModules": true,

	// Quando habilitado, o IntelliSense mostra sugestões de `operator`.
	"editor.suggest.showOperators": true,

	// Quando habilitado, o IntelliSense mostra sugestões de `property`.
	"editor.suggest.showProperties": true,

	// Quando habilitado, o IntelliSense mostra sugestões de `reference`.
	"editor.suggest.showReferences": true,

	// Quando habilitado, o IntelliSense mostra sugestões de `snippet`.
	"editor.suggest.showSnippets": true,

	// Controla a visibilidade da barra de status na parte inferior do widget de sugestão.
	"editor.suggest.showStatusBar": false,

	// Quando habilitado, o IntelliSense mostra sugestões de `struct`.
	"editor.suggest.showStructs": true,

	// Quando habilitado, o IntelliSense mostra sugestões de `typeParameter`.
	"editor.suggest.showTypeParameters": true,

	// Quando habilitado, o IntelliSense mostra sugestões de `unit`.
	"editor.suggest.showUnits": true,

	// Quando habilitado, o IntelliSense mostra sugestões de `user`.
	"editor.suggest.showUsers": true,

	// Quando habilitado, o IntelliSense mostra sugestões de `value`.
	"editor.suggest.showValues": true,

	// Quando habilitado, o IntelliSense mostra sugestões de `variable`.
	"editor.suggest.showVariables": true,

	// Quando habilitado, o IntelliSense mostra sugestões de `text`.
	"editor.suggest.showWords": true,

	// Controla se um snippet ativo impede sugestões rápidas.
	"editor.suggest.snippetsPreventQuickSuggestions": true,

	// Tamanho da fonte para o widget sugerido. Quando definido como `0`, o valor de `editor.fontSize` é usado.
	"editor.suggestFontSize": 0,

	// Altura da linha para o widget de sugestão. Quando definido como `0`, o valor de `editor.lineHeight` é usado. O valor mínimo é 8.
	"editor.suggestLineHeight": 0,

	// Controla se as sugestões devem ser exibidas automaticamente ao digitar caracteres de gatilho.
	"editor.suggestOnTriggerCharacters": true,

	// Controla como as sugestões são previamente selecionadas ao mostrar a lista de sugestões.
	//  - first: Sempre selecionar a primeira sugestão.
	//  - recentlyUsed: Selecionar sugestões recentes, a menos que outra digitação selecione uma, por exemplo, `console.| -> console.log`, pois `log` foi concluído recentemente.
	//  - recentlyUsedByPrefix: Selecionar sugestões com base nos prefixos anteriores que concluíram essas sugestões, por exemplo, `co -> console` e `con -> const`.
	"editor.suggestSelection": "first",

	// Habilita as conclusões da tabulação.
	//  - on: A conclusão da tabulação inserirá a melhor sugestão de correspondência quando você pressionar a tecla Tab.
	//  - off: Desabilitar as conclusões da tabulação.
	//  - onlySnippets: A conclusão da tabulação insere snippets quando o prefixo corresponde. Funciona melhor quando 'quickSuggestions' não está habilitado.
	"editor.tabCompletion": "off",

	// O número de espaços aos qual uma guia é igual. Essa configuração é substituída com base no conteúdo do arquivo quando `editor.detectIndentation` está ativado.
	"editor.tabSize": 4,

	// Substitui o estilo da fonte e as cores de sintaxe do editor do tema de cores selecionado no momento.
	"editor.tokenColorCustomizations": {},

	// Remover o espaço em branco inserido automaticamente à direita.
	"editor.trimAutoWhitespace": true,

	// Controla se clicar no conteúdo vazio depois de uma linha dobrada desdobrará a linha.
	"editor.unfoldOnClickAfterEndOfLine": false,

	// Define os caracteres permitidos que não estão sendo destacados.
	"editor.unicodeHighlight.allowedCharacters": {},

	// Caracteres unicode que são comuns em localidades permitidas não estão sendo destacados.
	"editor.unicodeHighlight.allowedLocales": {
		"_os": true,
		"_vscode": true
	},

	// Controla se são realçados caracteres que podem ser confundidos com caracteres ASCII básicos, exceto aqueles que são comuns no local do usuário atual.
	"editor.unicodeHighlight.ambiguousCharacters": true,

	// Controla se os caracteres nos comentários também devem ser sujeitos a destaque unicode.
	"editor.unicodeHighlight.includeComments": "inUntrustedWorkspace",

	// Controla se as cadeias de caracteres também devem estar sujeitas ao realce do unicode.
	"editor.unicodeHighlight.includeStrings": true,

	// Controla se os caracteres que apenas reservam espaço ou não têm largura alguma são destacados.
	"editor.unicodeHighlight.invisibleCharacters": true,

	// Controla se todos os caracteres ASCII não-básicos são destacados. Somente caracteres entre U+0020 e U+007E, tabulação, alimentação de linha e retorno de carro são considerados ASCII básicos.
	"editor.unicodeHighlight.nonBasicASCII": "inUntrustedWorkspace",

	// Remover terminadores de linha incomuns que possam causar problemas.
	//  - auto: Terminadores de linha incomuns são removidos automaticamente.
	//  - off: Terminadores de linha incomuns são ignorados.
	//  - prompt: Terminadores de linha incomuns solicitam ser removidos.
	"editor.unusualLineTerminators": "prompt",

	// A inserção e a exclusão de um espaço em branco seguem as paradas da tabulação.
	"editor.useTabStops": true,

	// Controla se as conclusões devem ser calculadas com base em palavras do documento.
	"editor.wordBasedSuggestions": true,

	// Controla em quais documentos as conclusões baseadas em palavras são computadas.
	//  - currentDocument: Sugerir palavras apenas do documento ativo.
	//  - matchingDocuments: Sugerir palavras de todos os documentos abertos da mesma linguagem.
	//  - allDocuments: Sugerir palavras de todos os documentos abertos.
	"editor.wordBasedSuggestionsMode": "matchingDocuments",

	// Caracteres que serão usados como separadores de palavras ao fazer operações ou navegações relacionadas a palavras.
	"editor.wordSeparators": "`~!@#$%^&*()-=+[{]}\\|;:'\",.<>/?",

	// Controla como as linhas devem ser quebradas.
	//  - off: As linhas nunca serão quebradas.
	//  - on: As linhas serão quebradas na largura do visor.
	//  - wordWrapColumn: As linhas serão quebradas em `editor.wordWrapColumn`.
	//  - bounded: As linhas serão quebradas no mínimo do visor e de `editor.wordWrapColumn`.
	"editor.wordWrap": "off",

	// Controla a coluna de quebra de linha do editor quando `editor.wordWrap` é `wordWrapColumn` ou `bounded`.
	"editor.wordWrapColumn": 80,

	// Controla o recuo de linhas quebradas.
	//  - none: Sem recuo. Linhas quebradas começam na coluna 1.
	//  - same: As linhas quebradas têm o mesmo recuo que o pai.
	//  - indent: As linhas quebradas obtêm recuo de +1 para o pai.
	//  - deepIndent: As linhas quebradas obtêm recuo de +2 para o pai.
	"editor.wrappingIndent": "same",

	// Controla o algoritmo que computa pontos de quebra de linha.
	//  - simple: Assume que todos os caracteres têm a mesma largura. Este é um algoritmo rápido que funciona corretamente para fontes com espaçamento uniforme e determinados scripts (como caracteres latinos) em que os glifos têm a mesma largura.
	//  - advanced: Delega a computação do ponto de quebra de linha para o navegador. Este é um algoritmo lento, que pode causar congelamento para arquivos grandes, mas funciona corretamente em todos os casos.
	"editor.wrappingStrategy": "simple",

	// Controla quando a faixa do modo restrito é mostrada.
	//  - always: Mostrar a faixa sempre que um workspace não confiável estiver aberto.
	//  - untilDismissed: Mostra a faixa quando um espaço de trabalho não confiável for aberto até ser ignorado.
	//  - never: Não mostrar a faixa quando um workspace não confiável estiver aberto.
	"security.workspace.trust.banner": "untilDismissed",

	// Controla se a janela vazia é confiável por padrão dentro do VS Code. Quando usada com '#security.workspace.trust.untrustedFiles#', você pode habilitar a funcionalidade completa do VS Code sem solicitar em uma janela vazia.
	"security.workspace.trust.emptyWindow": true,

	// Controla se a confiança do espaço de trabalho está habilitada no VS Code.
	"security.workspace.trust.enabled": true,

	// Controla quando a solicitação de inicialização para confiar em um espaço de trabalho é mostrada.
	//  - always: Peça confiança sempre que um espaço de trabalho não confiável for aberto.
	//  - once: Peça confiança na primeira vez que um espaço de trabalho não confiável for aberto.
	//  - never: Não peça confiança quando um espaço de trabalho não confiável for aberto.
	"security.workspace.trust.startupPrompt": "once",

	// Controla como lidar com a abertura de arquivos não confiáveis em um espaço de trabalho confiável. Esta configuração também se aplica a abrir arquivos em uma janela vazia, que é confiável via '#security.workspace.trust.emptyWindow#'.
	//  - prompt: Pergunte como lidar com arquivos não confiáveis para cada espaço de trabalho. Depois que arquivos não confiáveis forem introduzidos a um espaço de trabalho confiável, você não será solicitado novamente.
	//  - open: Sempre permita que arquivos não confiáveis sejam introduzidos a um espaço de trabalho confiável sem solicitar.
	//  - newWindow: Sempre abra arquivos não confidenciais em uma janela separada no modo restrito sem solicitar.
	"security.workspace.trust.untrustedFiles": "prompt",

	// Controla o comportamento de clicar em um ícone da barra de atividades no workbench.
	//  - toggle: Ocultar a barra lateral se o item clicado já estiver visível.
	//  - focus: Focar na barra lateral se o item clicado já estiver visível.
	"workbench.activityBar.iconClickBehavior": "toggle",

	// Controla a visibilidade da barra de atividade no workbench.
	"workbench.activityBar.visible": true,

	// Substitui cores do tema de cores selecionado no momento.
	"workbench.colorCustomizations": {},

	// Especifica o tema de cores usado no workbench.
	"workbench.colorTheme": "Default Dark+",

	// Controla o número de comandos usados recentemente para manter o histórico da paleta de comandos. Defina como 0 para desabilitar o histórico de comandos.
	"workbench.commandPalette.history": 50,

	// Controla se a última entrada digitada na paleta de comandos deverá ser restaurada ao ser aberta na próxima vez.
	"workbench.commandPalette.preserveInput": false,

	// Se um editor que corresponda a um dos tipos listados for aberto como o primeiro em um grupo de editores e mais de um grupo estiver aberto, o grupo será automaticamente bloqueado. Grupos bloqueados serão usados apenas para abrir os editores quando explicitamente escolhidos pelo gesto do usuário (por exemplo, arrastar e soltar), mas não por padrão. Consequentemente, o editor ativo em um grupo bloqueado tem menos probabilidade de ser substituído acidentalmente por um editor diferente.
	"workbench.editor.autoLockGroups": {
		"default": false,
		"workbench.editorinputs.searchEditorInput": false,
		"vscode-interactive-input": false,
		"interactive": false,
		"vscode.markdown.preview.editor": false,
		"imagePreview.previewEditor": false,
		"vscode.audioPreview": false,
		"vscode.videoPreview": false,
		"jsProfileVisualizer.cpuprofile.table": false,
		"jsProfileVisualizer.heapprofile.table": false,
		"gitlens.rebase": false,
		"java.formatterSettingsEditor": false,
		"terminalEditor": true,
		"jupyter-notebook": false,
		"mainThreadWebview-markdown.preview": false
	},

	// Controla se o layout centralizado deve ser redimensionado automaticamente para a largura máxima quando mais de um grupo é aberto. Uma vez que apenas um grupo estiver aberto, ele será redimensionado para a largura centralizada original.
	"workbench.editor.centeredLayoutAutoResize": true,

	// Controla o comportamento de grupos de editor vazios quando a última guia do grupo é fechada. Quando habilitados, os grupos vazios serão fechados automaticamente. Quando desabilitados, os grupos vazios continuarão fazendo parte da grade.
	"workbench.editor.closeEmptyGroups": true,

	// Controla se os editores que mostram um arquivo que foi aberto durante a sessão devem fechar automaticamente ao serem excluídos ou renomeados por algum outro processo. Desabilitar isso manterá o editor aberto em tal evento. Observe que a exclusão de dentro do aplicativo sempre fechará o editor e que os editores com alterações não salvas nunca fecharão para preservar seus dados.
	"workbench.editor.closeOnFileDelete": false,

	// Controla se as decorações de arquivo do editor devem usar selos.
	"workbench.editor.decorations.badges": true,

	// Controla se as decorações de arquivo do editor devem usar cores.
	"workbench.editor.decorations.colors": true,

	// O editor padrão para arquivos detectados como binários. Se indefinido, o usuário será apresentado a um seletor.
	"workbench.editor.defaultBinaryEditor": "",

	// Controla se os editores abertos são mostrados como editores de visualização. Os editores de visualização não permanecem abertos, são reutilizados até serem explicitamente definidos para serem mantidos abertos (por exemplo, por meio de clique duplo ou edição) e mostram os nomes dos arquivos em itálico.
	"workbench.editor.enablePreview": true,

	// Controla se os editores permanecem na visualização quando uma navegação de código é iniciada a partir deles. Os editores de visualização não permanecem abertos e são reutilizados até que sejam explicitamente definidos para serem mantidos abertos (por exemplo, por meio do clique duplo ou edição). Esse valor é ignorado quando `workbench.editor.enablePreview` está desabilitado.
	"workbench.editor.enablePreviewFromCodeNavigation": false,

	// Controla se os editores abertos a partir da Abertura Rápida são mostrados como editores de visualização. Os editores de visualização não permanecem abertos e são reutilizados até que sejam explicitamente definidos para serem mantidos abertos (por exemplo, por meio do clique duplo ou edição). Esse valor é ignorado quando `workbench.editor.enablePreview` está desabilitado.
	"workbench.editor.enablePreviewFromQuickOpen": false,

	// Controla se as guias são fechadas na ordem usada mais recentemente ou da esquerda para a direita.
	"workbench.editor.focusRecentEditorAfterClose": true,

	// Controla se uma borda superior está desenhada nas guias para editores que têm alterações não salvas. Esse valor é ignorado quando o `workbench.editor.showTabs` está desabilitado.
	"workbench.editor.highlightModifiedTabs": false,

	// Permite o uso do histórico do editor na detecção de idioma. Isso faz com que a detecção automática de idioma privilegie os idiomas que foram abertos recentemente e permite que a detecção de Idioma automática opere com entradas menores.
	"workbench.editor.historyBasedLanguageDetection": true,

	// Controla o formato do rótulo de um editor.
	//  - default: Mostrar o nome do arquivo. Quando as guias estão habilitadas e dois arquivos têm o mesmo nome em um grupo, as seções de diferenciação de cada caminho de arquivo são adicionadas. Quando as guias estiverem desabilitadas, o caminho relativo à pasta do workspace será mostrado se o editor estiver ativo.
	//  - short: Mostrar o nome do arquivo seguido por seu nome de diretório.
	//  - medium: Mostrar o nome do arquivo seguido pelo caminho relativo à pasta do workspace.
	//  - long: Mostrar o nome do arquivo seguido pelo caminho absoluto.
	"workbench.editor.labelFormat": "default",

	// Controla se a linguagem em um editor de texto é detectada automaticamente, a menos que tenha sido explicitamente definido pelo seletor de linguagem. Isso também pode ser definido por linguagem para que você possa especificar as linguagens das quais não deseja ser desativado. Isso é útil para linguagens como Markdown, que geralmente contêm outras linguagens que podem levar a detecção de linguagem a pensar que é a linguagem incorporada e não Markdown.
	"workbench.editor.languageDetection": true,

	// Quando habilitado, mostra uma correção rápida da barra de status quando o idioma do editor não corresponde ao idioma do conteúdo detectado.
	"workbench.editor.languageDetectionHints": {
		"untitledEditors": true,
		"notebookEditors": true
	},

	// Controla se o número de editores abertos deve ser limitado ou não. Quando habilitado, os editores menos usados recentemente fecharão para abrir espaço para os editores recém-abertos.
	"workbench.editor.limit.enabled": false,

	// Controla se o número máximo de editores abertos deve excluir os editores sujos para contagem até o limite configurado.
	"workbench.editor.limit.excludeDirty": false,

	// Controla se o limite de editores abertos máximos deve ser aplicado por grupo de editor ou por todos os grupos de editor.
	"workbench.editor.limit.perEditorGroup": false,

	// Controla o número máximo de editores abertos. Use a configuração `workbench.editor.limit.perEditorGroup` para controlar esse limite por grupo de editores ou em todos os grupos.
	"workbench.editor.limit.value": 10,

	// Habilita o uso dos botões quatro e cinco do mouse para os comandos 'Voltar' e 'Avançar'.
	"workbench.editor.mouseBackForwardToNavigate": true,

	// Controla o escopo do histórico de navegação em editores para comandos como 'Voltar' e 'Avançar'.
	//  - default: Navegar por todos os editores abertos e grupos de editores.
	//  - editorGroup: Navegar somente em editores do grupo de editores ativo.
	//  - editor: Navegar somente no editor ativo.
	"workbench.editor.navigationScope": "default",

	// Controla onde os editores são abertos. Selecione `left` ou `right` para abrir editores à esquerda ou à direita do editor ativo no momento. Selecione `first` ou `last` para abrir editores independentemente do que está atualmente ativo.
	"workbench.editor.openPositioning": "right",

	// Controla a direção padrão dos editores que são abertos lado a lado (por exemplo, no Explorador). Por padrão, os editores serão abertos no lado direito do editor ativo no momento. Se esta opção for alterada para `down`, os editores serão abertos abaixo daquele que está ativo no momento.
	"workbench.editor.openSideBySideDirection": "right",

	// Controla o dimensionamento das guias fixadas do editor. As guias fixadas são classificadas no início de todas as guias abertas e, normalmente, não são fechadas até que sejam desafixadas. Esse valor é ignorado quando `workbench.editor.showTabs` é desabilitado.
	//  - normal: Uma guia fixa herda a aparência das guias não fixas.
	//  - compact: Uma guia fixa será mostrada em um formato compacto com apenas o ícone ou a primeira letra do nome do editor.
	//  - shrink: Uma guia fixa é reduzida a um tamanho compacto fixo mostrando partes do nome do editor.
	"workbench.editor.pinnedTabSizing": "normal",

	// Quando habilitado, um modelo de detecção de idioma que leva em conta o histórico do editor terá maior precedência.
	"workbench.editor.preferHistoryBasedLanguageDetection": true,

	// Restaura o último estado de visualização do editor (por exemplo, posição de rolagem) ao reabrir os editores após terem sido fechados. O estado de visualização do editor é armazenado por grupo de editores e descartado quando um grupo é fechado. Use a configuração `workbench.editor.sharedViewState` para usar o último estado de visualização conhecido em todos os grupos de editores, caso nenhum estado de visualização anterior tenha sido encontrado para um grupo de editores.
	"workbench.editor.restoreViewState": true,

	// Controla se um editor é revelado em um dos grupos visíveis, se aberto. Se desabilitado, um editor preferirá abrir no grupo de editor atualmente ativo. Se habilitado, um editor já aberto será revelado em vez de aberto novamente no grupo de editor ativo no momento. Observe que há alguns casos em que essa configuração é ignorada, por exemplo, ao forçar um editor a abrir em um grupo específico ou no lado do grupo ativo no momento.
	"workbench.editor.revealIfOpen": false,

	// Controla se a rolagem sobre as guias vai abri-las ou não. Por padrão, as guias serão apenas exibidas após a rolagem, mas não serão abertas. Você pode pressionar e manter pressionada a tecla Shift durante a rolagem para alterar esse comportamento durante esse momento. Este valor é ignorado quando a opção `workbench.editor.showTabs` está desabilitada.
	"workbench.editor.scrollToSwitchTabs": false,

	// Preserva o estado da exibição do editor mais recente (por exemplo, posição de rolagem) em todos os grupos de editores e restaura isso se nenhum estado de visualização do editor específico for encontrado para o grupo de editores.
	"workbench.editor.sharedViewState": false,

	// Controla se editores abertos devem ser mostrados com um ícone. Isso exige que um tema de ícone de arquivo seja habilitado também.
	"workbench.editor.showIcons": true,

	// Controla se os editores abertos devem ser exibidos em guias.
	"workbench.editor.showTabs": true,

	// Controla o layout para quando um editor é dividido em um grupo de editores para ser vertical ou horizontal.
	//  - vertical: Os editores são posicionados de cima para baixo.
	//  - horizontal: Os editores são posicionados da esquerda para a direita.
	"workbench.editor.splitInGroupLayout": "horizontal",

	// Controla se os grupos do editor podem ser divididos das operações de arrastar e soltar soltando um editor ou um arquivo nas bordas da área do editor.
	"workbench.editor.splitOnDragAndDrop": true,

	// Controla o dimensionamento dos grupos do editor ao dividi-los.
	//  - distribute: Divide todos os grupos do editor em partes iguais.
	//  - split: Divide o grupo do editor ativo em partes iguais.
	"workbench.editor.splitSizing": "distribute",

	// Controla a posição dos botões de fechar das guias do editor ou os desabilita quando definido como 'desativado'. Esse valor é ignorado quando `workbench.editor.showTabs` está desabilitado.
	"workbench.editor.tabCloseButton": "right",

	// Controla o dimensionamento das guias do editor. Esse valor é ignorado quando `workbench.editor.showTabs` está desabilitado.
	//  - fit: Sempre mantenha as guias grandes o suficiente para mostrar o rótulo de editor completo.
	//  - shrink: Permitir que as guias sejam menores quando o espaço disponível não for suficiente para mostrar todas as guias de uma vez.
	"workbench.editor.tabSizing": "fit",

	// Controla a altura das barras de rolagem usadas para guias e trilhas na área do título do editor.
	//  - default: O tamanho padrão.
	//  - large: Aumenta o tamanho para facilitar a captura com o mouse.
	"workbench.editor.titleScrollbarSizing": "default",

	// Controla se a dica de texto sem título deve estar visível no editor.
	"workbench.editor.untitled.hint": "text",

	// Controla o formato do rótulo de um editor sem título.
	//  - content: O nome do arquivo sem título é derivado do conteúdo de sua primeira linha, a menos que tenha um caminho de arquivo associado. Ele fará fallback para o nome caso a linha esteja vazia ou não contenha caracteres de palavras.
	//  - name: O nome do arquivo sem título não é derivado do conteúdo do arquivo.
	"workbench.editor.untitled.labelFormat": "content",

	// Controla se as guias devem ser encapsuladas em várias linhas ao exceder o espaço disponível ou se uma barra de rolagem deve ser exibida em vez disso. Esse valor é ignorado quando `workbench.editor.showTabs` é desabilitado.
	"workbench.editor.wrapTabs": false,

	// Configurar padrões de glob para editores (por exemplo, '"*.hex": "hexEditor.hexEdit""). Eles têm precedência sobre o comportamento padrão.
	"workbench.editorAssociations": {},

	// Controla se deve retomar automaticamente uma sessão de edição disponível para o espaço de trabalho atual.
	//  - onReload: Retomada automática da sessão de edição disponível no recarregamento da janela.
	//  - off: Nunca tente retomar uma sessão de edição.
	"workbench.editSessions.autoResume": "onReload",

	// Controla se o usuário deve solicitar que o usuário armazene as sessões de edição ao usar Continuar trabalhando.
	//  - prompt: Peça ao usuário para entrar para armazenar sessões de edição com Continuar trabalhando.
	//  - off: Não use sessões de edição com Continuar trabalhando, a menos que o usuário já tenha ativado as sessões de edição.
	"workbench.editSessions.continueOn": "prompt",

	// Busca experimentos para execução usando um serviço online da Microsoft.
	"workbench.enableExperiments": true,

	// Esta configuração está preterida em favor de `workbench.editSessions.autoResume`.
	// 
	//  - onReload: Retomada automática da sessão de edição disponível no recarregamento da janela.
	//  - off: Nunca tente retomar uma sessão de edição.
	"workbench.experimental.editSessions.autoResume": "onReload",

	// Controla se deve armazenar automaticamente uma sessão de edição disponível para o espaço de trabalho atual.
	//  - onShutdown: Armazenar automaticamente a sessão da edição atual ao fechar a janela.
	//  - off: Nunca tentar armazenar automaticamente uma sessão de edição.
	"workbench.experimental.editSessions.autoStore": "off",

	// Esta configuração está preterida em favor de `workbench.experimental.continueOn`.
	// Controla se o usuário deve solicitar que o usuário armazene as sessões de edição ao usar Continuar trabalhando.
	//  - prompt: Peça ao usuário para entrar para armazenar sessões de edição com Continuar trabalhando.
	//  - off: Não use sessões de edição com Continuar trabalhando, a menos que o usuário já tenha ativado as sessões de edição.
	"workbench.experimental.editSessions.continueOn": "prompt",

	// Esta configuração está preterida porque as sessões de edição não são mais experimentais. Consulte `workbench.editSessions.autoResume#` e `#workbench.editSessions.continueOn` para configurar o comportamento relacionado a Editar Sessões.
	// 
	"workbench.experimental.editSessions.enabled": true,

	// Essa configuração foi preterida em favor de `workbench.layoutControl.enabled`
	// Controla se os controles de layout na barra de título personalizada são ativados por meio de `window.titleBarStyle`.
	"workbench.experimental.layoutControl.enabled": false,

	// Essa configuração foi preterida em favor de `workbench.layoutControl.type`
	// Controla se o controle de layout na barra de título personalizada é exibido como um único botão de menu ou com vários comandos de interface do usuário.
	//  - menu: Mostra um único botão com uma lista suspensa de opções de layout.
	//  - toggles: Mostra vários botões para alternar a visibilidade dos painéis e da barra lateral.
	//  - both: Mostra os botões suspenso e de alternância.
	"workbench.experimental.layoutControl.type": "both",

	// Controla se a visualização de recurso de perfis de configurações deve ser habilitado.
	"workbench.experimental.settingsProfiles.enabled": false,

	// Configurar o abridor a ser usado para URIs externos (por exemplo, http, https).
	"workbench.externalUriOpeners": {},

	// Controla o atraso em milissegundos após o qual a focalização é exibida para os itens do Workbench (por exemplo, alguns itens do modo de exibição de árvore fornecidos na extensão). Os itens já visíveis podem exigir uma atualização para refletirem essa alteração na configuração.
	"workbench.hover.delay": 500,

	// Especifica o tema do ícone de arquivo usado no workbench ou 'null' para não mostrar ícones de arquivo.
	//  - null: Nenhum ícone de arquivo
	//  - vs-minimal
	//  - vs-seti
	//  - rose-pine-icons
	//  - material-icon-theme
	//  - vscode-icons
	"workbench.iconTheme": "vs-seti",

	// Controla se os controles de layout na barra de título personalizada são ativados por meio de `window.titleBarStyle`.
	"workbench.layoutControl.enabled": true,

	// Controla se o controle de layout na barra de título personalizada é exibido como um único botão de menu ou com vários comandos de interface do usuário.
	//  - menu: Mostra um único botão com uma lista suspensa de opções de layout.
	//  - toggles: Mostra vários botões para alternar a visibilidade dos painéis e da barra lateral.
	//  - both: Mostra os botões suspenso e de alternância.
	"workbench.layoutControl.type": "both",

	// Controla o modo de localização padrão para listas e árvores no workbench.
	//  - highlight: Realce os elementos ao pesquisar. Mais para cima e para baixo, a navegação atravessará apenas os elementos realçados.
	//  - filter: Filtrar elementos ao pesquisar.
	"workbench.list.defaultFindMode": "highlight",

	// Multiplicador de velocidade de rolagem ao pressionar `Alt`.
	"workbench.list.fastScrollSensitivity": 5,

	// Controla se as listas e árvores dão suporte à rolagem horizontal no workbench. Aviso: a ativação desta configuração tem uma implicação de desempenho.
	"workbench.list.horizontalScrolling": false,

	// Use 'workbench.list.defaultFindMode' em vez disso.
	// Controla o estilo de navegação pelo teclado para listas e árvores no workbench. Pode ser simples, realçar e filtrar.
	//  - simple: A navegação pelo teclado simples tem como foco elementos que correspondem à entrada do teclado. A correspondência é feita somente em prefixos.
	//  - highlight: Realçar a navegação pelo teclado realça elementos que correspondem à entrada do teclado. A navegação mais acima e abaixo passará apenas pelos elementos realçados.
	//  - filter: Filtrar a navegação pelo teclado filtrará e ocultará todos os elementos que não correspondem à entrada do teclado.
	"workbench.list.keyboardNavigation": "highlight",

	// Um multiplicador a ser usado no `deltaX` e no `deltaY` dos eventos de rolagem do mouse.
	"workbench.list.mouseWheelScrollSensitivity": 1,

	// O modificador a ser usado para adicionar um item em árvores e listas a uma seleção múltipla com o mouse (por exemplo, no explorador, abra os editores e a exibição de scm). Os gestos de mouse 'Abrir ao Lado', se compatíveis, se adaptarão de modo que não entrarão em conflito com o modificador de seleção múltipla.
	//  - ctrlCmd: Mapeia para `Control` no Windows e no Linux e para `Command` no macOS.
	//  - alt: Mapeia para `Alt` no Windows e no Linux e para `Option` no macOS.
	"workbench.list.multiSelectModifier": "ctrlCmd",

	// Controla como abrir itens em árvores e listas usando o mouse (caso haja suporte). Observe que algumas árvores e listas podem optar por ignorar essa configuração quando ela não se aplica.
	"workbench.list.openMode": "singleClick",

	// Controla se listas e árvores têm rolagem suave.
	"workbench.list.smoothScrolling": false,

	// Controla se o histórico de arquivos locais está ativado. Quando habilitado, o conteúdo do arquivo de um editor salvo será armazenado em um local de backup para poder restaurar ou revisar o conteúdo posteriormente. Alterar essa configuração não tem efeito nas entradas existentes do histórico de arquivos locais.
	"workbench.localHistory.enabled": true,

	// Configure [padrões glob](https://code.visualstudio.com/docs/editor/codebasics#_advanced-search-options) para excluir arquivos do histórico de arquivos local. Alterar essa configuração não tem efeito nas entradas existentes do histórico de arquivos locais.
	"workbench.localHistory.exclude": {},

	// Controla o número máximo de entradas do histórico de arquivos locais por arquivo. Quando o número de entradas do histórico de arquivos locais exceder esse número para um arquivo, as entradas mais antigas serão descartadas.
	"workbench.localHistory.maxFileEntries": 50,

	// Controla o tamanho máximo de um arquivo (em KB) a ser considerado para o histórico do arquivo local. Arquivos maiores não serão adicionados ao histórico de arquivos locais. Alterar essa configuração não tem efeito nas entradas existentes do histórico de arquivos locais.
	"workbench.localHistory.maxFileSize": 256,

	// Configure um intervalo em segundos durante o qual a última entrada no histórico do arquivo local é substituída pela entrada que está sendo adicionada. Isso ajuda a reduzir o número geral de entradas adicionadas, por exemplo, quando o salvamento automático está ativado. Essa configuração é aplicada apenas a entradas que tenham a mesma origem de origem. Alterar essa configuração não tem efeito nas entradas existentes do histórico de arquivos locais.
	"workbench.localHistory.mergeWindow": 10,

	// Controla a localização padrão do painel (terminal, console de depuração, saída, problemas) em um novo workspace. Ele pode ser exibido na parte inferior, direita ou esquerda da área do editor.
	"workbench.panel.defaultLocation": "bottom",

	// Controla se o painel é aberto maximizado. Ele pode ser sempre aberto maximizado, nunca aberto maximizado ou aberto no último estado em que estava antes de ser fechado.
	//  - always: Sempre maximize o painel ao abri-lo.
	//  - never: Nunca maximizar o painel ao abri-lo. O painel será aberto não maximizado.
	//  - preserve: Abrir o painel no estado em que estava antes de ser fechado.
	"workbench.panel.opensMaximized": "preserve",

	// Especifica o tema de cores preferencial para a aparência escura do sistema operacional quando 'window.autoDetectColorScheme' está habilitado.
	"workbench.preferredDarkColorTheme": "Default Dark+",

	// Especifica o tema de cor preferencial usado no modo escuro de alto contraste quando '#window.autoDetectHighContrast#' está habilitado.
	"workbench.preferredHighContrastColorTheme": "Default High Contrast",

	// Especifica o tema de cor preferencial usado no modo claro de alto contraste quando '#window.autoDetectHighContrast#' está habilitado.
	"workbench.preferredHighContrastLightColorTheme": "Default High Contrast Light",

	// Especifica o tema de cores preferencial para a aparência clara do sistema operacional quando `window.autoDetectColorScheme` está habilitado.
	"workbench.preferredLightColorTheme": "Default Light+",

	// Especifica o tema do ícone do produto usado.
	//  - Default: Padrão
	"workbench.productIconTheme": "Default",

	// Controla se a Abertura Rápida deve ser fechada automaticamente quando perde o foco.
	"workbench.quickOpen.closeOnFocusLost": true,

	// Controla se a última entrada digitada para a Abertura Rápida deverá ser restaurada ao ser aberta na próxima vez.
	"workbench.quickOpen.preserveInput": false,

	// Controla se o workbench deve ser renderizado com menos animações.
	//  - on: Sempre renderizar com movimentos reduzidos.
	//  - off: Não renderizar com movimentos reduzidos
	//  - auto: Renderize com movimentos reduzidos com base na configuração do sistema operacional.
	"workbench.reduceMotion": "auto",

	// Controla o atraso de resposta da focalização em milissegundos da área de arrastar entre as exibições e os editores.
	"workbench.sash.hoverDelay": 300,

	// Controla o tamanho da área de comentários, em pixels, da área de arrastar entre modos de exibição/editores. Defina-o como um valor maior se você achar difícil redimensionar modos de exibição usando o mouse.
	"workbench.sash.size": 4,

	// Determina qual editor de configurações usar por padrão.
	//  - ui: Use o editor de interface do usuário de configurações.
	//  - json: Use o editor de arquivos JSON.
	"workbench.settings.editor": "ui",

	// Controla se o modo de pesquisa de linguagem natural deve ser habilitado para configurações. A pesquisa de linguagem natural é fornecida por um serviço online da Microsoft.
	"workbench.settings.enableNaturalLanguageSearch": true,

	// Controla se as configurações de associação de teclas de abertura também abrem um editor mostrando todas as associações de teclas padrão.
	"workbench.settings.openDefaultKeybindings": false,

	// Controla se as configurações de abertura também abrem um editor mostrando todas as configurações padrão.
	"workbench.settings.openDefaultSettings": false,

	// Controla o comportamento do Sumário do editor de configurações durante a pesquisa.
	//  - hide: Ocultar o Sumário ao pesquisar.
	//  - filter: Filtrar o Sumário para apenas as categorias com configurações correspondentes. Ao clicar em uma categoria, os resultados serão filtrados para essa categoria.
	"workbench.settings.settingsSearchTocBehavior": "filter",

	// Controla se o editor de JSON dividido deve ser usado ao editar configurações como JSON.
	"workbench.settings.useSplitJSON": false,

	// Controla os locais da barra lateral primária e da barra de atividades. Elas podem ser mostradas à esquerda ou à direita do workbench. A barra lateral secundária será mostrada no lado oposto do workbench.
	"workbench.sideBar.location": "left",

	// Controla qual editor é mostrado na inicialização, se nenhum for restaurado da sessão anterior.
	//  - none: Iniciar sem um editor.
	//  - welcomePage: Abra a página de boas-vindas, com conteúdo para ajudar na introdução ao VS Code e extensões.
	//  - readme: Abra o README ao abrir uma pasta que contém um, caso contrário, volte para 'welcomePage'. Nota: isso só é observado como uma configuração global, será ignorado se definido em uma configuração de área de trabalho ou pasta.
	//  - newUntitledFile: Abrir um novo arquivo sem título (aplicável somente ao abrir uma janela vazia).
	//  - welcomePageInEmptyWorkbench: Abrir a página inicial ao abrir um workbench vazio.
	"workbench.startupEditor": "welcomePage",

	// Controla a visibilidade da barra de status na parte inferior do workbench.
	"workbench.statusBar.visible": true,

	// Quando habilitado, mostrará as dicas de marca-d'água quando não houver editor aberto.
	"workbench.tips.enabled": true,

	// Controla como as pastas de árvore são expandidas ao clicar nos nomes das pastas. Observe que algumas árvores e listas poderão optar por ignorar essa configuração se ela não for aplicável.
	"workbench.tree.expandMode": "singleClick",

	// Controle o recuo da árvore em pixels.
	"workbench.tree.indent": 8,

	// Controla se a árvore deve renderizar guias de recuo.
	"workbench.tree.renderIndentGuides": "onHover",

	// Quando habilitado, os prompts de domínio confiável serão exibidos ao abrir links em espaços de trabalho confiáveis.
	"workbench.trustedDomains.promptInTrustedWorkspace": false,

	// Controla a visibilidade das ações do cabeçalho do modo de exibição. Exibir ações de cabeçalho poderá estar sempre visível ou visível apenas quando esse modo de exibição estiver com foco ou focalizado.
	"workbench.view.alwaysShowHeaderActions": false,

	// Quando habilitada, a página de introdução tem links adicionais para tutoriais em vídeo.
	"workbench.welcomePage.experimental.videoTutorials": "off",

	// Preterido, use o 'workbench.reduceMotion' global.
	// Quando habilitado, reduz o movimento na página de boas-vindas.
	"workbench.welcomePage.preferReducedMotion": false,

	// Quando habilitada, um passo a passo da extensão será aberto após a instalação da extensão.
	"workbench.welcomePage.walkthroughs.openOnInstall": true,

	// Se definido, alterne automaticamente para o tema de cor preferido com base na aparência do sistema operacional. Se a aparência do sistema operacional for escura, o tema especificado em '#workbench.preferredDarkColorTheme#' será usado para a aparência clara "#workbench.preferredLightColorTheme#"
	"window.autoDetectColorScheme": false,

	// Se habilitado, será alterado automaticamente para o tema de alto contraste se o sistema operacional estiver usando um tema de alto contraste. O tema de alto contraste a ser usado é especificado por '#workbench.preferredHighContrastColorTheme#' e '#workbench.preferredHighContrastLightColorTheme#'
	"window.autoDetectHighContrast": true,

	// Controla se fechar o último editor também deve fechar a janela. Essa configuração se aplica somente às janelas que não mostram pastas.
	"window.closeWhenEmpty": false,

	// Mostra o iniciador de comandos junto com o título da janela. Esta configuração só tem efeito quando `window.titleBarStyle` está definido como `custom`.
	"window.commandCenter": true,

	// Controla se uma caixa de diálogo de confirmação deve ser exibida antes de fechar a janela ou encerrar do aplicativo.
	//  - always: Sempre solicitar confirmação.
	//  - keyboardOnly: Peça confirmação apenas se uma associação de teclas for usada.
	//  - never: Nunca peça confirmação explicitamente.
	"window.confirmBeforeClose": "never",

	// Controla se a barra de menus será focada pressionando a tecla Alt. Essa configuração não tem efeito sobre como ativar/desativar a barra de menus com a tecla Alt.
	"window.customMenuBarAltFocus": true,

	// Ajustar a aparência das janelas de diálogo.
	"window.dialogStyle": "native",

	// Se habilitado, clicar duas vezes no ícone do aplicativo na barra de título fechará a janela e ela não poderá ser arrastada pelo ícone. Essa configuração só terá efeito quando `window.titleBarStyle` estiver definido como `custom`.
	"window.doubleClickIconToClose": false,

	// Controla se os menus principais podem ser abertos por meio de atalhos da tecla Alt. A desabilitação de mnemônicos permite associar esses atalhos de tecla Alt aos comandos do editor.
	"window.enableMenuBarMnemonics": true,

	// Experimental: Quando habilitada, a janela terá o modo sandbox habilitado via Electron API.
	"window.experimental.useSandbox": false,

	// Use os controles de janela fornecidos pela plataforma em vez de nossos controles de janela baseados em HTML. As alterações exigem uma reinicialização completa para serem aplicadas.
	"window.experimental.windowControlsOverlay.enabled": false,

	// Controlar a visibilidade da barra de menus. A configuração 'toggle' significa que a barra de menus está oculta e que um único pressionamento da tecla Alt fará com que ela seja mostrada. A configuração 'compact' inserirá o menu na barra lateral.
	//  - classic: O menu é exibido na parte superior da janela e fica oculto somente no modo de tela inteira.
	//  - visible: O menu fica sempre visível na parte superior da janela, mesmo no modo de tela inteira.
	//  - toggle: O menu está oculto, mas pode ser exibido na parte superior da janela por meio da tecla Alt.
	//  - hidden: O menu está sempre oculto.
	//  - compact: O menu é exibido como um botão compacto na barra lateral. Este valor é ignorado quando `window.titleBarStyle` é `native`.
	"window.menuBarVisibility": "classic",

	// Controla as dimensões de abertura de uma nova janela quando pelo menos uma janela já está aberta. Observe que esta configuração não tem impacto na primeira janela aberta. A primeira janela sempre restaurará o tamanho e a localização conforme você deixou antes de fechar.
	//  - default: Abrir novas janelas no centro da tela.
	//  - inherit: Abrir novas janelas com a mesma dimensão que a última ativa.
	//  - offset: Abrir novas janelas com a mesma dimensão que a última ativa com uma posição de deslocamento.
	//  - maximized: Abrir novas janelas maximizadas.
	//  - fullscreen: Abrir novas janelas no modo de tela inteira.
	"window.newWindowDimensions": "default",

	// Controla se os arquivos devem ser abertos em uma nova janela ao usar uma caixa de diálogo de linha de comando ou de arquivo.
	// Observe que ainda pode haver casos em que essa configuração é ignorada (por exemplo, ao usar a opção de linha de comando '--new-window' ou '--reuse-window').
	//  - on: Os arquivos serão abertos em uma nova janela.
	//  - off: Os arquivos serão abertos na janela com a pasta Arquivos aberta ou a última janela ativa.
	//  - default: Os arquivos serão abertos em uma nova janela, a menos que seja selecionado de dentro do aplicativo (por exemplo, pelo menu Arquivo).
	"window.openFilesInNewWindow": "off",

	// Controla se as pastas devem abrir em uma nova janela ou substituir a última janela ativa.
	// Observe que ainda podem haver casos em que essa configuração é ignorada (por exemplo, quando usar a opção de linha de comando '--new-windows' ou '--reuse-window').
	//  - on: As pastas serão abertas em uma nova janela.
	//  - off: As pastas substituirão a última janela ativa.
	//  - default: As pastas serão abertas em uma nova janela, a menos que uma pasta seja selecionada de dentro do aplicativo (por exemplo, pelo menu Arquivo).
	"window.openFoldersInNewWindow": "default",

	// Controla se uma nova janela vazia deve ser aberta ao iniciar uma segunda instância sem argumentos ou se a última instância em execução deve receber o foco.
	// Observe que pode haver ainda casos em que essa configuração é ignorada (por exemplo, quando usamos '--new-window' ou '--reuse-window ' como opção de linha de comando).
	//  - on: Abrir uma nova janela vazia.
	//  - off: Focar na última instância de execução ativa.
	"window.openWithoutArgumentsInNewWindow": "on",

	// Controla se uma janela deve ser restaurada para o modo de tela inteira se ela foi encerrada no modo de tela inteira.
	"window.restoreFullscreen": false,

	// Controla como as janelas serão reabertas depois de serem iniciadas pela primeira vez. Esta configuração não tem efeito quando o aplicativo já está em execução.
	//  - preserve: Sempre reabrir todas as janelas. Se uma pasta ou um workspace for aberto (por exemplo, por meio da linha de comando), ele será aberto como uma nova janela, a menos que já tenha sido aberto. Os arquivos serão abertos em uma das janelas restauradas.
	//  - all: Reabrir todas as janelas a menos que uma pasta, um workspace ou um arquivo esteja aberto (por exemplo, por meio da linha de comando).
	//  - folders: Reabrir todas as janelas que tinham pastas ou workspaces abertos, a menos que uma pasta, um workspace ou um arquivo esteja aberto (por exemplo, por meio da linha de comando).
	//  - one: Reabrir a última janela ativa, a menos que uma pasta, um workspace ou um arquivo esteja aberto (por exemplo, por meio da linha de comando).
	//  - none: Nunca reabrir uma janela. A menos que uma pasta ou um workspace esteja aberto (por exemplo, por meio da linha de comando), uma janela vazia será exibida.
	"window.restoreWindows": "all",

	// Controla o título da janela com base no editor ativo. As variáveis são substituídas com base no contexto:
	// - `${activeEditorShort}`: o nome do arquivo (por exemplo, myFile.txt).
	// - `${activeEditorMedium}`: o caminho do arquivo relativo à pasta do workspace (por exemplo, myFolder/myFileFolder/myFile.txt).
	// - `${activeEditorLong}`: o caminho completo do arquivo (por exemplo, /Users/Development/myFolder/myFileFolder/myFile.txt).
	// - `${activeFolderShort}`: o nome da pasta que contém o arquivo (por exemplo, myFileFolder).
	// - `${activeFolderMedium}`: o caminho da pasta que contém o arquivo, em relação à pasta do workspace (por exemplo, myFolder/myFileFolder).
	// - `${activeFolderLong}`: o caminho completo da pasta que contém o arquivo (por exemplo, /Users/Development/myFolder/myFileFolder).
	// - `${folderName}`: o nome da pasta do workspace que contém o arquivo (por exemplo, myFolder).
	// - `${folderPath}`: o caminho do arquivo da pasta do workspace que contém o arquivo (por exemplo, /Users/Development/myFolder).
	// - `${rootName}`: nome do workspace ou da pasta aberto (por exemplo, myFolder ou myWorkspace).
	// - `${rootPath}`: caminho do arquivo do workspace ou da pasta aberto (por exemplo, /Users/Development/myWorkspace).
	// - `${appName}`: por exemplo, VS Code.
	// - `${remoteName}`: por exemplo, SSH
	// - `${dirty}`: um indicador para quando o editor ativo tem alterações não salvas.
	// - `${separator}`: um separador condicional ("-") que só é mostrado quando circundado por variáveis com valores ou texto estático.
	"window.title": "${dirty}${activeEditorShort}${separator}${rootName}${separator}${appName}",

	// Ajustar a aparência da barra de título da janela. No Linux e no Windows, essa configuração também afeta a aparência do menu de contexto e do aplicativo. As alterações exigem a reinicialização completa para serem aplicadas.
	"window.titleBarStyle": "custom",

	// Separador usado por `window.title`.
	"window.titleSeparator": " - ",

	// Ajustar o nível de zoom da janela. O tamanho original é 0 e cada incremento acima (por exemplo, 1) ou abaixo (por exemplo, -1) representa zoom 20% maior ou menor. Você também pode inserir decimais para ajustar o nível de zoom com uma granularidade mais fina.
	"window.zoomLevel": 0,

	// Configurar associações de arquivo para linguagens (por exemplo, `"*.extension": "html"`). Elas têm precedência sobre as associações padrão das linguagens instaladas.
	"files.associations": {},

	// Quando ativado, o editor tentará adivinhar a codificação do conjunto de caracteres ao abrir os arquivos. Essa configuração também pode ser configurada por idioma. Observe que essa configuração não é respeitada pela pesquisa de texto. Apenas `files.encoding` é respeitado.
	"files.autoGuessEncoding": false,

	// Controles [salvamento automático](https://code.visualstudio.com/docs/editor/codebasics#_save-auto-save) dos editores que têm alterações não salvas.
	//  - off: Um editor com alterações nunca é salvo automaticamente.
	//  - afterDelay: Um editor com alterações é salvo automaticamente após a configuração do `files.autoSaveDelay`.
	//  - onFocusChange: Um editor com alterações é salvo automaticamente quando o editor perde o foco.
	//  - onWindowChange: Um editor com alterações é salvo automaticamente quando a janela perde o foco.
	"files.autoSave": "off",

	// Controla o atraso em milissegundos após o qual um editor com alterações não salvas é salvo automaticamente. Só se aplica quando `files.autoSave` está definido como` afterDelay `.
	"files.autoSaveDelay": 1000,

	// O identificador de idioma padrão foi atribuído aos novos arquivos. Se configurado para `${activeEditorLanguage}`, usará a ID de idioma do editor de texto atualmente ativo, se houver.
	"files.defaultLanguage": "",

	// Move arquivos/pastas para a lixeira do sistema operacional (lixeira no Windows) ao excluir. Desabilitar isso excluirá arquivos/pastas permanentemente.
	"files.enableTrash": true,

	// A codificação de conjunto de caracteres padrão a ser usada ao ler e gravar arquivos. Essa configuração também pode ser definida por linguagem.
	//  - utf8: UTF-8
	//  - utf8bom: UTF-8 with BOM
	//  - utf16le: UTF-16 LE
	//  - utf16be: UTF-16 BE
	//  - windows1252: Western (Windows 1252)
	//  - iso88591: Western (ISO 8859-1)
	//  - iso88593: Western (ISO 8859-3)
	//  - iso885915: Western (ISO 8859-15)
	//  - macroman: Western (Mac Roman)
	//  - cp437: DOS (CP 437)
	//  - windows1256: Arabic (Windows 1256)
	//  - iso88596: Arabic (ISO 8859-6)
	//  - windows1257: Baltic (Windows 1257)
	//  - iso88594: Baltic (ISO 8859-4)
	//  - iso885914: Celtic (ISO 8859-14)
	//  - windows1250: Central European (Windows 1250)
	//  - iso88592: Central European (ISO 8859-2)
	//  - cp852: Central European (CP 852)
	//  - windows1251: Cyrillic (Windows 1251)
	//  - cp866: Cyrillic (CP 866)
	//  - iso88595: Cyrillic (ISO 8859-5)
	//  - koi8r: Cyrillic (KOI8-R)
	//  - koi8u: Cyrillic (KOI8-U)
	//  - iso885913: Estonian (ISO 8859-13)
	//  - windows1253: Greek (Windows 1253)
	//  - iso88597: Greek (ISO 8859-7)
	//  - windows1255: Hebrew (Windows 1255)
	//  - iso88598: Hebrew (ISO 8859-8)
	//  - iso885910: Nordic (ISO 8859-10)
	//  - iso885916: Romanian (ISO 8859-16)
	//  - windows1254: Turkish (Windows 1254)
	//  - iso88599: Turkish (ISO 8859-9)
	//  - windows1258: Vietnamese (Windows 1258)
	//  - gbk: Simplified Chinese (GBK)
	//  - gb18030: Simplified Chinese (GB18030)
	//  - cp950: Traditional Chinese (Big5)
	//  - big5hkscs: Traditional Chinese (Big5-HKSCS)
	//  - shiftjis: Japanese (Shift JIS)
	//  - eucjp: Japanese (EUC-JP)
	//  - euckr: Korean (EUC-KR)
	//  - windows874: Thai (Windows 874)
	//  - iso885911: Latin/Thai (ISO 8859-11)
	//  - koi8ru: Cyrillic (KOI8-RU)
	//  - koi8t: Tajik (KOI8-T)
	//  - gb2312: Simplified Chinese (GB 2312)
	//  - cp865: Nordic DOS (CP 865)
	//  - cp850: Western European DOS (CP 850)
	"files.encoding": "utf8",

	// O caractere de fim de linha padrão.
	//  - \n: LF
	//  - \r\n: CRLF
	//  - auto: Usa o caractere de fim de linha específico do sistema operacional.
	"files.eol": "auto",

	// Configure [glob patterns](https://code.visualstudio.com/docs/editor/codebasics#_advanced-search-options) for excluding files and folders. For example, the file explorer decides which files and folders to show or hide based on this setting. Refer to the `search.exclude` setting to define search-specific excludes.
	"files.exclude": {
		"**/.git": true,
		"**/.svn": true,
		"**/.hg": true,
		"**/CVS": true,
		"**/.DS_Store": true,
		"**/Thumbs.db": true
	},

	// Controla se os arquivos não salvos são lembrados entre as sessões, permitindo que o prompt de salvamento ao sair do editor seja ignorado.
	//  - off: Desative a Hot Exit. Um prompt será mostrado ao tentar fechar uma janela com editores que têm alterações não salvas.
	//  - onExit: O Hot Exit será disparado quando a última janela for fechada no Windows/Linux ou quando o comando `workbench.action.quit` for disparado (paleta de comandos, keybinding, menu). Todas as janelas sem pastas abertas serão restauradas na próxima inicialização. Uma lista de janelas com arquivos não salvos abertas anteriormente pode ser acessada em `Arquivo > Abrir Recente > Mais...`
	//  - onExitAndWindowClose: O Hot Exit será disparado quando a última janela for fechada no Windows/Linux ou quando o comando `workbench.action.quit` for disparado (paleta de comandos, keybinding, menu) e também para qualquer janela com uma pasta aberta, independentemente de esta ser a última janela. Todas as janelas sem pastas abertas serão restauradas na próxima inicialização. Uma lista de janelas com arquivos não salvos abertas anteriormente pode ser acessada por meio de `Arquivo > Abrir Recente > Mais...`
	"files.hotExit": "onExit",

	// Quando habilitado, insira uma nova linha final no final do arquivo ao salvá-lo.
	"files.insertFinalNewline": false,

	// Controla a memória disponível para VS Code após a reinicialização ao tentar abrir arquivos grandes. O mesmo efeito que especificar `--max-memory=NEWSIZE` na linha de comando.
	"files.maxMemoryForLargeFilesMB": 4096,

	// Tempo limite em milissegundos após o qual os participantes do arquivo para criar, renomear e excluir serão cancelados. Use `0` para desabilitar participantes.
	"files.participants.timeout": 60000,

	// Controla se os arquivos que fizeram parte de uma refatoração são salvos automaticamente
	"files.refactoring.autoSave": true,

	// Restaurar a pilha de desfazer quando um arquivo for reaberto.
	"files.restoreUndoStack": true,

	// Um conflito de salvamento pode ocorrer quando um arquivo é salvo em um disco que foi alterado por outro programa nesse tempo. Para evitar a perda de dados, o usuário é solicitado a comparar as alterações no editor com a versão no disco. Essa configuração só deverá ser alterada se você encontrar frequentemente erros de conflito de salvamento e poderá resultar em perda de dados se usada sem cuidado.
	//  - askUser: Recusará salvar e pedirá a resolução do conflito de salvamento manualmente.
	//  - overwriteFileOnDisk: Resolverá o conflito de salvamento ao substituir o arquivo no disco pelas alterações no editor.
	"files.saveConflictResolution": "askUser",

	// Habilita a caixa de diálogo de arquivo simples. A caixa de diálogo de arquivo simples substitui a caixa de diálogo de arquivo do sistema quando habilitada.
	"files.simpleDialog.enable": false,

	// Quando habilitado, cortará todas as novas linhas após a última linha final no final do arquivo ao salvá-lo.
	"files.trimFinalNewlines": false,

	// Quando habilitado, cortará o espaço em branco à direita ao salvar um arquivo.
	"files.trimTrailingWhitespace": false,

	// Configure caminhos ou padrões glob a serem excluídos da inspeção de arquivos. Os caminhos ou padrões glob básicos que sejam relativos (por exemplo, 'build/output' ou '*.js') serão resolvidos para um caminho absoluto usando o workspace aberto no momento. Os padrões glob complexos devem corresponder aos caminhos absolutos (por exemplo, prefixo com '**/' ou o caminho completo e o sufixo com '/**' para corresponderem aos arquivos dentro de um caminho) para corresponderem corretamente (por exemplo, '**/build/output/**' ou '/Users/name/workspaces/project/build/output/**'). Quando você notar que o processo do inspetor de arquivos está consumindo muita CPU, exclua pastas grandes de menor interesse (como pastas de saída de build).
	"files.watcherExclude": {
		"**/.git/objects/**": true,
		"**/.git/subtree-cache/**": true,
		"**/node_modules/*/**": true,
		"**/.hg/store/**": true
	},

	// Configure caminhos extras para observar as alterações no workspace. Por padrão, todas as pastas do workspace serão inspecionadas recursivamente, exceto as pastas que são links simbólicos. Você pode adicionar explicitamente caminhos absolutos ou relativos para suportar pastas de inspeção que são links simbólicos. Os caminhos relativos serão resolvidos para um caminho absoluto que usa o workspace aberto no momento.
	"files.watcherInclude": [],

	// Controla o tamanho da fonte (em pixels) do teclado do modo screencast.
	"screencastMode.fontSize": 56,

	// Controla o tempo (em milissegundos) em que a sobreposição do teclado é mostrada no modo screencast.
	"screencastMode.keyboardOverlayTimeout": 800,

	// Controla o que é exibido na sobreposição do teclado ao mostrar os atalhos.
	//  - keys: Teclas.
	//  - command: Título do comando.
	//  - commandWithGroup: Título do comando prefixado por seu grupo.
	//  - commandAndKeys: Título e teclas do comando.
	//  - commandWithGroupAndKeys: Título e teclas do comando, com o comando prefixado por seu grupo.
	"screencastMode.keyboardShortcutsFormat": "commandAndKeys",

	// Controla a cor em hexa (#RGB, #RGBA, #RRGGBB ou #RRGGBBAA) do indicador do mouse no modo screencast.
	"screencastMode.mouseIndicatorColor": "#FF0000",

	// Controla o tamanho (em pixels) do indicador do mouse no modo screencast.
	"screencastMode.mouseIndicatorSize": 20,

	// Somente mostrar atalhos de teclado no modo screencast.
	"screencastMode.onlyKeyboardShortcuts": false,

	// Controla o deslocamento vertical da cobertura do modo screencast da parte inferior como um percentual da altura do workbench.
	"screencastMode.verticalOffset": 20,

	// Controla se a ativação do modo Zen também centraliza o layout.
	"zenMode.centerLayout": true,

	// Controla se a ativação do modo Zen também coloca o workbench no modo de tela inteira.
	"zenMode.fullScreen": true,

	// Controla se ativar o modo Zen também oculta a barra de atividade na parte esquerda ou direita do workbench.
	"zenMode.hideActivityBar": true,

	// Controla se a ativação do modo Zen também oculta os números de linha do editor.
	"zenMode.hideLineNumbers": true,

	// Controla se a ativação do modo Zen também oculta a barra de status na parte inferior do workbench.
	"zenMode.hideStatusBar": true,

	// Controla se a ativação do modo Zen também oculta as guias do workbench.
	"zenMode.hideTabs": true,

	// Controla se uma janela deverá ser restaurada para o modo zen se ela tiver sido encerrada no modo zen.
	"zenMode.restore": true,

	// Controla se as notificações no modo não incomodam devem ser habilitadas no modo zen. Se true, apenas as notificações de erro serão exibidas.
	"zenMode.silentNotifications": true,

	// Specifies how to format absolute dates (e.g. using the `${date}` token) for the current line blame annotation. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for supported formats
	"gitlens.currentLine.dateFormat": null,

	// Specifies whether to provide a blame annotation for the current line, by default. Use the `Toggle Line Blame Annotations` command (`gitlens.toggleLineBlame`) to toggle the annotations on and off for the current window
	"gitlens.currentLine.enabled": true,

	// Specifies the format of the current line blame annotation. See [_Commit Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs. Date formatting is controlled by the `gitlens.currentLine.dateFormat` setting
	"gitlens.currentLine.format": "${author, }${agoOrDate}${' via 'pullRequest}${ • message|50?}",

	// Specifies whether to provide information about the Pull Request (if any) that introduced the commit in the current line blame annotation. Requires a connection to a supported remote service (e.g. GitHub)
	"gitlens.currentLine.pullRequests.enabled": true,

	// Specifies whether the current line blame annotation can be scrolled into view when it is outside the viewport. **NOTE**: Setting this to `false` will inhibit the hovers from showing over the annotation; Set `gitlens.hovers.currentLine.over` to `line` to enable the hovers to show anywhere over the line.
	"gitlens.currentLine.scrollable": true,

	// Specifies the uncommitted changes format of the current line blame annotation. See [_Commit Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs. Date formatting is controlled by the `gitlens.currentLine.dateFormat` setting.
	// 
	// **NOTE**: Setting this to an empty string will disable current line blame annotations for uncommitted changes.
	"gitlens.currentLine.uncommittedChangesFormat": null,

	// Controla se o explorador deve revelar e selecionar arquivos automaticamente ao abri-los.
	//  - true: Os arquivos serão revelados e selecionados.
	//  - false: Os arquivos não serão revelados e selecionados.
	//  - focusNoScroll: Os arquivos não serão rolados no modo de exibição, mas ainda terão foco.
	"explorer.autoReveal": true,

	// Controla se o explorador deve renderizar pastas em um formato compacto. Nesse formato, as pastas filho únicas serão compactadas em um elemento de árvore combinado. Isso é útil para estruturas de pacote Java, por exemplo.
	"explorer.compactFolders": true,

	// Controla se o explorador deve solicitar confirmação ao excluir um arquivo por meio da lixeira.
	"explorer.confirmDelete": true,

	// Controla se o explorador deve solicitar confirmação para mover arquivos e pastas por meio de arrastar e soltar.
	"explorer.confirmDragAndDrop": true,

	// Controla se o gerenciador deve solicitar confirmação ao desfazer.
	//  - verbose: O Explorer solicitará antes de todas as operações de desfazer.
	//  - default: O Explorer solicitará antes de operações de desfazer destrutivas.
	//  - light: O Explorer não solicitará antes de desfazer operações quando o foco for focalizado.
	"explorer.confirmUndo": "default",

	// O caractere de separação de caminho usado ao copiar caminhos de arquivo relativos.
	//  - /: Use barra como caractere de separação de caminho.
	//  - \: Use a barra invertida como caractere de separação de caminho.
	//  - auto: Usa o caractere de separação de caminho específico do sistema operacional.
	"explorer.copyRelativePathSeparator": "auto",

	// Controla se as decorações de arquivo devem usar selos.
	"explorer.decorations.badges": true,

	// Controla se as decorações de arquivo devem usar cores.
	"explorer.decorations.colors": true,

	// Controla se o gerenciador deve permitir a movimentação de arquivos e pastas por meio da operação de arrastar e soltar. Esta configuração afeta apenas a operação de arrastar e soltar dentro do gerenciador.
	"explorer.enableDragAndDrop": true,

	// Controla se o gerenciador deve dar suporte à desfazer operações de arquivo e pasta.
	"explorer.enableUndo": true,

	// Controla se as entradas em .gitignore devem ser analisadas e excluídas do explorador. Igual a `files.exclude`.
	"explorer.excludeGitIgnore": false,

	// Controla se o explorador deve expandir espaços de trabalho multi-raiz contendo apenas uma pasta durante a inicialização
	"explorer.expandSingleFolderWorkspaces": true,

	// Controla se o aninhamento de arquivos está habilitado no explorador. O aninhamento de arquivos permite que os arquivos relacionados em um diretório sejam agrupados visualmente em um único arquivo pai.
	"explorer.fileNesting.enabled": false,

	// Controla se os ninhos de arquivos são expandidos automaticamente. `explorer.fileNesting.enabled` deve ser definido para que isso tenha efeito.
	"explorer.fileNesting.expand": true,

	// Controla o aninhamento de arquivos no explorer. `explorer.fileNesting.enabled` deve ser definido para que isso tenha efeito. Cada __Item__ representa um padrão pai e pode conter um único caractere `*` que corresponde a qualquer cadeia de caracteres. Cada __Value__ representa uma lista separada por vírgulas dos padrões filho que devem ser mostrados aninhados em um determinado pai. Padrões filho podem conter vários tokens especiais:
	// - `${capture}`: Corresponde ao valor resolvido do `*` do padrão pai
	// - `${basename}`: Corresponde ao nome base do arquivo pai, o `arquivo` em `file.ts`
	// - `${extname}`: Corresponde à extensão do arquivo pai, o `ts` em `file.ts`
	// - `${dirname}`: Corresponde ao nome do diretório do arquivo pai, o `src` in `src/file.ts`
	// - `*`: Corresponde a qualquer cadeia de caracteres, só pode ser usado uma vez por padrão filho
	"explorer.fileNesting.patterns": {
		"*.ts": "${capture}.js",
		"*.js": "${capture}.js.map, ${capture}.min.js, ${capture}.d.ts",
		"*.jsx": "${capture}.js",
		"*.tsx": "${capture}.ts",
		"tsconfig.json": "tsconfig.*.json",
		"package.json": "package-lock.json, yarn.lock, pnpm-lock.yaml"
	},

	// Controla qual estratégia de nomenclatura deverá ser usada quando um novo nome for atribuir a um item do explorador duplicado ao colar.
	//  - simple: Acrescenta a palavra "cópia" no final do nome duplicado, potencialmente seguido por um número
	//  - smart: Adiciona um número ao final do nome duplicado. Se algum número já fizer parte do nome, ele tentará aumentar esse número
	//  - disabled: Desativa a nomenclatura incremental. Se existirem dois ficheiros com o mesmo nome ser-lhe-á pedido para substituir o ficheiro existente
	"explorer.incrementalNaming": "simple",

	// O número mínimo de slots de editor mostrados no painel Abrir Editores. Se definido como 0, o painel Abrir Editores será redimensionado dinamicamente com base no número de editores.
	"explorer.openEditors.minVisible": 0,

	// Controla a ordem de classificação dos editores no painel Editores Abertos.
	//  - editorOrder: Os editores são ordenados na mesma ordem em que as guias do editor são mostradas.
	//  - alphabetical: Os editores são ordenados alfabeticamente pelo nome da guia dentro de cada grupo de editores.
	//  - fullPath: Os editores são ordenados em ordem alfabética por caminho completo dentro de cada grupo de editores.
	"explorer.openEditors.sortOrder": "editorOrder",

	// O número máximo de editores mostrados no painel Abrir Editores. Configurar como 0 oculta o painel Abrir Editores.
	"explorer.openEditors.visible": 9,

	// Controla a classificação baseada em propriedade de arquivos e pastas no explorador. Quando '#explorer.fileNesting.enabled#' está habilitado, a classificação de arquivos aninhados também estará controlada.
	//  - default: Os arquivos e as pastas são classificados por nomes. As pastas são exibidas antes dos arquivos.
	//  - mixed: Os arquivos e as pastas são classificados por nomes. Os arquivos estão entrelaçados com as pastas.
	//  - filesFirst: Os arquivos e as pastas são classificados por nomes. Os arquivos são exibidos antes das pastas.
	//  - type: Os arquivos e as pastas são agrupados por tipo de extensão, e em seguida, classificados pelos nomes. As pastas são exibidas antes dos arquivos.
	//  - modified: Arquivos e pastas são classificados por data da última modificação em ordem decrescente. As pastas são exibidas antes dos arquivos.
	//  - foldersNestsFiles: Arquivos e pastas são classificados por seus nomes. As pastas são exibidas antes dos arquivos. Arquivos com filhos aninhados são exibidos antes de outros arquivos.
	"explorer.sortOrder": "default",

	// Controla a classificação lexicográfica de nomes de arquivos e de pastas no Explorer.
	//  - default: Nomes em maiúsculas e minúsculas são misturados.
	//  - upper: Os nomes em maiúsculas são agrupados antes dos nomes em minúsculas.
	//  - lower: Os nomes em minúsculas são agrupados antes dos nomes em maiúsculas.
	//  - unicode: Os nomes são classificados em ordem unicode.
	"explorer.sortOrderLexicographicOptions": "default",

	// Specifies the command to be executed when an _authors_ CodeLens is clicked
	//  - false: Disables click interaction
	//  - gitlens.toggleFileBlame: Toggles file blame
	//  - gitlens.toggleFileHeatmap: Toggles file heatmap
	//  - gitlens.toggleFileChanges: Toggles file changes since before the commit
	//  - gitlens.toggleFileChangesOnly: Toggles file changes from the commit
	//  - gitlens.diffWithPrevious: Compares the current committed file with the previous commit
	//  - gitlens.revealCommitInView: Reveals the commit in the Side Bar
	//  - gitlens.showCommitsInView: Searches for commits within the range
	//  - gitlens.showQuickCommitDetails: Shows a commit details quick pick menu
	//  - gitlens.showQuickCommitFileDetails: Shows a commit file details quick pick menu
	//  - gitlens.showQuickFileHistory: Shows a file history quick pick menu
	//  - gitlens.showQuickRepoHistory: Shows a branch history quick pick menu
	//  - gitlens.openCommitOnRemote: Opens the commit on the remote service (when available)
	//  - gitlens.copyRemoteCommitUrl: Copies the remote commit url to the clipboard (when available)
	//  - gitlens.openFileOnRemote: Opens the file revision on the remote service (when available)
	//  - gitlens.copyRemoteFileUrl: Copies the remote file url to the clipboard (when available)
	"gitlens.codeLens.authors.command": "gitlens.toggleFileBlame",

	// Specifies whether to provide an _authors_ CodeLens, showing number of authors of the file or code block and the most prominent author (if there is more than one)
	"gitlens.codeLens.authors.enabled": true,

	// Specifies how to format absolute dates in the Git CodeLens. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for supported formats
	"gitlens.codeLens.dateFormat": null,

	// Specifies whether to provide any Git CodeLens, by default. Use the `Toggle Git CodeLens` command (`gitlens.toggleCodeLens`) to toggle the Git CodeLens on and off for the current window
	"gitlens.codeLens.enabled": true,

	// Specifies whether to provide any Git CodeLens on symbols that span only a single line
	"gitlens.codeLens.includeSingleLineSymbols": false,

	// Specifies the command to be executed when a _recent change_ CodeLens is clicked
	//  - false: Disables click interaction
	//  - gitlens.toggleFileBlame: Toggles file blame
	//  - gitlens.toggleFileHeatmap: Toggles file heatmap
	//  - gitlens.toggleFileChanges: Toggles file changes since before the commit
	//  - gitlens.toggleFileChangesOnly: Toggles file changes from the commit
	//  - gitlens.diffWithPrevious: Compares the current committed file with the previous commit
	//  - gitlens.revealCommitInView: Reveals the commit in the Side Bar
	//  - gitlens.showCommitsInView: Shows the commit details
	//  - gitlens.showQuickCommitDetails: Shows a commit details quick pick menu
	//  - gitlens.showQuickCommitFileDetails: Shows a commit file details quick pick menu
	//  - gitlens.showQuickFileHistory: Shows a file history quick pick menu
	//  - gitlens.showQuickRepoHistory: Shows a branch history quick pick menu
	//  - gitlens.openCommitOnRemote: Opens the commit on the remote service (when available)
	//  - gitlens.copyRemoteCommitUrl: Copies the remote commit url to the clipboard (when available)
	//  - gitlens.openFileOnRemote: Opens the file revision on the remote service (when available)
	//  - gitlens.copyRemoteFileUrl: Copies the remote file url to the clipboard (when available)
	"gitlens.codeLens.recentChange.command": "gitlens.showQuickCommitFileDetails",

	// Specifies whether to provide a _recent change_ CodeLens, showing the author and date of the most recent commit for the file or code block
	"gitlens.codeLens.recentChange.enabled": true,

	// Specifies where Git CodeLens will be shown in the document
	//  - document: Adds CodeLens at the top of the document
	//  - containers: Adds CodeLens at the start of container-like symbols (modules, classes, interfaces, etc)
	//  - blocks: Adds CodeLens at the start of block-like symbols (functions, methods, etc) lines
	"gitlens.codeLens.scopes": [
		"document",
		"containers"
	],

	// Deprecated. Use the per-language `gitlens.codeLens.scopes#` and `#gitlens.codeLens.symbolScopes` settings instead
	// 
	"gitlens.codeLens.scopesByLanguage": null,

	// Specifies a set of document symbols where Git CodeLens will or will not be shown in the document. Prefix with `!` to avoid providing a Git CodeLens for the symbol. Must be a member of `SymbolKind`
	"gitlens.codeLens.symbolScopes": [],

	// Specifies the string to be shown in place of the _authors_ CodeLens when there are unsaved changes
	"gitlens.strings.codeLens.unsavedChanges.authorsOnly": "$(ellipsis)",

	// Specifies the string to be shown in place of both the _recent change_ and _authors_ CodeLens when there are unsaved changes
	"gitlens.strings.codeLens.unsavedChanges.recentChangeAndAuthors": "$(ellipsis)",

	// Specifies the string to be shown in place of the _recent change_ CodeLens when there are unsaved changes
	"gitlens.strings.codeLens.unsavedChanges.recentChangeOnly": "$(ellipsis)",

	// Specifies the blame alignment in the status bar
	//  - left: Aligns to the left
	//  - right: Aligns to the right
	"gitlens.statusBar.alignment": "right",

	// Specifies the command to be executed when the blame status bar item is clicked
	//  - gitlens.toggleFileBlame: Toggles file blame
	//  - gitlens.toggleFileHeatmap: Toggles file heatmap
	//  - gitlens.toggleFileChanges: Toggles file changes since before the commit
	//  - gitlens.toggleFileChangesOnly: Toggles file changes from the commit
	//  - gitlens.toggleCodeLens: Toggles Git CodeLens
	//  - gitlens.diffWithPrevious: Compares the current line commit with the previous
	//  - gitlens.diffWithWorking: Compares the current line commit with the working tree
	//  - gitlens.revealCommitInView: Reveals the commit in the Side Bar
	//  - gitlens.showCommitsInView: Shows the commit details
	//  - gitlens.showQuickCommitDetails: Shows a commit details quick pick menu
	//  - gitlens.showQuickCommitFileDetails: Shows a commit file details quick pick menu
	//  - gitlens.showQuickFileHistory: Shows a file history quick pick menu
	//  - gitlens.showQuickRepoHistory: Shows a branch history quick pick menu
	//  - gitlens.openCommitOnRemote: Opens the commit on the remote service (when available)
	//  - gitlens.copyRemoteCommitUrl: Copies the remote commit url to the clipboard (when available)
	//  - gitlens.openFileOnRemote: Opens the file revision on the remote service (when available)
	//  - gitlens.copyRemoteFileUrl: Copies the remote file url to the clipboard (when available)
	"gitlens.statusBar.command": "gitlens.showQuickCommitDetails",

	// Specifies how to format absolute dates (e.g. using the `${date}` token) in the blame information in the status bar. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for supported formats
	"gitlens.statusBar.dateFormat": null,

	// Specifies whether to provide blame information in the status bar
	"gitlens.statusBar.enabled": true,

	// Specifies the format of the blame information in the status bar. See [_Commit Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs. Date formatting is controlled by the `gitlens.statusBar.dateFormat` setting
	"gitlens.statusBar.format": "${author}, ${agoOrDate}${' via 'pullRequest}",

	// Specifies whether to provide information about the Pull Request (if any) that introduced the commit in the status bar. Requires a connection to a supported remote service (e.g. GitHub)
	"gitlens.statusBar.pullRequests.enabled": true,

	// Specifies whether to avoid clearing the previous blame information when changing lines to reduce status bar "flashing"
	"gitlens.statusBar.reduceFlicker": true,

	// Specifies the format (in markdown) of hover shown over the blame information in the status bar. See [_Commit Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs
	"gitlens.statusBar.tooltipFormat": "${avatar} &nbsp;__${author}__, ${ago}${' via 'pullRequest} &nbsp; _(${date})_ \n\n${message}${\n\n---\n\nfootnotes}\n\n${commands}",

	// Specifies whether to provide a _changes (diff)_ hover for all lines when showing blame annotations
	"gitlens.hovers.annotations.changes": true,

	// Specifies whether to provide a _commit details_ hover for all lines when showing blame annotations
	"gitlens.hovers.annotations.details": true,

	// Specifies whether to provide any hovers when showing blame annotations
	"gitlens.hovers.annotations.enabled": true,

	// Specifies when to trigger hovers when showing blame annotations
	//  - annotation: Only shown when hovering over the line annotation
	//  - line: Shown when hovering anywhere over the line
	"gitlens.hovers.annotations.over": "line",

	// Specifies whether to automatically link external resources in commit messages
	"gitlens.hovers.autolinks.enabled": true,

	// Specifies whether to lookup additional details about automatically link external resources in commit messages. Requires a connection to a supported remote service (e.g. GitHub)
	"gitlens.hovers.autolinks.enhanced": true,

	// Specifies whether to show avatar images in hovers
	"gitlens.hovers.avatars": true,

	// Specifies the size of the avatar images in hovers
	"gitlens.hovers.avatarSize": 32,

	// Specifies whether to show just the changes to the line or the set of related changes in the _changes (diff)_ hover
	//  - line: Shows only the changes to the line
	//  - hunk: Shows the set of related changes
	"gitlens.hovers.changesDiff": "line",

	// Specifies whether to provide a _changes (diff)_ hover for the current line
	"gitlens.hovers.currentLine.changes": true,

	// Specifies whether to provide a _commit details_ hover for the current line
	"gitlens.hovers.currentLine.details": true,

	// Specifies whether to provide any hovers for the current line
	"gitlens.hovers.currentLine.enabled": true,

	// Specifies when to trigger hovers for the current line
	//  - annotation: Only shown when hovering over the line annotation
	//  - line: Shown when hovering anywhere over the line
	"gitlens.hovers.currentLine.over": "annotation",

	// Specifies the format (in markdown) of the _commit details_ hover. See [_Commit Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs
	"gitlens.hovers.detailsMarkdownFormat": "${avatar} &nbsp;__${author}__, ${ago}${' via 'pullRequest} &nbsp; _(${date})_ \n\n${message}${\n\n---\n\nfootnotes}\n\n${commands}",

	// Specifies whether to provide any hovers
	"gitlens.hovers.enabled": true,

	// Specifies whether to provide information about the Pull Request (if any) that introduced the commit in the hovers. Requires a connection to a supported remote service (e.g. GitHub)
	"gitlens.hovers.pullRequests.enabled": true,

	// Controla o posicionamento do actionbar nas linhas do modo de exibição de pesquisa.
	//  - auto: Posicione o actionBar à direita quando o modo de exibição de pesquisa for estreito e imediatamente após o conteúdo quando o modo de exibição de pesquisa for largo.
	//  - right: Sempre posicione o actionbar à direita.
	"search.actionsPosition": "right",

	// Controla se os resultados da pesquisa serão recolhidos ou expandidos.
	//  - auto: Arquivos com menos de 10 resultados são expandidos. Outros são recolhidos.
	//  - alwaysCollapse
	//  - alwaysExpand
	"search.collapseResults": "alwaysExpand",

	// Controla se as decorações do arquivo de pesquisa devem usar emblemas.
	"search.decorations.badges": true,

	// Controla se as decorações do arquivo de pesquisa devem usar cores.
	"search.decorations.colors": true,

	// Controla o modo de exibição de resultados de pesquisa padrão.
	//  - tree: Mostra os resultados da pesquisa como uma árvore.
	//  - list: Mostra os resultados da pesquisa como uma lista.
	"search.defaultViewMode": "list",

	// Configure [glob patterns](https://code.visualstudio.com/docs/editor/codebasics#_advanced-search-options) for excluding files and folders in fulltext searches and quick open. Inherits all glob patterns from the `files.exclude` setting.
	"search.exclude": {
		"**/node_modules": true,
		"**/bower_components": true,
		"**/*.code-search": true
	},

	// Controla se os ciclos de links devem ser seguidos durante a pesquisa.
	"search.followSymlinks": true,

	// Essa configuração foi preterida. Em vez disso, você pode arrastar o ícone de pesquisa para um novo local.
	// Controla se a pesquisa será mostrada como um modo de exibição na barra lateral ou como um painel na área do painel para obter mais espaço horizontal.
	"search.location": "sidebar",

	// O cache de pesquisa é mantido no host de extensão que nunca é desligado. Portanto, essa configuração não é mais necessária.
	// Quando habilitado, o processo de searchService será mantido ativo em vez de ser desligado após uma hora de inatividade. Isso manterá o cache de pesquisa de arquivo na memória.
	"search.maintainFileSearchCache": false,

	// Controla o número máximo de resultados da pesquisa, pode ser definido como `nulo` (vazio) para retornar resultados ilimitados.
	"search.maxResults": 20000,

	// Controles em que ocorrem as novas operações “Pesquisar: Localizar nos Arquivos” e “Localizar na Pasta”: no modo de exibição de pesquisa ou em um editor de pesquisa
	//  - view: Pesquisar na exibição de pesquisa, seja no painel ou nas barras laterais.
	//  - reuseEditor: Pesquisar em um editor de pesquisa existente se houver algum. Caso contrário, pesquisar em um novo editor de pesquisa.
	//  - newEditor: Pesquisar em um novo editor de pesquisa.
	"search.mode": "view",

	// Controla a ordem de classificação do histórico do editor ao abrir rapidamente ao filtrar.
	//  - default: As entradas do histórico são classificadas por relevância com base no valor do filtro usado. As entradas mais relevantes aparecem primeiro.
	//  - recency: As entradas do histórico são classificadas por recência. As entradas abertas mais recentemente aparecem primeiro.
	"search.quickOpen.history.filterSortOrder": "default",

	// Se deseja incluir os resultados de arquivos abertos recentemente nos resultados do arquivo para Abertura Rápida.
	"search.quickOpen.includeHistory": true,

	// Se deseja incluir os resultados de uma pesquisa de símbolo global nos resultados do arquivo para Abertura Rápida.
	"search.quickOpen.includeSymbols": false,

	// O número padrão de linhas de contexto circundantes a serem usadas ao criar Editores de Pesquisas. Se estiver usando `search. searchEditor.reusePriorSearchConfiguration`, isso poderá ser definido como `null` (vazio) para usar a configuração do Editor de Pesquisas anterior.
	"search.searchEditor.defaultNumberOfContextLines": 1,

	// Configurar efeito de clicar duas vezes em um resultado em um editor de pesquisas.
	//  - selectWord: Clicar duas vezes seleciona a palavra sob o cursor.
	//  - goToLocation: Clicar duas vezes abre o resultado no grupo de editor ativo.
	//  - openLocationToSide: Clicar duas vezes abrirá o resultado no grupo editor ao lado, criando um se ele ainda não existir.
	"search.searchEditor.doubleClickBehaviour": "goToLocation",

	// Quando esta opção estiver habilitada, os novos Editores de Pesquisa reutilizarão as inclusões, as exclusões e os sinalizadores do Editor de Pesquisa já aberto.
	"search.searchEditor.reusePriorSearchConfiguration": false,

	// Pesquisar todos os arquivos enquanto você digita.
	"search.searchOnType": true,

	// Quando `search.searchOnType#` está habilitado, controla o tempo limite em milissegundos entre a digitação de um caractere e o início da pesquisa. Não tem efeito quando `#search.searchOnType` está desabilitado.
	"search.searchOnTypeDebouncePeriod": 300,

	// Atualize a consulta de pesquisa para o texto selecionado do editor ao focar na exibição de pesquisa. Isso acontece ao clicar ou ao disparar o comando `workbench.views.search.focus`.
	"search.seedOnFocus": false,

	// Habilitar a pesquisa de propagação da palavra mais próxima ao cursor quando o editor ativo não tiver nenhuma seleção.
	"search.seedWithNearestWord": false,

	// Controla se os números de linha devem ser mostrados para os resultados da pesquisa.
	"search.showLineNumbers": false,

	// Pesquisar sem diferenciar maiúsculas de minúsculas se o padrão for todo em minúsculas, caso contrário, pesquisar diferenciando maiúsculas de minúsculas.
	"search.smartCase": false,

	// Controla a ordem de classificação dos resultados da pesquisa.
	//  - default: Os resultados são classificados por nomes de pastas e arquivos, em ordem alfabética.
	//  - fileNames: Os resultados são classificados por nomes de arquivo ignorando a ordem da pasta, em ordem alfabética.
	//  - type: Os resultados são classificados por extensões de arquivo, em ordem alfabética.
	//  - modified: Os resultados são classificados pela data da última modificação do arquivo, em ordem descendente.
	//  - countDescending: Os resultados são classificados por contagem por arquivo, em ordem descendente.
	//  - countAscending: Os resultados são classificados por contagem por arquivo, em ordem ascendente.
	"search.sortOrder": "default",

	// Controla o uso de arquivos globais `.gitignore` e `.ignore` ao pesquisar por arquivos. Requer que ` search.useIgnoreFiles ` seja habilitado.
	"search.useGlobalIgnoreFiles": false,

	// Controla se os arquivos `.gitignore` e `.ignore` devem ser usados ao pesquisar arquivos.
	"search.useIgnoreFiles": true,

	// Controla se os arquivos `.gitignore` e `.ignore` devem ser utilizados nos diretórios pai ao procurar por arquivos. Exige que `search.useIgnoreFiles` esteja habilitado.
	"search.useParentIgnoreFiles": false,

	// Preterido. O PCRE2 será usado automaticamente ao usar os recursos regex que só têm suporte do PCRE2.
	// Se o mecanismo de regex do PCRE2 deve ser usado na pesquisa de texto. Isso permite o uso de alguns recursos de regex avançados, como referências inversas e de lookahead. No entanto, nem todos os recursos PCRE2 são compatíveis, somente recursos compatíveis com o JavaScript.
	"search.usePCRE2": false,

	// Controla se é necessário abrir a Visualização de Substituição ao selecionar ou substituir uma correspondência.
	"search.useReplacePreview": true,

	// Preterido. Considere "search.usePCRE2" para obter suporte do recurso regex avançado.
	// Essa configuração foi preterida e agora retorna ao "search.usePCRE2".
	"search.useRipgrep": true,

	// Esta configuração foi preterida. Use 'update.mode'.
	// Configure o recebimento de atualizações automáticas. Exige uma reinicialização após a alteração. As atualizações são obtidas de um serviço online da Microsoft.
	"update.channel": "default",

	// Habilitar o download e a instalação de novas versões do VS Code em segundo plano no Windows.
	"update.enableWindowsBackgroundUpdates": true,

	// Configure o recebimento de atualizações automáticas. Exige uma reinicialização após a alteração. As atualizações são obtidas de um serviço online da Microsoft.
	//  - none: Desabilitar atualizações.
	//  - manual: Desabilitar as verificações automáticas de atualização em segundo plano. As atualizações estarão disponíveis se você verificar as atualizações manualmente.
	//  - start: Verificar se há atualizações somente na inicialização. Desabilitar as verificações automáticas de atualização em segundo plano.
	//  - default: Habilitar verificações de atualização automática. O código verificará se há atualizações automaticamente e periodicamente.
	"update.mode": "default",

	// Mostrar Notas sobre a Versão após uma atualização. As Notas sobre a Versão são obtidas de um serviço online da Microsoft.
	"update.showReleaseNotes": true,

	// A configuração de proxy a ser usada. Se não estiver definida, será herdada das variáveis de ambiente `http_proxy` e `https_proxy`.
	"http.proxy": "",

	// O valor a ser enviado como o cabeçalho `Proxy-Authorization` para cada solicitação de rede.
	"http.proxyAuthorization": null,

	// Controla se o certificado do servidor proxy deve ser verificado na lista de ACs fornecidas.
	"http.proxyStrictSSL": true,

	// Usar o suporte a proxy para extensões.
	//  - off: Desabilitar o suporte a proxy para extensões.
	//  - on: Habilitar o suporte a proxy para extensões.
	//  - fallback: Habilita o suporte ao proxy para extensões, retorna para as opções de solicitação quando nenhum proxy for encontrado.
	//  - override: Habilitar o suporte a proxy para extensões, substituir opções de solicitação.
	"http.proxySupport": "override",

	// Controla se os certificados de AC devem ser carregados do SO. (No Windows e no macOS, é necessário recarregar a janela depois de desativar esta opção.)
	"http.systemCertificates": true,

	// Esta configuração foi preterida em favor de 'comments.openView'.
	// Controla quando o painel de comentários deve ser aberto.
	"comments.openPanel": "openOnSessionStartWithComments",

	// Controla quando o painel de comentários deve ser aberto.
	//  - never: A exibição de comentários nunca será aberta.
	//  - file: A exibição de comentários será aberta quando um arquivo com comentários estiver ativo.
	//  - firstFile: Se a exibição de comentários ainda não tiver sido aberta durante esta sessão, ela será aberta pela primeira vez durante uma sessão em que um arquivo com comentários estiver ativo.
	"comments.openView": "firstFile",

	// Determina se o tempo relativo será usado nos carimbos de data/hora de comentários (por exemplo, '1 dia atrás').
	"comments.useRelativeTime": true,

	// Permitir a configuração de pontos de interrupção em qualquer arquivo.
	"debug.allowBreakpointsEverywhere": false,

	// Mostrar automaticamente valores para variáveis que são resolvidas lentamente pelo depurador, como getters.
	"debug.autoExpandLazyVariables": false,

	// Controla se é necessário confirmar quando a janela fecha se houver sessões de depuração ativas.
	//  - never: Nunca confirmar.
	//  - always: Sempre confirmar se há sessões de depuração.
	"debug.confirmOnExit": "never",

	// Controla se as sugestões devem ser aceitas ao entrar no console de depuração. enter também é usado para avaliar o que quer que seja digitado no console de depuração.
	"debug.console.acceptSuggestionOnEnter": "off",

	// Controla se o console de depuração deve ser fechado automaticamente quando a sessão de depuração termina.
	"debug.console.closeOnEnd": false,

	// Controla se o console de depuração deve recolher as linhas idênticas e mostrar um número de ocorrências com um selo.
	"debug.console.collapseIdenticalLines": true,

	// Controla a família de fontes no console de depuração.
	"debug.console.fontFamily": "default",

	// Controla o tamanho da fonte em pixels no console de depuração.
	"debug.console.fontSize": 14,

	// Controla se o console de depuração deve sugerir entradas digitadas anteriormente.
	"debug.console.historySuggestions": true,

	// Controla a altura da linha em pixels no console de depuração. Use 0 para computar a altura da linha do tamanho da fonte.
	"debug.console.lineHeight": 0,

	// Controla se as linhas devem ser quebradas no console de depuração.
	"debug.console.wordWrap": true,

	// Mostrar Código-Fonte no Modo de Exibição de Desmontagem.
	"debug.disassemblyView.showSourceCode": true,

	// Controla se o editor deve estar focado quando o depurador for interrompido.
	"debug.focusEditorOnBreak": true,

	// Controla se a janela do workbench deve ser com foco quando o depurador é interrompido.
	"debug.focusWindowOnBreak": true,

	// Mostrar valores de variáveis embutidos no editor durante a depuração.
	//  - on: Sempre mostrar os valores de variáveis embutidos no editor durante a depuração.
	//  - off: Nunca mostrar os valores de variáveis embutidos no editor durante a depuração.
	//  - auto: Mostrar os valores de variáveis embutidos no editor durante a depuração quando a linguagem dá suporte para locais de valor embutido.
	"debug.inlineValues": "auto",

	// Controla quando o console de depuração interno deve ser aberto.
	"debug.internalConsoleOptions": "openOnFirstSessionStart",

	// Controla o que fazer quando forem encontrados erros após a execução de um preLaunchTask.
	//  - debugAnyway: Ignorar erros de tarefa e iniciar a depuração.
	//  - showErrors: Mostrar o modo de exibição Problemas e não iniciar a depuração.
	//  - prompt: Solicitar ao usuário.
	//  - abort: Cancelar depuração.
	"debug.onTaskErrors": "prompt",

	// Controla quando o modo de exibição de depuração deve ser aberto.
	"debug.openDebug": "openOnDebugBreak",

	// Abrir automaticamente a exibição do explorador no final de uma sessão de depuração.
	"debug.openExplorerOnEnd": false,

	// Controla quais editores devem ser salvos antes do início de uma sessão de depuração.
	//  - allEditorsInActiveGroup: Salvar todos os editores no grupo ativo antes de iniciar uma sessão de depuração.
	//  - nonUntitledEditorsInActiveGroup: Salvar todos os editores no grupo ativo, exceto os sem título, antes de iniciar uma sessão de depuração.
	//  - none: Não salvar nenhum editor antes de iniciar uma sessão de depuração.
	"debug.saveBeforeStart": "allEditorsInActiveGroup",

	// Controla se os pontos de interrupção devem ser mostrados na régua de visão geral.
	"debug.showBreakpointsInOverviewRuler": false,

	// Controla se as decorações candidatas de pontos de interrupção embutidas devem ser mostradas no editor durante a depuração.
	"debug.showInlineBreakpointCandidates": true,

	// Controla quando a barra de status de depuração deve estar visível.
	//  - never: Nunca mostrar a depuração na barra de status
	//  - always: Sempre mostrar a depuração na barra de status
	//  - onFirstSessionStart: Mostrar depuração na barra de status somente após o início da depuração pela primeira vez
	"debug.showInStatusBar": "onFirstSessionStart",

	// Controla se as subsessões de depuração são mostradas na barra de ferramentas de depuração. Quando essa configuração é false, o comando de interrupção em uma subsessão também interromperá a sessão pai.
	"debug.showSubSessionsInToolBar": false,

	// Antes de iniciar uma nova sessão de depuração em um terminal integrado ou externo, limpe o terminal.
	"debug.terminal.clearBeforeReusing": false,

	// Controla a localização da barra de ferramentas de depuração. `floating` em todos os modos de exibição, `docked` no modo de exibição de depuração ou `hidden`.
	"debug.toolBarLocation": "floating",

	// Configuração de inicialização de depuração global. Deve ser usada como uma alternativa para 'launch.json' compartilhado entre workspaces.
	"launch": {
		"configurations": [],
		"compounds": []
	},

	// Habilitar/desabilitar o fechamento automático de marcas HTML.
	"html.autoClosingTags": true,

	// Habilitar/desabilitar a criação automática de aspas para atribuição de atributos HTML. O tipo de aspas pode ser configurado por '#html.completion.attributeDefaultValue#'.
	"html.autoCreateQuotes": true,

	// Controla o valor padrão dos atributos quando a conclusão é aceita.
	//  - doublequotes: O valor do atributo é definido como "".
	//  - singlequotes: O valor do atributo é definido como ''.
	//  - empty: O valor do atributo não está definido.
	"html.completion.attributeDefaultValue": "doublequotes",

	// Uma lista de caminhos de arquivo relativos apontando para arquivos JSON após o [custom data format](https://github.com/microsoft/vscode-html-languageservice/blob/master/docs/customData.md).
	// 
	// O VS Code carrega dados personalizados na inicialização para aprimorar o suporte a HTML para as marcas HTML personalizadas, atributos e valores de atributo que você especifica nos arquivos JSON.
	// 
	// Os caminhos do arquivo são relativos ao espaço de trabalho e somente as configurações da pasta do espaço de trabalho são consideradas.
	"html.customData": [],

	// Lista de marcas, separadas por vírgulas, nas quais o conteúdo não deve ser reformatado. `null` usa a marca `pre` como padrão.
	"html.format.contentUnformatted": "pre,code,textarea",

	// Habilitar/desabilitar o formatador HTML padrão.
	"html.format.enable": true,

	// Lista de marcas, separadas por vírgulas, que devem ter uma nova linha extra antes delas. `null` usa `"head, body, /html"` como padrão.
	"html.format.extraLiners": "head, body, /html",

	// Formatar e recuar `{{#foo}}` e `{{/foo}}`.
	"html.format.indentHandlebars": false,

	// Recuar as seções `<head>` e `<body>`.
	"html.format.indentInnerHtml": false,

	// Número máximo de quebras de linha a serem preservadas em uma parte. Use `null` para ilimitado.
	"html.format.maxPreserveNewLines": null,

	// Controla se quebras de linha existentes antes de elementos devem ser preservadas. Só funciona antes de elementos, não dentro de marcas ou para texto.
	"html.format.preserveNewLines": true,

	// Honrar as marcas de linguagem de modelagem django, erb, handlebars e php.
	"html.format.templating": false,

	// Lista de marcas, separadas por vírgulas, que não devem ser reformatadas. `null` usa como padrão todas as marcas listadas em https://www.w3.org/TR/html5/dom.html#phrasing-content.
	"html.format.unformatted": "wbr",

	// Manter o conteúdo de texto junto entre esta cadeia de caracteres.
	"html.format.unformattedContentDelimiter": "",

	// Quebrar linha dos atributos.
	//  - auto: Quebrar linha dos atributos somente quando o comprimento da linha for excedido.
	//  - force: Quebrar linha de todos os atributos, exceto do primeiro.
	//  - force-aligned: Quebrar linha de todos os atributos, exceto do primeiro, e manter alinhado.
	//  - force-expand-multiline: Quebrar linha de todos os atributos.
	//  - aligned-multiple: Quebrar linha quando o comprimento dela for excedido, alinhar os atributos verticalmente.
	//  - preserve: Preservar a disposição dos atributos.
	//  - preserve-aligned: Preservar quebra de linha dos atributos, mas alinhar.
	"html.format.wrapAttributes": "auto",

	// Recue atributos encapsulados para depois de N caracteres. Use `null` para usar o tamanho de recuo padrão. Ignorado se `html.format.wrapAttributes` estiver definido como 'aligned'.
	"html.format.wrapAttributesIndentSize": null,

	// Quantidade máxima de caracteres por linha (0 = desabilitar).
	"html.format.wrapLineLength": 120,

	// Mostrar a marca e a documentação de atributo durante a focalização.
	"html.hover.documentation": true,

	// Mostrar as referências ao MDN durante a focalização.
	"html.hover.references": true,

	// Preterido e substituído por `editor.linkedEditing`
	// Habilitar/desabilitar cursor de espelhamento na marca HTML correspondente.
	"html.mirrorCursorOnMatchingTag": false,

	// Controla se o suporte à linguagem HTML interna sugere marcas, propriedades e valores do HTML5.
	"html.suggest.html5": true,

	// Rastreia a comunicação entre o VS Code e o servidor de linguagem HTML.
	"html.trace.server": "off",

	// Controla se o suporte à linguagem HTML interna valida scripts incorporados.
	"html.validate.scripts": true,

	// Controla se o suporte à linguagem HTML interna valida estilos incorporados.
	"html.validate.styles": true,

	// Double click in the html preview to switch to the editor.
	"html.preview.doubleClickToSwitchToEditor": true,

	// Mark the current editor selection in the html preview.
	"html.preview.markEditorSelection": true,

	// When a html preview is scrolled, update the view of the editor.
	"html.preview.scrollEditorWithPreview": true,

	// When a html editor is scrolled, update the view of the preview.
	"html.preview.scrollPreviewWithEditor": true,

	// Enable debug logging for the html extension.
	"html.trace": "off",

	// A configuração `json.colorDecorators.enable` foi preterida em favor de `editor.colorDecorators`.
	// Habilita ou desabilita os decoradores de cor
	"json.colorDecorators.enable": true,

	// Habilitar/desabilitar o formatador JSON padrão
	"json.format.enable": true,

	// Mantenha todas as novas linhas existentes ao formatar.
	"json.format.keepLines": false,

	// O número máximo computado de símbolos de estrutura de tópicos e regiões de dobragem (limitados por motivos de desempenho).
	"json.maxItemsComputed": 5000,

	// Quando habilitados, os esquemas JSON podem ser buscados em locais http e https.
	"json.schemaDownload.enable": true,

	// Associar os esquemas aos arquivos JSON no projeto atual.
	"json.schemas": [],

	// Rastreia a comunicação entre o VS Code e o servidor de linguagem JSON.
	"json.trace.server": "off",

	// Habilitar/desabilitar a validação JSON.
	"json.validate.enable": true,

	// Habilitar/desabilitar soltando no Markdown editor para inserir o deslocamento. Requer a habilitação de `editor.dropIntoEditor.enabled`.
	"markdown.editor.drop.enabled": true,

	// Ativar/desativar a colagem de arquivos em um editor Markdown insere links Markdown. Requer habilitação `editor.experimental.pasteActions.enabled`.
	"markdown.experimental.editor.pasteLinks.enabled": true,

	// Tente atualizar links em arquivos Markdown quando um arquivo for renomeado/movido no workspace. Use `markdown.experimental.updateLinksOnFileMove.externalFileGlobs` para configurar quais arquivos disparam atualizações de link.
	//  - prompt: Avisar sobre cada movimentação de arquivo.
	//  - always: Sempre atualize os links automaticamente.
	//  - never: Nunca tente atualizar o link e não avisar.
	"markdown.experimental.updateLinksOnFileMove.enabled": "never",

	// habilitar/desabilitar os links de atualização quando um diretório for movido ou renomeado no workspace.
	"markdown.experimental.updateLinksOnFileMove.enableForDirectories": true,

	// Um glob que especifica quais arquivos além de markdown devem disparar uma atualização de link.
	"markdown.experimental.updateLinksOnFileMove.externalFileGlobs": "**/*.{jpg,jpe,jpeg,png,bmp,gif,ico,webp,avif,tiff,svg,mp4}",

	// Controla se os links nos arquivos Markdown devem ser abertos.
	//  - currentGroup: Abrir links no grupo do editor ativo.
	//  - beside: Abrir links ao lado do editor ativo.
	"markdown.links.openLocation": "currentGroup",

	// Define como as quebras de linha são renderizadas na visualização de Markdown. A definição desta opção como 'true' cria um <br> para novas linhas dentro de parágrafos.
	"markdown.preview.breaks": false,

	// Clicar duas vezes na visualização de Markdown para mudar para o editor.
	"markdown.preview.doubleClickToSwitchToEditor": true,

	// Controla a família de fontes usada na visualização de Markdown.
	"markdown.preview.fontFamily": "-apple-system, BlinkMacSystemFont, 'Segoe WPC', 'Segoe UI', system-ui, 'Ubuntu', 'Droid Sans', sans-serif",

	// Controla o tamanho da fonte em pixels usado na visualização de Markdown.
	"markdown.preview.fontSize": 14,

	// Controla a altura da linha usada na visualização de Markdown. Este número é relativo ao tamanho da fonte.
	"markdown.preview.lineHeight": 1.6,

	// Habilitar ou desabilitar a conversão de texto do tipo URL em links na visualização de Markdown.
	"markdown.preview.linkify": true,

	// Marcar a seleção do editor atual na visualização de Markdown.
	"markdown.preview.markEditorSelection": true,

	// Controla como os links para outros arquivos Markdown na visualização de Markdown devem ser abertos.
	//  - inPreview: Tentar abrir links na visualização de Markdown.
	//  - inEditor: Tentar abrir links no editor.
	"markdown.preview.openMarkdownLinks": "inPreview",

	// Quando uma visualização de Markdown for rolada, atualizar a exibição do editor.
	"markdown.preview.scrollEditorWithPreview": true,

	// Quando um Markdown editor for rolado, atualizar a exibição da visualização.
	"markdown.preview.scrollPreviewWithEditor": true,

	// Habilitar ou desabilitar algumas substituições com neutralidade de linguagem e o aperfeiçoamento de citações na visualização de Markdown.
	"markdown.preview.typographer": false,

	// Uma lista de URLs ou caminhos locais para folhas de estilos CSS que serão usados na visualização do Markdown. Os caminhos relativos são interpretados em relação à pasta aberta no Explorer. Se não houver pastas abertas, eles serão interpretados em relação à localização do arquivo Markdown. Todos os '\' precisam ser escritos como '\\'.
	"markdown.styles": [],

	// Habilitar/desabilitar sugestões de caminho para links de markdown
	"markdown.suggest.paths.enabled": true,

	// Habilitar o registro em log da depuração para a extensão de Markdown.
	"markdown.trace.extension": "off",

	// Traça a comunicação entre o VS Code e o servidor de linguagem Markdown.
	"markdown.trace.server": "off",

	// Habilitar/desabilitar todos os relatórios de erros em arquivos Markdown.
	"markdown.validate.enabled": false,

	// Valide links para outros arquivos em arquivos Markdown, por exemplo, `[link](/path/to/file.md)`. Isso verifica se os arquivos de destino existem. Requer a ativação de `markdown.validate.enabled`.
	"markdown.validate.fileLinks.enabled": "warning",

	// Valide a parte do fragmento de links para cabeçalhos em outros arquivos em arquivos Markdown, por exemplo `[link](/path/to/file.md#header)`. Herda o valor de configuração de `markdown.validate.fragmentLinks.enabled` por padrão.
	"markdown.validate.fileLinks.markdownFragmentLinks": "inherit",

	// Valide links de fragmentos para cabeçalhos no arquivo Markdown atual, por exemplo `[link](#header)`. Requer a ativação de `markdown.validate.enabled`.
	"markdown.validate.fragmentLinks.enabled": "warning",

	// Configure links que não devem ser validados. Por exemplo, adicionar `/about` não validaria o link `[about](/about)`, enquanto o glob `/assets/**/*.svg` permitiria que você pule a validação de qualquer link para arquivos `.svg` no diretório `assets`.
	"markdown.validate.ignoredLinks": [],

	// Valide links de referência em arquivos Markdown, por exemplo `[link][ref]`. Requer a ativação de `markdown.validate.enabled`.
	"markdown.validate.referenceLinks.enabled": "warning",

	// Controla se as sugestões de linguagem do PHP internas estão habilitadas. O suporte sugere variáveis e globais do PHP.
	"php.suggest.basic": true,

	// Habilitar/desabilitar a validação interna do PHP.
	"php.validate.enable": true,

	// Aponta para o executável do PHP.
	"php.validate.executablePath": null,

	// Se o linter é executado ao salvar ou no tipo.
	"php.validate.run": "onSave",

	// Habilitar/desabilitar o fechamento automático de marcas JSX.
	"javascript.autoClosingTags": true,

	// Habilitar/desabilitar o formatador padrão do JavaScript.
	"javascript.format.enable": true,

	// Define o tratamento de espaço após um delimitador de vírgula.
	"javascript.format.insertSpaceAfterCommaDelimiter": true,

	// Define o tratamento de espaço após a palavra-chave do construtor.
	"javascript.format.insertSpaceAfterConstructor": false,

	// Define o tratamento de espaço após a palavra-chave de função para funções anônimas.
	"javascript.format.insertSpaceAfterFunctionKeywordForAnonymousFunctions": true,

	// Define o tratamento de espaço após palavras-chave em uma instrução de fluxo de controle.
	"javascript.format.insertSpaceAfterKeywordsInControlFlowStatements": true,

	// Define o tratamento de espaço após abrir e antes de fechar chaves vazias.
	"javascript.format.insertSpaceAfterOpeningAndBeforeClosingEmptyBraces": true,

	// Define o tratamento de espaço após a abertura e antes do fechamento de chaves da expressão JSX.
	"javascript.format.insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces": false,

	// Define o tratamento de espaço após abrir e antes de fechar chaves não vazias.
	"javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces": true,

	// Define o tratamento de espaço após abrir e antes de fechar colchetes não vazios.
	"javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets": false,

	// Define o tratamento de espaço após abrir e antes de fechar parênteses não vazios.
	"javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis": false,

	// Define o tratamento de espaço após abrir e antes de fechar chaves de cadeia de caracteres do modelo.
	"javascript.format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces": false,

	// Define o tratamento de espaço após um ponto e vírgula em uma instrução for.
	"javascript.format.insertSpaceAfterSemicolonInForStatements": true,

	// Define o tratamento de espaço após um operador binário.
	"javascript.format.insertSpaceBeforeAndAfterBinaryOperators": true,

	// Define o tratamento de espaço antes dos parênteses do argumento de função.
	"javascript.format.insertSpaceBeforeFunctionParenthesis": false,

	// Define se uma chave de abertura é colocada em uma nova linha para blocos de controle.
	"javascript.format.placeOpenBraceOnNewLineForControlBlocks": false,

	// Define se uma chave de abertura é colocada em uma nova linha para funções.
	"javascript.format.placeOpenBraceOnNewLineForFunctions": false,

	// Define o processamento de ponto e vírgula opcional. Exige o uso do TypeScript 3.7 ou mais recente no workspace.
	//  - ignore: Não inserir nem remover pontos e vírgulas.
	//  - insert: Inserir pontos e vírgulas nos finais da instrução.
	//  - remove: Remover sinais de ponto e vírgula desnecessários.
	"javascript.format.semicolons": "ignore",

	// Esta configuração foi preterida e substituída por `js/ts.implicitProjectConfig.checkJs`.
	// Habilitar/desabilitar a verificação semântica de arquivos JavaScript. Os arquivos `jsconfig.json` ou `tsconfig.json` existentes substituem esta configuração.
	"javascript.implicitProjectConfig.checkJs": false,

	// Esta configuração foi preterida e substituída por `js/ts.implicitProjectConfig.experimentalDecorators`.
	// Habilitar/desabilitar os `experimentalDecorators` em arquivos JavaScript que não fazem parte de um projeto. Os arquivos `jsconfig.json` ou `tsconfig.json` existentes substituem esta configuração.
	"javascript.implicitProjectConfig.experimentalDecorators": false,

	// Enable/disable inlay hints for member values in enum declarations:
	// ```typescript
	// 
	// enum MyValue {
	// 	A /* = 0 */;
	// 	B /* = 1 */;
	// }
	//  
	// ```
	// Requires using TypeScript 4.4+ in the workspace.
	"javascript.inlayHints.enumMemberValues.enabled": false,

	// Enable/disable inlay hints for implicit return types on function signatures:
	// ```typescript
	// 
	// function foo() /* :number */ {
	// 	return Date.now();
	// } 
	//  
	// ```
	// Requires using TypeScript 4.4+ in the workspace.
	"javascript.inlayHints.functionLikeReturnTypes.enabled": false,

	// Enable/disable inlay hints for parameter names:
	// ```typescript
	// 
	// parseInt(/* str: */ '123', /* radix: */ 8)
	//  
	// ```
	// Requires using TypeScript 4.4+ in the workspace.
	//  - none: Desabilite as dicas de nome de parâmetro.
	//  - literals: Habilite dicas de nome de parâmetro apenas para argumentos literais.
	//  - all: Habilite dicas de nome de parâmetro para argumentos literais e não literais.
	"javascript.inlayHints.parameterNames.enabled": "none",

	// Suprime dicas de nome de parâmetro em argumentos cujo texto é idêntico ao nome do parâmetro.
	"javascript.inlayHints.parameterNames.suppressWhenArgumentMatchesName": true,

	// Enable/disable inlay hints for implicit parameter types:
	// ```typescript
	// 
	// el.addEventListener('click', e /* :MouseEvent */ => ...)
	//  
	// ```
	// Requires using TypeScript 4.4+ in the workspace.
	"javascript.inlayHints.parameterTypes.enabled": false,

	// Enable/disable inlay hints for implicit types on property declarations:
	// ```typescript
	// 
	// class Foo {
	// 	prop /* :number */ = Date.now();
	// }
	//  
	// ```
	// Requires using TypeScript 4.4+ in the workspace.
	"javascript.inlayHints.propertyDeclarationTypes.enabled": false,

	// Enable/disable inlay hints for implicit variable types:
	// ```typescript
	// 
	// const foo /* :number */ = Date.now();
	//  
	// ```
	// Requires using TypeScript 4.4+ in the workspace.
	"javascript.inlayHints.variableTypes.enabled": false,

	// Suprimir dicas de tipo em variáveis cujo nome é idêntico ao nome do tipo. Requer o uso do TypeScript 4.8+ no workspace.
	"javascript.inlayHints.variableTypes.suppressWhenTypeMatchesName": true,

	// Especifique padrões glob de arquivos a serem excluídos das importações automáticas. Requer o uso do TypeScript 4.8 ou mais recente no espaço de trabalho.
	"javascript.preferences.autoImportFileExcludePatterns": [],

	// Estilo de caminho preferencial para importações automáticas.
	//  - shortest: Prefere uma importação não relativa somente quando há uma disponível com menos segmentos de caminho do que uma importação relativa.
	//  - relative: Prefere um caminho relativo para o local do arquivo importado.
	//  - non-relative: Prefere uma importação não relativa com base na `baseUrl` ou nos `paths` configurados no `jsconfig.json`/`tsconfig.json`.
	//  - project-relative: Prefere uma importação não relativa somente quando o caminho da importação relativa sai do pacote ou do diretório do projeto. Exige o uso do TypeScript 4.2 + no workspace.
	"javascript.preferences.importModuleSpecifier": "shortest",

	// Término do caminho preferencial para importações automáticas. Exige o uso do TypeScript 4.5+ no workspace.
	//  - auto: Usar as configurações do projeto para selecionar um padrão.
	//  - minimal: Encurtar `./component/index.js` para `./component`.
	//  - index: Encurtar `./component/index.js` para `./component/index`.
	//  - js: Não encurtar as terminações de caminho. Incluir a extensão `.js`.
	"javascript.preferences.importModuleSpecifierEnding": "auto",

	// Estilo preferido para conclusões de atributos JSX.
	//  - auto: Insira `={}` ou `=""` após os nomes dos atributos com base no tipo de prop. Consulte `javascript.preferences.quoteStyle` para controlar o tipo de aspas usado para atributos de cadeia de caracteres.
	//  - braces: Insira `= {} `após os nomes dos atributos.
	//  - none: Insira apenas nomes de atributos.
	"javascript.preferences.jsxAttributeCompletionStyle": "auto",

	// Estilo de aspas preferenciais a ser usado para correções rápidas.
	//  - auto: Inferir o tipo de cotação do código existente
	//  - single: Sempre usar aspas simples: `'`
	//  - double: Sempre usar aspas duplas: `"`
	"javascript.preferences.quoteStyle": "auto",

	// A configuração 'typescript.preferences.renameShorthandProperties' foi preterida em favor de 'typescript.preferences.useAliasesForRenames'
	// Habilitar/desabilitar a introdução de aliases para propriedades de objeto abreviadas durante a renomeação. Exige o uso do TypeScript 3.4 ou mais recente no workspace.
	"javascript.preferences.renameShorthandProperties": true,

	// Habilitar/desabilitar a introdução de aliases para propriedades de objeto abreviadas durante a renomeação. Exige o uso do TypeScript 3.4 ou mais recente no workspace.
	"javascript.preferences.useAliasesForRenames": true,

	// Habilitar/desabilitar CodeLens de referências em arquivos JavaScript.
	"javascript.referencesCodeLens.enabled": false,

	// Habilitar/desabilitar CodeLens de referências em todas as funções em arquivos JavaScript.
	"javascript.referencesCodeLens.showOnAllFunctions": false,

	// Habilitar/desabilitar sugestões de importação automática.
	"javascript.suggest.autoImports": true,

	// Habilitar/desabilitar preenchimentos de snippet para membros de classe. Requer o uso do TypeScript 4.5+ no workspace
	"javascript.suggest.classMemberSnippets.enabled": true,

	// Concluir funções com assinaturas de parâmetro.
	"javascript.suggest.completeFunctionCalls": false,

	// Habilitar/desabilitar sugestão para concluir comentários JSDoc.
	"javascript.suggest.completeJSDocs": true,

	// Habilitar/desabilitar sugestões de preenchimento automático.
	"javascript.suggest.enabled": true,

	// Habilitar/desabilitar a exibição de conclusões sobre valores potencialmente indefinidos que inserem uma chamada de cadeia opcional. Exige TS 3.7 ou posterior e as verificações de nulo estrito devem ser habilitadas.
	"javascript.suggest.includeAutomaticOptionalChainCompletions": true,

	// Habilitar/desabilitar as conclusões do estilo de importação automática nas instruções de importação de tipo parcial. Exige o uso do TypeScript 4.3 ou superior no workspace.
	"javascript.suggest.includeCompletionsForImportStatements": true,

	// Habilitar/desabilitar a geração de anotações `@return` nos modelos JSDoc. Exige o uso do TypeScript 4.2 ou superior no workspace.
	"javascript.suggest.jsdoc.generateReturns": true,

	// Habilitar/desabilitar incluindo nomes exclusivos do arquivo em sugestões do JavaScript. Observe que as sugestões de nome sempre são desabilitadas no código do JavaScript que é verificado semanticamente usando `@ts-check` ou `checkJs`.
	"javascript.suggest.names": true,

	// Habilitar/desabilitar sugestões para caminhos em instruções de importação e exigir chamadas.
	"javascript.suggest.paths": true,

	// Habilitar/desabilitar o diagnóstico de sugestão para arquivos JavaScript no editor.
	"javascript.suggestionActions.enabled": true,

	// Habilitar/Desabilitar atualização automática de caminhos de importação ao renomear ou mover um arquivo no VS Code.
	//  - prompt: Avisar em cada renomeação.
	//  - always: Sempre atualizar caminhos automaticamente.
	//  - never: Nunca renomear caminhos e não avisar.
	"javascript.updateImportsOnFileMove.enabled": "prompt",

	// Habilitar/desabilitar a validação do JavaScript.
	"javascript.validate.enable": true,

	// Habilitar/desabilitar a verificação semântica de arquivos JavaScript. Os arquivos `jsconfig.json` ou `tsconfig.json` existentes substituem esta configuração.
	"js/ts.implicitProjectConfig.checkJs": false,

	// Habilitar/desabilitar os `experimentalDecorators` em arquivos JavaScript que não fazem parte de um projeto. Os arquivos `jsconfig.json` ou `tsconfig.json` existentes substituem esta configuração.
	"js/ts.implicitProjectConfig.experimentalDecorators": false,

	// Define o sistema do módulo do programa. Ver mais: https://www.typescriptlang.org/tsconfig#module.
	"js/ts.implicitProjectConfig.module": "ESNext",

	// Habilitar/desabilitar os [tipos de função estritos](https://www.typescriptlang.org/tsconfig#strictFunctionTypes) em arquivos JavaScript e TypeScript que não fazem parte de um projeto. Os arquivos `jsconfig.json` ou `tsconfig.json` existentes substituem esta configuração.
	"js/ts.implicitProjectConfig.strictFunctionTypes": true,

	// Habilitar/desabilitar as [verificações nulas estritas](https://www.typescriptlang.org/tsconfig#strictNullChecks) em arquivos JavaScript e TypeScript que não fazem parte de um projeto. Os arquivos `jsconfig.json` ou `tsconfig.json` existentes substituem esta configuração.
	"js/ts.implicitProjectConfig.strictNullChecks": true,

	// Defina a versão da linguagem JavaScript de destino para JavaScript emitido e inclua as declarações de biblioteca. Veja mais: https://www.typescriptlang.org/tsconfig#target.
	"js/ts.implicitProjectConfig.target": "ES2020",

	// Habilitar/desabilitar o fechamento automático de marcas JSX.
	"typescript.autoClosingTags": true,

	// Check if npm is installed for [Automatic Type Acquisition](https://code.visualstudio.com/docs/nodejs/working-with-javascript#_typings-and-automatic-type-acquisition).
	"typescript.check.npmIsInstalled": true,

	// Desabilita [Aquisição Automática de Tipos](https://code.visualstudio.com/docs/nodejs/working-with-javascript#_typings-and-automatic-type-acquisition). A aquisição automática de tipos busca pacotes `@types` do NPM para melhorar o IntelliSense para bibliotecas externas.
	"typescript.disableAutomaticTypeAcquisition": false,

	// Permite solicitar que os usuários usem a versão do TypeScript configurada no workspace para IntelliSense.
	"typescript.enablePromptUseWorkspaceTsdk": false,

	// Habilitar/desabilitar o formatador do TypeScript padrão.
	"typescript.format.enable": true,

	// Define o tratamento de espaço após um delimitador de vírgula.
	"typescript.format.insertSpaceAfterCommaDelimiter": true,

	// Define o tratamento de espaço após a palavra-chave do construtor.
	"typescript.format.insertSpaceAfterConstructor": false,

	// Define o tratamento de espaço após a palavra-chave de função para funções anônimas.
	"typescript.format.insertSpaceAfterFunctionKeywordForAnonymousFunctions": true,

	// Define o tratamento de espaço após palavras-chave em uma instrução de fluxo de controle.
	"typescript.format.insertSpaceAfterKeywordsInControlFlowStatements": true,

	// Define o tratamento de espaço após abrir e antes de fechar chaves vazias.
	"typescript.format.insertSpaceAfterOpeningAndBeforeClosingEmptyBraces": true,

	// Define o tratamento de espaço após a abertura e antes do fechamento de chaves da expressão JSX.
	"typescript.format.insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces": false,

	// Define o tratamento de espaço após abrir e antes de fechar chaves não vazias.
	"typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces": true,

	// Define o tratamento de espaço após abrir e antes de fechar colchetes não vazios.
	"typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets": false,

	// Define o tratamento de espaço após abrir e antes de fechar parênteses não vazios.
	"typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis": false,

	// Define o tratamento de espaço após abrir e antes de fechar chaves de cadeia de caracteres do modelo.
	"typescript.format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces": false,

	// Define o tratamento de espaço após um ponto e vírgula em uma instrução for.
	"typescript.format.insertSpaceAfterSemicolonInForStatements": true,

	// Define o tratamento de espaços após declarações de tipo no TypeScript.
	"typescript.format.insertSpaceAfterTypeAssertion": false,

	// Define o tratamento de espaço após um operador binário.
	"typescript.format.insertSpaceBeforeAndAfterBinaryOperators": true,

	// Define o tratamento de espaço antes dos parênteses do argumento de função.
	"typescript.format.insertSpaceBeforeFunctionParenthesis": false,

	// Define se uma chave de abertura é colocada em uma nova linha para blocos de controle.
	"typescript.format.placeOpenBraceOnNewLineForControlBlocks": false,

	// Define se uma chave de abertura é colocada em uma nova linha para funções.
	"typescript.format.placeOpenBraceOnNewLineForFunctions": false,

	// Define o processamento de ponto e vírgula opcional. Exige o uso do TypeScript 3.7 ou mais recente no workspace.
	//  - ignore: Não inserir nem remover pontos e vírgulas.
	//  - insert: Inserir pontos e vírgulas nos finais da instrução.
	//  - remove: Remover sinais de ponto e vírgula desnecessários.
	"typescript.format.semicolons": "ignore",

	// Habilitar/desabilitar CodeLens de implementações. Este CodeLens mostra os implementadores de uma interface.
	"typescript.implementationsCodeLens.enabled": false,

	// Enable/disable inlay hints for member values in enum declarations:
	// ```typescript
	// 
	// enum MyValue {
	// 	A /* = 0 */;
	// 	B /* = 1 */;
	// }
	//  
	// ```
	// Requires using TypeScript 4.4+ in the workspace.
	"typescript.inlayHints.enumMemberValues.enabled": false,

	// Enable/disable inlay hints for implicit return types on function signatures:
	// ```typescript
	// 
	// function foo() /* :number */ {
	// 	return Date.now();
	// } 
	//  
	// ```
	// Requires using TypeScript 4.4+ in the workspace.
	"typescript.inlayHints.functionLikeReturnTypes.enabled": false,

	// Enable/disable inlay hints for parameter names:
	// ```typescript
	// 
	// parseInt(/* str: */ '123', /* radix: */ 8)
	//  
	// ```
	// Requires using TypeScript 4.4+ in the workspace.
	//  - none: Desabilite as dicas de nome de parâmetro.
	//  - literals: Habilite dicas de nome de parâmetro apenas para argumentos literais.
	//  - all: Habilite dicas de nome de parâmetro para argumentos literais e não literais.
	"typescript.inlayHints.parameterNames.enabled": "none",

	// Suprime dicas de nome de parâmetro em argumentos cujo texto é idêntico ao nome do parâmetro.
	"typescript.inlayHints.parameterNames.suppressWhenArgumentMatchesName": true,

	// Enable/disable inlay hints for implicit parameter types:
	// ```typescript
	// 
	// el.addEventListener('click', e /* :MouseEvent */ => ...)
	//  
	// ```
	// Requires using TypeScript 4.4+ in the workspace.
	"typescript.inlayHints.parameterTypes.enabled": false,

	// Enable/disable inlay hints for implicit types on property declarations:
	// ```typescript
	// 
	// class Foo {
	// 	prop /* :number */ = Date.now();
	// }
	//  
	// ```
	// Requires using TypeScript 4.4+ in the workspace.
	"typescript.inlayHints.propertyDeclarationTypes.enabled": false,

	// Enable/disable inlay hints for implicit variable types:
	// ```typescript
	// 
	// const foo /* :number */ = Date.now();
	//  
	// ```
	// Requires using TypeScript 4.4+ in the workspace.
	"typescript.inlayHints.variableTypes.enabled": false,

	// Suprimir dicas de tipo em variáveis cujo nome é idêntico ao nome do tipo. Requer o uso do TypeScript 4.8+ no workspace.
	"typescript.inlayHints.variableTypes.suppressWhenTypeMatchesName": true,

	// Define a localidade usada para relatar erros de JavaScript e TypeScript. O padrão é usar a localidade do VS Code.
	"typescript.locale": "auto",

	// Specifies the path to the npm executable used for [Automatic Type Acquisition](https://code.visualstudio.com/docs/nodejs/working-with-javascript#_typings-and-automatic-type-acquisition).
	"typescript.npm": "",

	// Especifique padrões glob de arquivos a serem excluídos das importações automáticas. Requer o uso do TypeScript 4.8 ou mais recente no espaço de trabalho.
	"typescript.preferences.autoImportFileExcludePatterns": [],

	// Estilo de caminho preferencial para importações automáticas.
	//  - shortest: Prefere uma importação não relativa somente quando há uma disponível com menos segmentos de caminho do que uma importação relativa.
	//  - relative: Prefere um caminho relativo para o local do arquivo importado.
	//  - non-relative: Prefere uma importação não relativa com base na `baseUrl` ou nos `paths` configurados no `jsconfig.json`/`tsconfig.json`.
	//  - project-relative: Prefere uma importação não relativa somente quando o caminho da importação relativa sai do pacote ou do diretório do projeto. Exige o uso do TypeScript 4.2 + no workspace.
	"typescript.preferences.importModuleSpecifier": "shortest",

	// Término do caminho preferencial para importações automáticas. Exige o uso do TypeScript 4.5+ no workspace.
	//  - auto: Usar as configurações do projeto para selecionar um padrão.
	//  - minimal: Encurtar `./component/index.js` para `./component`.
	//  - index: Encurtar `./component/index.js` para `./component/index`.
	//  - js: Não encurtar as terminações de caminho. Incluir a extensão `.js`.
	"typescript.preferences.importModuleSpecifierEnding": "auto",

	// Habilitar/desabilitar a pesquisa de dependências `package.json` para importações automáticas disponíveis.
	//  - auto: Pesquisar dependências com base no impacto de desempenho estimado.
	//  - on: Sempre pesquisar dependências.
	//  - off: Nunca pesquisar dependências.
	"typescript.preferences.includePackageJsonAutoImports": "auto",

	// Estilo preferido para conclusões de atributos JSX.
	//  - auto: Insira `={}` ou `=""` após os nomes dos atributos com base no tipo de prop. Consulte `typescript.preferences.quoteStyle` para controlar o tipo de aspas usado para atributos de cadeia de caracteres.
	//  - braces: Insira `= {} `após os nomes dos atributos.
	//  - none: Insira apenas nomes de atributos.
	"typescript.preferences.jsxAttributeCompletionStyle": "auto",

	// Estilo de aspas preferenciais a ser usado para correções rápidas.
	//  - auto: Inferir o tipo de cotação do código existente
	//  - single: Sempre usar aspas simples: `'`
	//  - double: Sempre usar aspas duplas: `"`
	"typescript.preferences.quoteStyle": "auto",

	// A configuração 'typescript.preferences.renameShorthandProperties' foi preterida em favor de 'typescript.preferences.useAliasesForRenames'
	// Habilitar/desabilitar a introdução de aliases para propriedades de objeto abreviadas durante a renomeação. Exige o uso do TypeScript 3.4 ou mais recente no workspace.
	"typescript.preferences.renameShorthandProperties": true,

	// Habilitar/desabilitar a introdução de aliases para propriedades de objeto abreviadas durante a renomeação. Exige o uso do TypeScript 3.4 ou mais recente no workspace.
	"typescript.preferences.useAliasesForRenames": true,

	// Habilitar/desabilitar CodeLens de referências em arquivos TypeScript.
	"typescript.referencesCodeLens.enabled": false,

	// Habilitar/desabilitar CodeLens de referências em todas as funções em arquivos TypeScript.
	"typescript.referencesCodeLens.showOnAllFunctions": false,

	// Relatar verificações de estilo como avisos.
	"typescript.reportStyleChecksAsWarnings": true,

	// Habilitar/desabilitar sugestões de importação automática.
	"typescript.suggest.autoImports": true,

	// Habilitar/desabilitar preenchimentos de snippet para membros de classe. Requer o uso do TypeScript 4.5+ no workspace
	"typescript.suggest.classMemberSnippets.enabled": true,

	// Concluir funções com assinaturas de parâmetro.
	"typescript.suggest.completeFunctionCalls": false,

	// Habilitar/desabilitar sugestão para concluir comentários JSDoc.
	"typescript.suggest.completeJSDocs": true,

	// Habilitar/desabilitar sugestões de preenchimento automático.
	"typescript.suggest.enabled": true,

	// Habilitar/desabilitar a exibição de conclusões sobre valores potencialmente indefinidos que inserem uma chamada de cadeia opcional. Exige TS 3.7 ou posterior e as verificações de nulo estrito devem ser habilitadas.
	"typescript.suggest.includeAutomaticOptionalChainCompletions": true,

	// Habilitar/desabilitar as conclusões do estilo de importação automática nas instruções de importação de tipo parcial. Exige o uso do TypeScript 4.3 ou superior no workspace.
	"typescript.suggest.includeCompletionsForImportStatements": true,

	// Habilitar/desabilitar as conclusões de snippet do Servidor TS. Exige o uso do TypeScript 4.3 ou superior no workspace.
	"typescript.suggest.includeCompletionsWithSnippetText": true,

	// Habilitar/desabilitar a geração de anotações `@return` nos modelos JSDoc. Exige o uso do TypeScript 4.2 ou superior no workspace.
	"typescript.suggest.jsdoc.generateReturns": true,

	// Habilitar/desabilitar preenchimentos de snippet para métodos em objetos literais. Requer o uso do TypeScript 4.7+ no workspace
	"typescript.suggest.objectLiteralMethodSnippets.enabled": true,

	// Habilitar/desabilitar sugestões para caminhos em instruções de importação e exigir chamadas.
	"typescript.suggest.paths": true,

	// Habilitar/desabilitar diagnóstico de sugestão para arquivos TypeScript no editor.
	"typescript.suggestionActions.enabled": true,

	// Habilitar/desabilitar pesquisas ocasionais que nos ajudam a melhorar o suporte a JavaScript e TypeScript do VS Code.
	"typescript.surveys.enabled": true,

	// Controla a detecção automática de tarefas tsc.
	//  - on: Criar tarefas de build e de inspeção.
	//  - off: Desabilitar este recurso.
	//  - build: Criar apenas tarefas de compilação de execução única.
	//  - watch: Criar apenas tarefas de compilação e inspeção.
	"typescript.tsc.autoDetect": "on",

	// Specifies the folder path to the tsserver and `lib*.d.ts` files under a TypeScript install to use for IntelliSense, for example: `./node_modules/typescript/lib`.
	// 
	// - When specified as a user setting, the TypeScript version from `typescript.tsdk` automatically replaces the built-in TypeScript version.
	// - When specified as a workspace setting, `typescript.tsdk` allows you to switch to use that workspace version of TypeScript for IntelliSense with the `TypeScript: Select TypeScript version` command.
	// 
	// See the [TypeScript documentation](https://code.visualstudio.com/docs/typescript/typescript-compiling#_using-newer-typescript-versions) for more detail about managing TypeScript versions.
	"typescript.tsdk": "",

	// Habilita o rastreamento do desempenho do servidor TS em um diretório. Esses arquivos de rastreamento podem ser usados para diagnosticar problemas de desempenho do Servidor TS. O log pode conter caminhos de arquivo, código-fonte e outras informações possivelmente confidenciais do projeto.
	"typescript.tsserver.enableTracing": false,

	// (Experimental) Habilita o relatório de erros amplo do projeto.
	"typescript.tsserver.experimental.enableProjectDiagnostics": false,

	// Habilita o registro em log do TS Server em um arquivo. Esse log pode ser usado para diagnosticar problemas do TS Server. O log pode conter caminhos de arquivo, código-fonte e outras informações potencialmente confidenciais do seu projeto.
	"typescript.tsserver.log": "off",

	// A quantidade máxima de memória (em MB) a ser alocada para o processo do servidor do TypeScript.
	"typescript.tsserver.maxTsServerMemory": 3072,

	// Caminhos adicionais para descobrir os plugins do Serviço de Linguagem TypeScript.
	"typescript.tsserver.pluginPaths": [],

	// Habilita o rastreamento de mensagens enviadas para o TS Server. Esse rastreamento pode ser usado para diagnosticar problemas do TS Server. O rastreamento pode conter caminhos de arquivo, código-fonte e outras informações potencialmente confidenciais do seu projeto.
	"typescript.tsserver.trace": "off",

	// Essa configuração foi preterida e substituída por `typescript.tsserver.useSyntaxServer`.
	// Habilitar/desabilitar a geração de um servidor TypeScript separado que pode responder mais rapidamente às operações relacionadas à sintaxe, como calcular a dobragem ou computar os símbolos de documentos. Exige o uso de TypeScript 3.4.0 ou mais recente no workspace.
	"typescript.tsserver.useSeparateSyntaxServer": true,

	// Controla se TypeScript inicia um servidor dedicado para lidar mais rapidamente com as operações relacionadas à sintaxe, como o dobramento de código de computação.
	//  - always: Use um servidor de sintaxe mais leve para lidar com todas as operações do IntelliSense. Este servidor de sintaxe só pode fornecer IntelliSense para arquivos abertos.
	//  - never: Não use um servidor de sintaxe dedicado. Use um único servidor para lidar com todas as operações do IntelliSense.
	//  - auto: Gere um servidor completo e um servidor mais leve dedicado às operações de sintaxe. O servidor de sintaxe é usado para acelerar as operações de sintaxe e fornecer IntelliSense durante o carregamento de projetos.
	"typescript.tsserver.useSyntaxServer": "auto",

	// Configurar as estratégias de monitoramento que devem ser usadas para manter o controle de arquivos e diretórios. Exige o uso de TypeScript 3.8 ou posterior no workspace.
	"typescript.tsserver.watchOptions": {},

	// Habilitar/Desabilitar atualização automática de caminhos de importação ao renomear ou mover um arquivo no VS Code.
	//  - prompt: Avisar em cada renomeação.
	//  - always: Sempre atualizar caminhos automaticamente.
	//  - never: Nunca renomear caminhos e não avisar.
	"typescript.updateImportsOnFileMove.enabled": "prompt",

	// Habilitar/desabilitar a validação do TypeScript.
	"typescript.validate.enable": true,

	// Controls which files are searched by [go to symbol in workspace](https://code.visualstudio.com/docs/editor/editingevolved#_open-symbol-by-name).
	//  - allOpenProjects: Pesquisar todos os projetos abertos do JavaScript ou TypeScript para símbolos. Exige o uso do TypeScript 3.9 ou mais recente no workspace.
	//  - currentProject: Somente pesquisar símbolos no projeto JavaScript ou TypeScript atual.
	"typescript.workspaceSymbols.scope": "allOpenProjects",

	// Deprecated. Use `gitlens.views.formats.commits.description` instead
	// 
	"gitlens.views.commitDescriptionFormat": null,

	// Deprecated. Use `gitlens.views.formats.files.description` instead
	// 
	"gitlens.views.commitFileDescriptionFormat": null,

	// Deprecated. Use `gitlens.views.formats.files.label` instead
	// 
	"gitlens.views.commitFileFormat": null,

	// Deprecated. Use `gitlens.views.commits.files.label` instead
	// 
	"gitlens.views.commitFormat": null,

	// Specifies the default number of items to show in a view list. Use 0 to specify no limit
	"gitlens.views.defaultItemLimit": 10,

	// Specifies whether to enable experimental multi-select support in the views.
	// **NOTE**: Requires a restart to take effect.
	"gitlens.views.experimental.multiSelect.enabled": false,

	// Specifies the description format of commits in the views. See [_Commit Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs
	"gitlens.views.formats.commits.description": "${author, }${agoOrDate}",

	// Specifies the format of commits in the views. See [_Commit Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs
	"gitlens.views.formats.commits.label": "${❰ tips ❱➤  }${message}",

	// Specifies the description format of a file in the views. See [_File Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#file-tokens) in the GitLens docs
	"gitlens.views.formats.files.description": "${directory}${  ←  originalPath}",

	// Specifies the format of a file in the views. See [_File Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#file-tokens) in the GitLens docs
	"gitlens.views.formats.files.label": "${working  }${file}",

	// Specifies the description format of stashes in the views. See [_Commit Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs
	"gitlens.views.formats.stashes.description": "${stashOnRef, }${agoOrDate}",

	// Specifies the format of stashes in the views. See [_Commit Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs
	"gitlens.views.formats.stashes.label": "${message}",

	// Specifies the number of items to show in a each page when paginating a view list. Use 0 to specify no limit
	"gitlens.views.pageItemLimit": 40,

	// Specifies whether to show relative date markers (_Less than a week ago_, _Over a week ago_, _Over a month ago_, etc) on revision (commit) histories in the views
	"gitlens.views.showRelativeDateMarkers": true,

	// Deprecated. Use `gitlens.views.formats.stashes.description` instead
	// 
	"gitlens.views.stashDescriptionFormat": null,

	// Deprecated. Use `gitlens.views.formats.files.description` instead
	// 
	"gitlens.views.stashFileDescriptionFormat": null,

	// Deprecated. Use `gitlens.views.formats.files.label` instead
	// 
	"gitlens.views.stashFileFormat": null,

	// Deprecated. Use `gitlens.views.stashes.files.label` instead
	// 
	"gitlens.views.stashFormat": null,

	// Deprecated. Use `gitlens.views.formats.files.description` instead
	// 
	"gitlens.views.statusFileDescriptionFormat": null,

	// Deprecated. Use `gitlens.views.formats.files.label` instead
	// 
	"gitlens.views.statusFileFormat": null,

	// Specifies whether to show avatar images instead of commit (or status) icons in the _Commits_ view
	"gitlens.views.commits.avatars": true,

	// Specifies whether to compact (flatten) unnecessary file nesting in the _Commits_ view. Only applies when `gitlens.views.commits.files.layout` is set to `tree` or `auto`
	"gitlens.views.commits.files.compact": true,

	// Specifies how the _Commits_ view will display files
	//  - auto: Automatically switches between displaying files as a `tree` or `list` based on the `gitlens.views.commits.files.threshold` value and the number of files at each nesting level
	//  - list: Displays files as a list
	//  - tree: Displays files as a tree
	"gitlens.views.commits.files.layout": "auto",

	// Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Commits_ view. Only applies when `gitlens.views.commits.files.layout` is set to `auto`
	"gitlens.views.commits.files.threshold": 5,

	// Specifies whether to query for pull requests associated with the current branch and commits in the _Commits_ view. Requires a connection to a supported remote service (e.g. GitHub)
	"gitlens.views.commits.pullRequests.enabled": true,

	// Specifies whether to show pull requests (if any) associated with the current branch in the _Commits_ view. Requires a connection to a supported remote service (e.g. GitHub)
	"gitlens.views.commits.pullRequests.showForBranches": true,

	// Specifies whether to show pull requests (if any) associated with commits in the _Commits_ view. Requires a connection to a supported remote service (e.g. GitHub)
	"gitlens.views.commits.pullRequests.showForCommits": true,

	// Specifies whether to reveal commits in the _Commits_ view, otherwise they revealed in the _Repositories_ view
	"gitlens.views.commits.reveal": true,

	// Specifies whether to show a comparison of the current branch or the working tree with a user-selected reference (branch, tag. etc) in the _Commits_ view
	//  - false: Hides the branch comparison
	//  - branch: Compares the current branch with a user-selected reference
	//  - working: Compares the working tree with a user-selected reference
	"gitlens.views.commits.showBranchComparison": "working",

	// Sempre revele o teste executado quando `testing.followRunningTest` estiver ativado. Se esta configuração estiver desativada, apenas os testes com falha serão revelados.
	"testing.alwaysRevealTestOnStateChange": false,

	// Configura quando a exibição de espiada de erros é aberta automaticamente.
	//  - failureAnywhere: Abrir a exibição automaticamente independentemente do local da falha.
	//  - failureInVisibleDocument: Abrir a exibição automaticamente quando um teste falhar em um documento visível.
	//  - never: Nunca abre automaticamente.
	"testing.automaticallyOpenPeekView": "failureInVisibleDocument",

	// Controla se a exibição de espiada será aberta automaticamente durante o modo de execução automática.
	"testing.automaticallyOpenPeekViewDuringAutoRun": false,

	// O tempo de espera, em milissegundos, depois que um teste é marcado como desatualizado até que uma nova execução seja iniciada.
	"testing.autoRun.delay": 1000,

	// Controla quais testes são executados automaticamente.
	//  - all: Executa automaticamente todos os testes detectados quando a execução automática é ativada. Executa novamente os testes individuais quando eles são alterados.
	//  - rerun: Executa novamente os testes individuais quando eles são alterados. Não executará automaticamente nenhum teste que ainda não tenha sido executado.
	"testing.autoRun.mode": "all",

	// Controla a ação a ser executada ao clicar com o botão esquerdo em uma decoração de teste na medianiz.
	//  - run: Execute o teste.
	//  - debug: Depure o teste.
	//  - contextMenu: Abra o menu de contexto para mais opções.
	"testing.defaultGutterClickAction": "run",

	// Controla se o teste em execução deve ser seguido na exibição do explorador de teste
	"testing.followRunningTest": true,

	// Controla se as decorações de teste são mostradas na calha do editor.
	"testing.gutterEnabled": true,

	// Controla quando a exibição de teste deve ser aberta.
	//  - neverOpen: Nunca abrir automaticamente o modo de exibição de teste
	//  - openOnTestStart: Abrir o modo de exibição de teste quando os testes forem iniciados
	//  - openOnTestFailure: Abrir a exibição de teste em qualquer falha de teste
	"testing.openTesting": "openOnTestStart",

	// Controle se todos os editores sujos foram salvos antes de executar um teste.
	"testing.saveBeforeTest": true,

	// Inserir ponto e vírgula no fim da linha ao preencher as propriedades de CSS.
	"css.completion.completePropertyWithSemicolon": true,

	// Por padrão, o VS Code dispara a conclusão do valor da propriedade após a seleção de uma propriedade CSS. Use esta configuração para desabilitar esse comportamento.
	"css.completion.triggerPropertyValueCompletion": true,

	// A list of relative file paths pointing to JSON files following the [custom data format](https://github.com/microsoft/vscode-css-languageservice/blob/master/docs/customData.md).
	// 
	// VS Code loads custom data on startup to enhance its CSS support for the custom CSS properties, at directives, pseudo classes and pseudo elements you specify in the JSON files.
	// 
	// The file paths are relative to workspace and only workspace folder settings are considered.
	"css.customData": [],

	// Coloque as chaves na mesma linha que as regras (`collapse`) ou coloque as chaves na própria linha (`expand`).
	"css.format.braceStyle": "collapse",

	// Habilitar/desabilitar o formatador CSS padrão.
	"css.format.enable": true,

	// Número máximo de quebras de linha a serem preservadas em uma parte, quando `css.format.preserveNewLines` estiver habilitado.
	"css.format.maxPreserveNewLines": null,

	// Separe os conjuntos de regras por uma linha em branco.
	"css.format.newlineBetweenRules": true,

	// Separe os seletores com uma nova linha.
	"css.format.newlineBetweenSelectors": true,

	// Se as quebras de linha existentes antes dos elementos devem ser preservadas.
	"css.format.preserveNewLines": true,

	// Verifique se há um caractere de espaço em torno dos separadores '>', '+', '~' (por exemplo, 'a > b').
	"css.format.spaceAroundSelectorSeparator": false,

	// Mostrar a documentação de marca e de atributo durante a focalização do CSS.
	"css.hover.documentation": true,

	// Mostrar as referências ao MDN durante a focalização do CSS.
	"css.hover.references": true,

	// Número de parâmetros inválido.
	"css.lint.argumentsInColorFunction": "error",

	// Não use `width` nem `height` ao usar `padding` ou `border`.
	"css.lint.boxModel": "ignore",

	// Ao usar um prefixo específico de fornecedor, inclua também todas as outras propriedades específicas do fornecedor.
	"css.lint.compatibleVendorPrefixes": "ignore",

	// Não use definições de estilo duplicadas.
	"css.lint.duplicateProperties": "ignore",

	// Não use conjuntos de regras vazios.
	"css.lint.emptyRules": "warning",

	// Evite usar `float`. O uso de floats leva a um CSS frágil que será facilmente interrompido se um aspecto do layout for alterado.
	"css.lint.float": "ignore",

	// A regra `@font-face` precisa definir as propriedades `src` e `font-family`.
	"css.lint.fontFaceProperties": "warning",

	// As cores hexa precisam conter três ou seis números hexa.
	"css.lint.hexColorLength": "error",

	// Os seletores não devem conter IDs porque essas regras estão intimamente vinculadas ao HTML.
	"css.lint.idSelector": "ignore",

	// Os raqueamentos do IE só são necessários quando há suporte para IE7 e anteriores.
	"css.lint.ieHack": "ignore",

	// Evite usar `!important`. É uma indicação de que a especificidade do CSS inteiro ficou sem controle e precisa ser refatorada.
	"css.lint.important": "ignore",

	// As instruções de importação não são carregadas em paralelo.
	"css.lint.importStatement": "ignore",

	// A propriedade foi ignorada devido à exibição. Por exemplo, com `display: inline`, as propriedades `width`, `height`, `margin-top`, `margin-bottom` e `float` não têm efeito.
	"css.lint.propertyIgnoredDueToDisplay": "warning",

	// O seletor universal (`*`) é sabidamente lento.
	"css.lint.universalSelector": "ignore",

	// Regra 'at' desconhecida.
	"css.lint.unknownAtRules": "warning",

	// Propriedade desconhecida.
	"css.lint.unknownProperties": "warning",

	// Propriedade específica do fornecedor desconhecida.
	"css.lint.unknownVendorSpecificProperties": "ignore",

	// Uma lista de propriedades que não são validadas em relação à regra `unknownProperties`.
	"css.lint.validProperties": [],

	// Ao usar um prefixo específico do fornecedor, inclua também a propriedade padrão.
	"css.lint.vendorPrefix": "warning",

	// Não é necessária nenhuma unidade para zero.
	"css.lint.zeroUnits": "ignore",

	// Rastreia a comunicação entre o VS Code e o servidor de linguagem CSS.
	"css.trace.server": "off",

	// Habilita ou desabilita todas as validações.
	"css.validate": true,

	// Specifies whether to automatically refresh the _Repositories_ view when the repository or the file system changes
	"gitlens.views.repositories.autoRefresh": true,

	// Specifies whether to automatically reveal repositories in the _Repositories_ view when opening files
	"gitlens.views.repositories.autoReveal": true,

	// Specifies whether to show avatar images instead of commit (or status) icons in the _Repositories_ view
	"gitlens.views.repositories.avatars": true,

	// Specifies how the _Repositories_ view will display branches
	//  - list: Displays branches as a list
	//  - tree: Displays branches as a tree when branch names contain slashes `/`
	"gitlens.views.repositories.branches.layout": "tree",

	// Specifies whether to show a comparison of the branch with a user-selected reference (branch, tag. etc) under each branch in the _Repositories_ view
	//  - false: Hides the branch comparison
	//  - branch: Compares the branch with a user-selected reference
	"gitlens.views.repositories.branches.showBranchComparison": "branch",

	// Specifies whether to show the _Repositories_ view in a compact display density
	"gitlens.views.repositories.compact": false,

	// Deprecated. This setting is no longer used
	// 
	"gitlens.views.repositories.enabled": null,

	// Specifies whether to compact (flatten) unnecessary file nesting in the _Repositories_ view. Only applies when `gitlens.views.repositories.files.layout` is set to `tree` or `auto`
	"gitlens.views.repositories.files.compact": true,

	// Specifies how the _Repositories_ view will display files
	//  - auto: Automatically switches between displaying files as a `tree` or `list` based on the `gitlens.views.repositories.files.threshold` value and the number of files at each nesting level
	//  - list: Displays files as a list
	//  - tree: Displays files as a tree
	"gitlens.views.repositories.files.layout": "auto",

	// Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Repositories_ view. Only applies when `gitlens.views.repositories.files.layout` is set to `auto`
	"gitlens.views.repositories.files.threshold": 5,

	// Specifies whether to include working tree file status for each repository in the _Repositories_ view
	"gitlens.views.repositories.includeWorkingTree": false,

	// Specifies whether to query for pull requests associated with branches and commits in the _Repositories_ view. Requires a connection to a supported remote service (e.g. GitHub)
	"gitlens.views.repositories.pullRequests.enabled": true,

	// Specifies whether to show pull requests (if any) associated with branches in the _Repositories_ view. Requires a connection to a supported remote service (e.g. GitHub)
	"gitlens.views.repositories.pullRequests.showForBranches": true,

	// Specifies whether to show pull requests (if any) associated with commits in the _Repositories_ view. Requires a connection to a supported remote service (e.g. GitHub)
	"gitlens.views.repositories.pullRequests.showForCommits": true,

	// Specifies whether to show a comparison of the current branch or the working tree with a user-selected reference (branch, tag. etc) in the _Repositories_ view
	//  - false: Hides the branch comparison
	//  - branch: Compares the current branch with a user-selected reference
	//  - working: Compares the working tree with a user-selected reference
	"gitlens.views.repositories.showBranchComparison": "working",

	// Specifies whether to show the branches for each repository in the _Repositories_ view
	"gitlens.views.repositories.showBranches": true,

	// Specifies whether to show the commits on the current branch for each repository in the _Repositories_ view
	"gitlens.views.repositories.showCommits": true,

	// Specifies whether to show the contributors for each repository in the _Repositories_ view
	"gitlens.views.repositories.showContributors": true,

	// Specifies whether to show the experimental incoming activity for each repository in the _Repositories_ view
	"gitlens.views.repositories.showIncomingActivity": false,

	// Specifies whether to show the remotes for each repository in the _Repositories_ view
	"gitlens.views.repositories.showRemotes": true,

	// Specifies whether to show the stashes for each repository in the _Repositories_ view
	"gitlens.views.repositories.showStashes": true,

	// Specifies whether to show the tags for each repository in the _Repositories_ view
	"gitlens.views.repositories.showTags": true,

	// Specifies whether to show the upstream status of the current branch for each repository in the _Repositories_ view
	"gitlens.views.repositories.showUpstreamStatus": true,

	// Specifies whether to show the worktrees for each repository in the _Repositories_ view
	"gitlens.views.repositories.showWorktrees": true,

	// Specifies whether file histories will follow renames — will affect how merge commits are shown in histories
	"gitlens.advanced.fileHistoryFollowsRenames": false,

	// Specifies whether file histories will show commits from all branches
	"gitlens.advanced.fileHistoryShowAllBranches": false,

	// Specifies whether to show avatar images instead of status icons in the _File History_ view
	"gitlens.views.fileHistory.avatars": true,

	// Specifies whether to compact (flatten) unnecessary file nesting in the _File History_ view. Only applies to folder history and when `gitlens.views.fileHistory.files.layout` is set to `tree` or `auto`
	"gitlens.views.fileHistory.files.compact": true,

	// Specifies how the _File History_ view will display files when showing the history of a folder
	//  - auto: Automatically switches between displaying files as a `tree` or `list` based on the `gitlens.views.fileHistory.files.threshold` value and the number of files at each nesting level
	//  - list: Displays files as a list
	//  - tree: Displays files as a tree
	"gitlens.views.fileHistory.files.layout": "auto",

	// Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _File History_ view. Only applies to folder history and when `gitlens.views.fileHistory.files.layout` is set to `auto`
	"gitlens.views.fileHistory.files.threshold": 5,

	// Inserir ponto e vírgula no fim da linha ao preencher as propriedades de CSS.
	"less.completion.completePropertyWithSemicolon": true,

	// Por padrão, o VS Code dispara a conclusão do valor da propriedade após a seleção de uma propriedade CSS. Use esta configuração para desabilitar esse comportamento.
	"less.completion.triggerPropertyValueCompletion": true,

	// Coloque as chaves na mesma linha que as regras (`collapse`) ou coloque as chaves na própria linha (`expand`).
	"less.format.braceStyle": "collapse",

	// Habilitar/desabilitar o formatador LESS padrão.
	"less.format.enable": true,

	// Número máximo de quebras de linha a serem preservadas em uma parte, quando `less.format.preserveNewLines` estiver habilitado.
	"less.format.maxPreserveNewLines": null,

	// Separe os conjuntos de regras por uma linha em branco.
	"less.format.newlineBetweenRules": true,

	// Separe os seletores com uma nova linha.
	"less.format.newlineBetweenSelectors": true,

	// Se as quebras de linha existentes antes dos elementos devem ser preservadas.
	"less.format.preserveNewLines": true,

	// Verifique se há um caractere de espaço em torno dos separadores '>', '+', '~' (por exemplo, 'a > b').
	"less.format.spaceAroundSelectorSeparator": false,

	// Mostrar a documentação de marca e de atributo durante a focalização do LESS.
	"less.hover.documentation": true,

	// Mostrar as referências ao MDN durante a focalização do LESS.
	"less.hover.references": true,

	// Número de parâmetros inválido.
	"less.lint.argumentsInColorFunction": "error",

	// Não use `width` nem `height` ao usar `padding` ou `border`.
	"less.lint.boxModel": "ignore",

	// Ao usar um prefixo específico de fornecedor, inclua também todas as outras propriedades específicas do fornecedor.
	"less.lint.compatibleVendorPrefixes": "ignore",

	// Não use definições de estilo duplicadas.
	"less.lint.duplicateProperties": "ignore",

	// Não use conjuntos de regras vazios.
	"less.lint.emptyRules": "warning",

	// Evite usar `float`. O uso de floats leva a um CSS frágil que será facilmente interrompido se um aspecto do layout for alterado.
	"less.lint.float": "ignore",

	// A regra `@font-face` precisa definir as propriedades `src` e `font-family`.
	"less.lint.fontFaceProperties": "warning",

	// As cores hexa precisam conter três ou seis números hexa.
	"less.lint.hexColorLength": "error",

	// Os seletores não devem conter IDs porque essas regras estão intimamente vinculadas ao HTML.
	"less.lint.idSelector": "ignore",

	// Os raqueamentos do IE só são necessários quando há suporte para IE7 e anteriores.
	"less.lint.ieHack": "ignore",

	// Evite usar `!important`. É uma indicação de que a especificidade do CSS inteiro ficou sem controle e precisa ser refatorada.
	"less.lint.important": "ignore",

	// As instruções de importação não são carregadas em paralelo.
	"less.lint.importStatement": "ignore",

	// A propriedade foi ignorada devido à exibição. Por exemplo, com `display: inline`, as propriedades `width`, `height`, `margin-top`, `margin-bottom` e `float` não têm efeito.
	"less.lint.propertyIgnoredDueToDisplay": "warning",

	// O seletor universal (`*`) é sabidamente lento.
	"less.lint.universalSelector": "ignore",

	// Regra 'at' desconhecida.
	"less.lint.unknownAtRules": "warning",

	// Propriedade desconhecida.
	"less.lint.unknownProperties": "warning",

	// Propriedade específica do fornecedor desconhecida.
	"less.lint.unknownVendorSpecificProperties": "ignore",

	// Uma lista de propriedades que não são validadas em relação à regra `unknownProperties`.
	"less.lint.validProperties": [],

	// Ao usar um prefixo específico do fornecedor, inclua também a propriedade padrão.
	"less.lint.vendorPrefix": "warning",

	// Não é necessária nenhuma unidade para zero.
	"less.lint.zeroUnits": "ignore",

	// Habilita ou desabilita todas as validações.
	"less.validate": true,

	// Specifies whether to show avatar images instead of status icons in the _Line History_ view
	"gitlens.views.lineHistory.avatars": true,

	// Deprecated. This setting is no longer used
	// 
	"gitlens.views.lineHistory.enabled": null,

	// Inserir ponto e vírgula no fim da linha ao preencher as propriedades de CSS.
	"scss.completion.completePropertyWithSemicolon": true,

	// Por padrão, o VS Code dispara a conclusão do valor da propriedade após a seleção de uma propriedade CSS. Use esta configuração para desabilitar esse comportamento.
	"scss.completion.triggerPropertyValueCompletion": true,

	// Coloque as chaves na mesma linha que as regras (`collapse`) ou coloque as chaves na própria linha (`expand`).
	"scss.format.braceStyle": "collapse",

	// Habilitar/desabilitar o formatador SCSS padrão.
	"scss.format.enable": true,

	// Número máximo de quebras de linha a serem preservadas em uma parte, quando `scss.format.preserveNewLines` estiver habilitado.
	"scss.format.maxPreserveNewLines": null,

	// Separe os conjuntos de regras por uma linha em branco.
	"scss.format.newlineBetweenRules": true,

	// Separe os seletores com uma nova linha.
	"scss.format.newlineBetweenSelectors": true,

	// Se as quebras de linha existentes antes dos elementos devem ser preservadas.
	"scss.format.preserveNewLines": true,

	// Verifique se há um caractere de espaço em torno dos separadores '>', '+', '~' (por exemplo, 'a > b').
	"scss.format.spaceAroundSelectorSeparator": false,

	// Mostrar a documentação de marca e de atributo durante a focalização do SCSS.
	"scss.hover.documentation": true,

	// Mostrar as referências ao MDN durante a focalização do SCSS.
	"scss.hover.references": true,

	// Número de parâmetros inválido.
	"scss.lint.argumentsInColorFunction": "error",

	// Não use `width` nem `height` ao usar `padding` ou `border`.
	"scss.lint.boxModel": "ignore",

	// Ao usar um prefixo específico de fornecedor, inclua também todas as outras propriedades específicas do fornecedor.
	"scss.lint.compatibleVendorPrefixes": "ignore",

	// Não use definições de estilo duplicadas.
	"scss.lint.duplicateProperties": "ignore",

	// Não use conjuntos de regras vazios.
	"scss.lint.emptyRules": "warning",

	// Evite usar `float`. O uso de floats leva a um CSS frágil que será facilmente interrompido se um aspecto do layout for alterado.
	"scss.lint.float": "ignore",

	// A regra `@font-face` precisa definir as propriedades `src` e `font-family`.
	"scss.lint.fontFaceProperties": "warning",

	// As cores hexa precisam conter três ou seis números hexa.
	"scss.lint.hexColorLength": "error",

	// Os seletores não devem conter IDs porque essas regras estão intimamente vinculadas ao HTML.
	"scss.lint.idSelector": "ignore",

	// Os raqueamentos do IE só são necessários quando há suporte para IE7 e anteriores.
	"scss.lint.ieHack": "ignore",

	// Evite usar `!important`. É uma indicação de que a especificidade do CSS inteiro ficou sem controle e precisa ser refatorada.
	"scss.lint.important": "ignore",

	// As instruções de importação não são carregadas em paralelo.
	"scss.lint.importStatement": "ignore",

	// A propriedade foi ignorada devido à exibição. Por exemplo, com `display: inline`, as propriedades `width`, `height`, `margin-top`, `margin-bottom` e `float` não têm efeito.
	"scss.lint.propertyIgnoredDueToDisplay": "warning",

	// O seletor universal (`*`) é sabidamente lento.
	"scss.lint.universalSelector": "ignore",

	// Regra 'at' desconhecida.
	"scss.lint.unknownAtRules": "warning",

	// Propriedade desconhecida.
	"scss.lint.unknownProperties": "warning",

	// Propriedade específica do fornecedor desconhecida.
	"scss.lint.unknownVendorSpecificProperties": "ignore",

	// Uma lista de propriedades que não são validadas em relação à regra `unknownProperties`.
	"scss.lint.validProperties": [],

	// Ao usar um prefixo específico do fornecedor, inclua também a propriedade padrão.
	"scss.lint.vendorPrefix": "warning",

	// Não é necessária nenhuma unidade para zero.
	"scss.lint.zeroUnits": "ignore",

	// Habilita ou desabilita todas as validações.
	"scss.validate": true,

	// Specifies how branches are sorted in quick pick menus and views
	//  - date:desc: Sorts branches by the most recent commit date in descending order
	//  - date:asc: Sorts branches by the most recent commit date in ascending order
	//  - name:asc: Sorts branches by name in ascending order
	//  - name:desc: Sorts branches by name in descending order
	"gitlens.sortBranchesBy": "date:desc",

	// Specifies whether to show avatar images instead of commit (or status) icons in the _Branches_ view
	"gitlens.views.branches.avatars": true,

	// Specifies how the _Branches_ view will display branches
	//  - list: Displays branches as a list
	//  - tree: Displays branches as a tree when branch names contain slashes `/`
	"gitlens.views.branches.branches.layout": "tree",

	// Specifies whether to compact (flatten) unnecessary file nesting in the _Branches_ view. Only applies when `gitlens.views.branches.files.layout` is set to `tree` or `auto`
	"gitlens.views.branches.files.compact": true,

	// Specifies how the _Branches_ view will display files
	//  - auto: Automatically switches between displaying files as a `tree` or `list` based on the `gitlens.views.branches.files.threshold` value and the number of files at each nesting level
	//  - list: Displays files as a list
	//  - tree: Displays files as a tree
	"gitlens.views.branches.files.layout": "auto",

	// Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Branches_ view. Only applies when `gitlens.views.branches.files.layout` is set to `auto`
	"gitlens.views.branches.files.threshold": 5,

	// Specifies whether to query for pull requests associated with each branch and commits in the _Branches_ view. Requires a connection to a supported remote service (e.g. GitHub)
	"gitlens.views.branches.pullRequests.enabled": true,

	// Specifies whether to show pull requests (if any) associated with each branch in the _Branches_ view. Requires a connection to a supported remote service (e.g. GitHub)
	"gitlens.views.branches.pullRequests.showForBranches": true,

	// Specifies whether to show pull requests (if any) associated with commits in the _Branches_ view. Requires a connection to a supported remote service (e.g. GitHub)
	"gitlens.views.branches.pullRequests.showForCommits": true,

	// Specifies whether to reveal branches in the _Branches_ view, otherwise they revealed in the _Repositories_ view
	"gitlens.views.branches.reveal": true,

	// Specifies whether to show a comparison of the branch with a user-selected reference (branch, tag. etc) in the _Branches_ view
	//  - false: Hides the branch comparison
	//  - branch: Compares the branch with a user-selected reference
	"gitlens.views.branches.showBranchComparison": "branch",

	// Specifies whether to show avatar images instead of commit (or status) icons in the _Remotes_ view
	"gitlens.views.remotes.avatars": true,

	// Specifies how the _Remotes_ view will display branches
	//  - list: Displays branches as a list
	//  - tree: Displays branches as a tree when branch names contain slashes `/`
	"gitlens.views.remotes.branches.layout": "tree",

	// Specifies whether to compact (flatten) unnecessary file nesting in the _Remotes_ view. Only applies when `gitlens.views.remotes.files.layout` is set to `tree` or `auto`
	"gitlens.views.remotes.files.compact": true,

	// Specifies how the _Remotes_ view will display files
	//  - auto: Automatically switches between displaying files as a `tree` or `list` based on the `gitlens.views.remotes.files.threshold` value and the number of files at each nesting level
	//  - list: Displays files as a list
	//  - tree: Displays files as a tree
	"gitlens.views.remotes.files.layout": "auto",

	// Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Remotes_ view. Only applies when `gitlens.views.remotes.files.layout` is set to `auto`
	"gitlens.views.remotes.files.threshold": 5,

	// Specifies whether to query for pull requests associated with each branch and commits in the _Remotes_ view. Requires a connection to a supported remote service (e.g. GitHub)
	"gitlens.views.remotes.pullRequests.enabled": true,

	// Specifies whether to show pull requests (if any) associated with each branch in the _Remotes_ view. Requires a connection to a supported remote service (e.g. GitHub)
	"gitlens.views.remotes.pullRequests.showForBranches": true,

	// Specifies whether to show pull requests (if any) associated with commits in the _Remotes_ view. Requires a connection to a supported remote service (e.g. GitHub)
	"gitlens.views.remotes.pullRequests.showForCommits": true,

	// Specifies whether to reveal remotes in the _Remotes_ view, otherwise they revealed in the _Repositories_ view
	"gitlens.views.remotes.reveal": true,

	// Specifies whether to compact (flatten) unnecessary file nesting in the _Stashes_ view. Only applies when `gitlens.views.stashes.files.layout` is set to `tree` or `auto`
	"gitlens.views.stashes.files.compact": true,

	// Specifies how the _Stashes_ view will display files
	//  - auto: Automatically switches between displaying files as a `tree` or `list` based on the `gitlens.views.stashes.files.threshold` value and the number of files at each nesting level
	//  - list: Displays files as a list
	//  - tree: Displays files as a tree
	"gitlens.views.stashes.files.layout": "auto",

	// Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Stashes_ view. Only applies when `gitlens.views.stashes.files.layout` is set to `auto`
	"gitlens.views.stashes.files.threshold": 5,

	// Specifies whether to reveal stashes in the _Stashes_ view, otherwise they revealed in the _Repositories_ view
	"gitlens.views.stashes.reveal": true,

	// Specifies how tags are sorted in quick pick menus and views
	//  - date:desc: Sorts tags by date in descending order
	//  - date:asc: Sorts tags by date in ascending order
	//  - name:asc: Sorts tags by name in ascending order
	//  - name:desc: Sorts tags by name in descending order
	"gitlens.sortTagsBy": "date:desc",

	// Specifies whether to show avatar images instead of commit (or status) icons in the _Tags_ view
	"gitlens.views.tags.avatars": true,

	// Specifies how the _Tags_ view will display tags
	//  - list: Displays tags as a list
	//  - tree: Displays tags as a tree when tags names contain slashes `/`
	"gitlens.views.tags.branches.layout": "tree",

	// Specifies whether to compact (flatten) unnecessary file nesting in the _Tags_ view. Only applies when `gitlens.views.tags.files.layout` is set to `tree` or `auto`
	"gitlens.views.tags.files.compact": true,

	// Specifies how the _Tags_ view will display files
	//  - auto: Automatically switches between displaying files as a `tree` or `list` based on the `gitlens.views.tags.files.threshold` value and the number of files at each nesting level
	//  - list: Displays files as a list
	//  - tree: Displays files as a tree
	"gitlens.views.tags.files.layout": "auto",

	// Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Tags_ view. Only applies when `gitlens.views.tags.files.layout` is set to `auto`
	"gitlens.views.tags.files.threshold": 5,

	// Specifies whether to reveal tags in the _Tags_ view, otherwise they revealed in the _Repositories_ view
	"gitlens.views.tags.reveal": true,

	// Specifies whether to show avatar images instead of commit (or status) icons in the _Worktrees_ view
	"gitlens.views.worktrees.avatars": true,

	// Specifies whether to compact (flatten) unnecessary file nesting in the _Worktrees_ view. Only applies when `gitlens.views.worktrees.files.layout` is set to `tree` or `auto`
	"gitlens.views.worktrees.files.compact": true,

	// Specifies how the _Worktrees_ view will display files
	//  - auto: Automatically switches between displaying files as a `tree` or `list` based on the `gitlens.views.worktrees.files.threshold` value and the number of files at each nesting level
	//  - list: Displays files as a list
	//  - tree: Displays files as a tree
	"gitlens.views.worktrees.files.layout": "auto",

	// Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Worktrees_ view. Only applies when `gitlens.views.worktrees.files.layout` is set to `auto`
	"gitlens.views.worktrees.files.threshold": 5,

	// Specifies whether to query for pull requests associated with the worktree branch and commits in the _Worktrees_ view. Requires a connection to a supported remote service (e.g. GitHub)
	"gitlens.views.worktrees.pullRequests.enabled": true,

	// Specifies whether to show pull requests (if any) associated with the worktree branch in the _Worktrees_ view. Requires a connection to a supported remote service (e.g. GitHub)
	"gitlens.views.worktrees.pullRequests.showForBranches": true,

	// Specifies whether to show pull requests (if any) associated with commits in the _Worktrees_ view. Requires a connection to a supported remote service (e.g. GitHub)
	"gitlens.views.worktrees.pullRequests.showForCommits": true,

	// Specifies whether to reveal worktrees in the _Worktrees_ view, otherwise they revealed in the _Repositories_ view
	"gitlens.views.worktrees.reveal": true,

	// Specifies whether to show a comparison of the worktree branch with a user-selected reference (branch, tag. etc) in the _Worktrees_ view
	//  - false: Hides the branch comparison
	//  - branch: Compares the worktree branch with a user-selected reference
	"gitlens.views.worktrees.showBranchComparison": "working",

	// Specifies the default path in which new worktrees will be created
	"gitlens.worktrees.defaultLocation": null,

	// Specifies whether to prompt for a path when creating new worktrees
	"gitlens.worktrees.promptForLocation": true,

	// Specifies how contributors are sorted in quick pick menus and views
	//  - count:desc: Sorts contributors by commit count in descending order
	//  - count:asc: Sorts contributors by commit count in ascending order
	//  - date:desc: Sorts contributors by the most recent commit date in descending order
	//  - date:asc: Sorts contributors by the most recent commit date in ascending order
	//  - name:asc: Sorts contributors by name in ascending order
	//  - name:desc: Sorts contributors by name in descending order
	"gitlens.sortContributorsBy": "count:desc",

	// Specifies whether to show avatar images instead of commit (or status) icons in the _Contributors_ view
	"gitlens.views.contributors.avatars": true,

	// Specifies whether to compact (flatten) unnecessary file nesting in the _Contributors_ view. Only applies when `gitlens.views.contributors.files.layout` is set to `tree` or `auto`
	"gitlens.views.contributors.files.compact": true,

	// Specifies how the _Contributors_ view will display files
	//  - auto: Automatically switches between displaying files as a `tree` or `list` based on the `gitlens.views.contributors.files.threshold` value and the number of files at each nesting level
	//  - list: Displays files as a list
	//  - tree: Displays files as a tree
	"gitlens.views.contributors.files.layout": "auto",

	// Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Contributors_ view. Only applies when `gitlens.views.contributors.files.layout` is set to `auto`
	"gitlens.views.contributors.files.threshold": 5,

	// Specifies whether to query for pull requests associated with branches and commits in the _Contributors_ view. Requires a connection to a supported remote service (e.g. GitHub)
	"gitlens.views.contributors.pullRequests.enabled": true,

	// Specifies whether to show pull requests (if any) associated with commits in the _Contributors_ view. Requires a connection to a supported remote service (e.g. GitHub)
	"gitlens.views.contributors.pullRequests.showForCommits": true,

	// Specifies whether to reveal contributors in the _Contributors_ view, otherwise they revealed in the _Repositories_ view
	"gitlens.views.contributors.reveal": true,

	// Specifies whether to show commits from all branches in the _Contributors_ view
	"gitlens.views.contributors.showAllBranches": false,

	// Specifies whether to show contributor statistics in the _Contributors_ view. This can take a while to compute depending on the repository size
	"gitlens.views.contributors.showStatistics": false,

	// Quando habilitado, verifica automaticamente as extensões quanto a atualizações. Se uma extensão tiver uma atualização, ela será marcada como desatualizada no modo de exibição de Extensões. As atualizações são buscadas em um serviço online da Microsoft.
	"extensions.autoCheckUpdates": true,

	// Controla o comportamento de atualização automática das extensões. As atualizações são buscadas em um serviço online Microsoft.
	//  - true: Baixar e instalar as atualizações automaticamente para todas as extensões.
	//  - onlyEnabledExtensions: Baixar e instalar as atualizações automaticamente somente para extensões habilitadas. As extensões desabilitadas não serão atualizadas automaticamente.
	//  - false: As extensões não são atualizadas automaticamente.
	"extensions.autoUpdate": true,

	// Quando habilitados, os editores com detalhes de extensão são fechados automaticamente ao navegar para fora do modo de exibição de Extensões.
	"extensions.closeExtensionDetailsOnViewChange": false,

	// Quando uma extensão for listada aqui, um prompt de confirmação não será exibido quando essa extensão lidar com um URI.
	"extensions.confirmedUriHandlerExtensionIds": [],

	// Configure uma extensão a ser executada em um processo de host de extensão diferente.
	"extensions.experimental.affinity": {},

	// Quando habilitado, o host de extensão será iniciado usando a nova API UtilityProcess Electron.
	"extensions.experimental.useUtilityProcess": false,

	// Quando habilitadas, as notificações para as recomendações de extensão não serão mostradas.
	"extensions.ignoreRecommendations": false,

	// Esta configuração foi preterida. Use a configuração extensions.ignoreRecommendations para controlar as notificações de recomendação. Use as ações de visibilidade da exibição de Extensões para ocultar a exibição Recomendado por padrão.
	// 
	"extensions.showRecommendationsOnlyOnDemand": false,

	// Ignora o suporte do espaço de trabalho não confiável de uma extensão. As extensões que usam 'true' sempre serão habilitadas. As extensões que usam 'limited' sempre serão habilitadas e a extensão ocultará a funcionalidade que exige confiança. As extensões que usam 'false' só serão habilitadas se o espaço de trabalho for confiável.
	"extensions.supportUntrustedWorkspaces": {},

	// Ignorar o suporte a espaços de trabalho virtuais de uma extensão.
	"extensions.supportVirtualWorkspaces": {},

	// Habilitar o host de extensão do web worker.
	//  - true: O Host de Extensão de Função sempre será iniciado.
	//  - false: O Host de Extensão de Função de Trabalho nunca será iniciado.
	//  - auto: O Host de Extensão de Função será iniciado quando uma extensão da web precisar dele.
	"extensions.webWorker": "auto",

	// Habilitar/desabilitar a capacidade de rolagem inteligente no modo de exibição de saída. A rolagem inteligente permite que você bloqueie a rolagem automaticamente ao clicar no modo de exibição de saída e desbloqueie ao clicar na última linha.
	"output.smartScroll.enabled": true,

	// Lista de extensões a serem ignoradas durante a sincronização. O identificador de uma extensão é sempre `${publisher}.${name}`. Por exemplo: `vscode.csharp`.
	"settingsSync.ignoredExtensions": [],

	// Configurar as configurações a serem ignoradas durante a sincronização.
	"settingsSync.ignoredSettings": [],

	// Sincronizar as associações de teclas para cada plataforma.
	"settingsSync.keybindingsPerPlatform": true,

	// Specifies whether to show avatar images instead of commit (or status) icons in the _Search & Compare_ view
	"gitlens.views.searchAndCompare.avatars": true,

	// Specifies whether to compact (flatten) unnecessary file nesting in the _Search & Compare_ view. Only applies when `gitlens.views.searchAndCompare.files.layout` is set to `tree` or `auto`
	"gitlens.views.searchAndCompare.files.compact": true,

	// Specifies how the _Search & Compare_ view will display files
	//  - auto: Automatically switches between displaying files as a `tree` or `list` based on the `gitlens.views.searchAndCompare.files.threshold` value and the number of files at each nesting level
	//  - list: Displays files as a list
	//  - tree: Displays files as a tree
	"gitlens.views.searchAndCompare.files.layout": "auto",

	// Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Search & Compare_ view. Only applies when `gitlens.views.searchAndCompare.files.layout` is set to `auto`
	"gitlens.views.searchAndCompare.files.threshold": 5,

	// Specifies whether to query for pull requests associated with commits in the _Search & Compare_ view. Requires a connection to a supported remote service (e.g. GitHub)
	"gitlens.views.searchAndCompare.pullRequests.enabled": true,

	// Specifies whether to show pull requests (if any) associated with commits in the _Search & Compare_ view. Requires a connection to a supported remote service (e.g. GitHub)
	"gitlens.views.searchAndCompare.pullRequests.showForCommits": true,

	// Controla se as células de código na janela interativa são recolhidas por padrão.
	"interactiveWindow.collapseCellInputCode": "fromEditor",

	// Quando as trilhas do notebook habilitadas contêm células de código.
	"notebook.breadcrumbs.showCodeCells": true,

	// Controla onde o indicador de foco é renderizado, ao longo das bordas de célula ou à medianiz esquerda
	"notebook.cellFocusIndicator": "gutter",

	// Onde a barra de ferramentas da célula deve ser mostrada ou se deve ficar oculta.
	"notebook.cellToolbarLocation": {
		"default": "right"
	},

	// Se a barra de ferramentas da célula deve ser exibida ao passar o mouse ou clicar.
	"notebook.cellToolbarVisibility": "click",

	// Controlar se o editor de cadernos deve ser renderizado de forma compacta. Por exemplo, quando ativado, ele irá diminuir a largura da margem esquerda.
	"notebook.compactView": true,

	// Controla se a ação das saídas deve ser renderizada na barra de ferramentas de saída.
	"notebook.consolidatedOutputButton": true,

	// Controla se as ações extras são mostradas em um menu suspenso próximo ao botão de execução.
	"notebook.consolidatedRunButton": false,

	// Se o editor de comparação de texto avançado deve ser usado para o notebook.
	"notebook.diff.enablePreview": true,

	// Ocultar as Diferenças de Metadados
	"notebook.diff.ignoreMetadata": false,

	// Ocultar as Diferenças de Saídas
	"notebook.diff.ignoreOutputs": false,

	// Lista de prioridades para tipos mime de saída
	"notebook.displayOrder": [],

	// Controle se o editor do bloco de anotações deve permitir a movimentação de células por meio de arrastar e soltar.
	"notebook.dragAndDropEnabled": true,

	// Configurações para editores de código usados em blocos de anotações. Isso pode ser usado para personalizar a maioria das configurações do editor.* configurações.
	"notebook.editorOptionsCustomizations": {},

	// Controlar se uma barra de ferramentas global deve ser renderizada dentro do editor de bloco de anotações.
	"notebook.globalToolbar": true,

	// Controle se as ações na barra de ferramentas do notebook devem renderizar o rótulo ou não.
	"notebook.globalToolbarShowLabel": "always",

	// Controlar onde as ações de inserção de célula devem aparecer.
	//  - betweenCells: Uma barra de ferramentas que aparece ao passar o mouse entre as células.
	//  - notebookToolbar: A barra de ferramentas na parte superior do editor de bloco de anotações.
	//  - both: Ambas as barras de ferramentas.
	//  - hidden: As ações de inserção não aparecem em nenhum lugar.
	"notebook.insertToolbarLocation": "both",

	// Controla a exibição de números de linha no editor de células.
	"notebook.lineNumbers": "off",

	// Controla o tamanho da fonte em pixels da marcação renderizada em notebooks. Quando definido como `0`, 120% de `editor.fontSize` é usado.
	"notebook.markup.fontSize": 0,

	// Quando habilitado, o cursor pode navegar para a célula seguinte/anterior quando o cursor atual no editor de célula está na primeira/última linha.
	"notebook.navigation.allowNavigateToSurroundingCells": true,

	// Quando habilitada, a estrutura de tópicos do notebook mostra as células do código.
	"notebook.outline.showCodeCells": false,

	// Controle quantas linhas de texto em uma saída de texto são renderizadas.
	"notebook.output.textLineLimit": 30,

	// A família de fontes para o texto de saída das células do notebook. Quando definido como vazio, o `editor.fontFamily` é usado.
	"notebook.outputFontFamily": "",

	// Tamanho da fonte para o texto de saída das células do notebook. Quando definido como `0`, `editor.fontSize` é usado.
	"notebook.outputFontSize": 0,

	// Altura da linha do texto de saída para células do bloco de anotações.
	//  - Valores entre 0 e 8 serão usados como um multiplicador com o tamanho da fonte.
	//  - Valores maiores ou iguais a 8 serão usados como valores efetivos.
	"notebook.outputLineHeight": 22,

	// Especifica se a barra de status da célula deve ser mostrada.
	//  - hidden: A barra de Status da célula está sempre oculta.
	//  - visible: A barra de Status da célula está sempre visível.
	//  - visibleAfterExecute: A barra de Status da célula fica oculta até que a célula tenha sido executada. Em seguida, fica visível para exibir o status de execução.
	"notebook.showCellStatusBar": "visible",

	// Controla quando a seta dobrável do cabeçalho Markdown é exibida.
	//  - always: Os controles de dobragem estão sempre visíveis.
	//  - never: Nunca mostre os controles dobráveis e reduza o tamanho da calha.
	//  - mouseover: Os controles de dobragem são visíveis somente no mouseover.
	"notebook.showFoldingControls": "mouseover",

	// Se deve ser usada uma pilha desfazer/refazer separada para cada célula.
	"notebook.undoRedoPerCell": true,

	// Role automaticamente a janela interativa para mostrar a saída da última instrução executada. Se esse valor for falso, a janela só rolará se a última célula já tiver sido rolada.
	"interactiveWindow.alwaysScrollOnNewCell": true,

	// Controla se as sessões/histórico da Janela Interativa devem ser restauradas entre os recarregamentos de janela. Se o estado dos controladores usados no Windows Interativo é persistente entre os recarregamentos de janela são controlados por extensões que contribuem com controladores.
	"interactiveWindow.restore": false,

	// Enable/Disable detecting changes of running Spring Boot applications
	"boot-java.change-detection.on": false,

	// Enable/Disable Spring running Boot application Code Lenses
	"boot-java.highlight-codelens.on": true,

	// Live Information - Automatic addition of JVM arguments enabling JMX and Process Connection via JMX Enabled
	"boot-java.live-information.automatic-connection.on": true,

	// Live Information - Max number of retries (before giving up)
	"boot-java.live-information.fetch-data.max-retries": 10,

	// Live Information - Delay between retries in seconds
	"boot-java.live-information.fetch-data.retry-delay-in-seconds": 3,

	// Array of jmx urls pointing to remote spring boot applications to poll for live hover information. A typical url looks something like this: `service:jmx:rmi://localhost:9111/jndi/rmi://localhost:9111/jmxrmi`
	"boot-java.remote-apps": [],

	// Enable/Disable Java test sources files scanning
	"boot-java.scan-java-test-sources.on": false,

	// Enable/Disable Content Assist in Spring XML Config file editor
	"boot-java.support-spring-xml-config.content-assist": true,

	// Enable/Disable Hyperlinks in Spring XML Config file editor
	"boot-java.support-spring-xml-config.hyperlinks": true,

	// Enable/Disable Support for Spring XML Config files
	"boot-java.support-spring-xml-config.on": false,

	// Scan Spring XML in folders
	"boot-java.support-spring-xml-config.scan-folders": "src/main",

	// Specifies whether to show avatar images in the file blame annotations
	"gitlens.blame.avatars": true,

	// Specifies whether to compact (deduplicate) matching adjacent file blame annotations
	"gitlens.blame.compact": true,

	// Specifies how to format absolute dates (e.g. using the `${date}` token) in file blame annotations. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for supported formats
	"gitlens.blame.dateFormat": null,

	// Specifies the format of the file blame annotations. See [_Commit Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs. Date formatting is controlled by the `gitlens.blame.dateFormat` setting
	"gitlens.blame.format": "${message|50?} ${agoOrDate|14-}",

	// Specifies whether to provide a heatmap indicator in the file blame annotations
	"gitlens.blame.heatmap.enabled": true,

	// Specifies where the heatmap indicators will be shown in the file blame annotations
	//  - left: Adds a heatmap indicator on the left edge of the file blame annotations
	//  - right: Adds a heatmap indicator on the right edge of the file blame annotations
	"gitlens.blame.heatmap.location": "right",

	// Specifies whether to highlight lines associated with the current line
	"gitlens.blame.highlight.enabled": true,

	// Specifies where the associated line highlights will be shown
	//  - gutter: Adds an indicator to the gutter
	//  - line: Adds a full-line highlight background color
	//  - overview: Adds an indicator to the scroll bar
	"gitlens.blame.highlight.locations": [
		"gutter",
		"line",
		"overview"
	],

	// Specifies whether file blame annotations will be separated by a small gap
	"gitlens.blame.separateLines": true,

	// Specifies how the file blame annotations will be toggled
	//  - file: Toggles each file individually
	//  - window: Toggles the window, i.e. all files at once
	"gitlens.blame.toggleMode": "file",

	// Habilite tarefas automáticas na pasta - observe que as tarefas não serão executadas em um espaço de trabalho não confiável.
	//  - on: Sempre
	//  - auto: Solicitar permissão para cada pasta
	//  - off: Nunca
	"task.allowAutomaticTasks": "auto",

	// Controla a habilitação de `provideTasks` para toda a extensão do provedor de tarefas. Se o comando Tasks: Run Task estiver lento, desabilitar a detecção automática para provedores de tarefas poderá ajudar. As extensões individuais também podem fornecer configurações que desabilitam a detecção automática.
	"task.autoDetect": "on",

	// Configura se é necessário mostrar o aviso de correspondência de problema ao executar uma tarefa. Defina como `true` para não receber avisos ou use um dicionário de tipos de tarefa para desligar o aviso somente para tipos de tarefa específicos.
	"task.problemMatchers.neverPrompt": false,

	// Controla se é necessário mostrar os detalhes da tarefa que tem um detalhe nas seleções rápidas de tarefa, como Executar Tarefa.
	"task.quickOpen.detail": true,

	// Controla o número de itens recentes rastreados na caixa de diálogo de abertura rápida da tarefa.
	"task.quickOpen.history": 30,

	// Faz com que as tarefas: executem o comando Task para usar o comportamento mais lento "show all" em vez do seletor de nível dois mais rápido, no qual as tarefas são agrupadas pelo provedor.
	"task.quickOpen.showAll": false,

	// Controla se a seleção rápida de tarefa é ignorada quando há apenas uma tarefa para seleção.
	"task.quickOpen.skip": false,

	// Ao recarregar a janela, reconecte-se às tarefas que têm correspondentes de problemas.
	"task.reconnection": true,

	// Salve todos os editores sujos antes de executar uma tarefa.
	//  - always: Sempre salva todos os editores antes de executar.
	//  - never: Nunca salva editores antes de executar.
	//  - prompt: Avisa se os editores devem ser salvos antes de serem executados.
	"task.saveBeforeRun": "always",

	// Mostra decorações em pontos de interesse no buffer de terminal, como o primeiro problema encontrado por meio de uma tarefa de inspeção. Observe que isso só terá efeito em tarefas futuras. `terminal.integrated.shellIntegration.decorationsEnabled` terá precedência sobre essa configuração
	"task.showDecorations": true,

	// Configura se um aviso é mostrado quando um provedor está lento
	"task.slowProviderWarning": true,

	// Ao abrir um arquivo do gerenciador em um terminal, determina que tipo de terminal será iniciado
	//  - integrated: Use o terminal integrado do VS Code.
	//  - external: Use o terminal externo configurado.
	"terminal.explorerKind": "integrated",

	// Personaliza qual terminal deve ser executado no Linux.
	"terminal.external.linuxExec": "xterm",

	// Personaliza qual aplicativo de terminal será executado no macOS.
	"terminal.external.osxExec": "Terminal.app",

	// Personaliza qual terminal deve ser executado no Windows.
	"terminal.external.windowsExec": "C:\\Windows\\System32\\cmd.exe",

	// Se deve ou não permitir combinações de teclas de acordes no terminal. Observe que quando isso for verdadeiro e o pressionamento de tecla resultar em um acorde, ele será ignorado `terminal.integrated.commandsToSkipShell`, definir isso como falso é particularmente útil quando você deseja que ctrl+k vá para o seu shell (não VS Code).
	"terminal.integrated.allowChords": true,

	// Se deseja permitir que os mnemônicos de menubar (por exemplo, alt+f) disparem a abertura de menubar. Observe que isso fará com que todos os pressionamentos de tecla Alt ignorem o shell quando true. Isso não faz nada no macOS.
	"terminal.integrated.allowMnemonics": false,

	// Se ativado, alt/option + click reposicionará o cursor do prompt para baixo do mouse quando `editor.multiCursorModifier` estiver definido como `'alt'` (o valor padrão). Isso pode não funcionar de forma confiável dependendo do seu shell.
	"terminal.integrated.altClickMovesCursor": true,

	// O perfil de terminal a ser usado no Linux para uso de terminal relacionado à automação, como tarefas e depuração. Essa configuração será ignorada no momento se `terminal.integrated.automationShell.linux` (agora preterido) estiver definido.
	"terminal.integrated.automationProfile.linux": null,

	// O perfil de terminal a ser usado no macOS para uso de terminal relacionado à automação, como tarefas e depuração. Essa configuração será ignorada no momento se `terminal.integrated.automationShell.osx` (agora preterido) estiver definido.
	"terminal.integrated.automationProfile.osx": null,

	// O perfil de terminal a ser usado para uso de terminal relacionado à automação, como tarefas e depuração. Essa configuração será ignorada no momento se `terminal.integrated.automationShell.windows` (agora preterido) estiver definido.
	"terminal.integrated.automationProfile.windows": null,

	// Isso foi preterido. A nova maneira recomendada de configurar o shell de automação é criando um perfil de automação de terminal com `terminal.integrated.automationProfile.linux`. No momento, isso terá prioridade sobre as novas configurações de perfil de automação, mas isso será alterado no futuro.
	// Um caminho que, quando definido, substituirá valores `terminal.integrated.shell.linux` e ignorará valores `shellArgs` para uso de terminal relacionado à automação, como tarefas e depuração.
	"terminal.integrated.automationShell.linux": null,

	// Isso foi preterido. A nova maneira recomendada de configurar o shell de automação é criando um perfil de automação de terminal com `terminal.integrated.automationProfile.osx`. No momento, isso terá prioridade sobre as novas configurações de perfil de automação, mas isso será alterado no futuro.
	// Um caminho que, quando definido, substituirá valores `terminal.integrated.shell.osx` e ignorará valores `shellArgs` para uso de terminal relacionado à automação, como tarefas e depuração.
	"terminal.integrated.automationShell.osx": null,

	// Isso foi preterido. A nova maneira recomendada de configurar o shell de automação é criando um perfil de automação de terminal com `terminal.integrated.automationProfile.windows`. No momento, isso terá prioridade sobre as novas configurações de perfil de automação, mas isso será alterado no futuro.
	// Um caminho que, quando definido, substituirá valores `terminal.integrated.shell.windows` e ignorará valores `shellArgs` para uso de terminal relacionado à automação, como tarefas e depuração.
	"terminal.integrated.automationShell.windows": null,

	// Um conjunto de mensagens que, quando encontradas no terminal, serão respondidas automaticamente. Desde que a mensagem seja específica o suficiente, isso pode ajudar a automatizar as respostas comuns.
	// 
	// Observações:
	// 
	// - Use`"Terminate batch job (Y/N)": "Y\r"` para responder automaticamente ao prompt de encerramento do trabalho em lotes no Windows.
	// - A mensagem inclui sequências de escape para que a resposta não aconteça com texto estilizado.
	// - Cada resposta só pode ocorrer uma vez a cada segundo
	// .- Use `"\r"` na resposta para significar a tecla Enter. 
	// - Para cancelar a definição de uma chave padrão, defina o valor como nulo.
	//  Reinicie VS Code se novas não se aplicarem.
	"terminal.integrated.autoReplies": {},

	// O número de milissegundos para mostrar a campainha dentro de uma guia de terminal quando disparada.
	"terminal.integrated.bellDuration": 1000,

	// Um conjunto de IDs de comando cujas combinações de teclas não serão enviadas ao shell, mas sempre tratadas pelo VS Code. Isso permite que as combinações de teclas que normalmente seriam consumidas pelo shell atuem da mesma forma que quando o terminal não está focado, por exemplo, `Ctrl+P` para iniciar a Abertura Rápida
	// 
	// &nbsp;
	// 
	// Muitos comandos são ignorados por padrão. Para substituir um padrão e passar a combinação de teclas desse comando para o shell, adicione o comando prefixado com o caractere `-`. Por exemplo, adicione `-workbench.action.quickOpen` para permitir que`Ctrl+P` alcance o shell.
	// 
	// &nbsp;
	// 
	// A seguinte lista de comandos padrão ignorados é truncada quando exibida em Editor de Configurações. Para ver a lista completa, [abrir as configurações padrão JSON](command:workbench.action.openRawDefaultSettings 'Abrir Configurações Padrão (JSON)') e pesquise o primeiro comando na lista abaixo.
	// 
	// &nbsp;
	// 
	// Comandos Padrão Ignorados:
	// 
	// - editor.action.toggleTabFocusMode
	// - notifications.hideList
	// - notifications.hideToasts
	// - workbench.action.closeQuickOpen
	// - workbench.action.debug.continue
	// - workbench.action.debug.pause
	// - workbench.action.debug.restart
	// - workbench.action.debug.run
	// - workbench.action.debug.start
	// - workbench.action.debug.stepInto
	// - workbench.action.debug.stepOut
	// - workbench.action.debug.stepOver
	// - workbench.action.debug.stop
	// - workbench.action.firstEditorInGroup
	// - workbench.action.focusActiveEditorGroup
	// - workbench.action.focusEighthEditorGroup
	// - workbench.action.focusFifthEditorGroup
	// - workbench.action.focusFirstEditorGroup
	// - workbench.action.focusFourthEditorGroup
	// - workbench.action.focusLastEditorGroup
	// - workbench.action.focusNextPart
	// - workbench.action.focusPreviousPart
	// - workbench.action.focusSecondEditorGroup
	// - workbench.action.focusSeventhEditorGroup
	// - workbench.action.focusSixthEditorGroup
	// - workbench.action.focusThirdEditorGroup
	// - workbench.action.lastEditorInGroup
	// - workbench.action.navigateDown
	// - workbench.action.navigateLeft
	// - workbench.action.navigateRight
	// - workbench.action.navigateUp
	// - workbench.action.nextEditor
	// - workbench.action.nextEditorInGroup
	// - workbench.action.nextPanelView
	// - workbench.action.nextSideBarView
	// - workbench.action.openNextRecentlyUsedEditor
	// - workbench.action.openNextRecentlyUsedEditorInGroup
	// - workbench.action.openPreviousRecentlyUsedEditor
	// - workbench.action.openPreviousRecentlyUsedEditorInGroup
	// - workbench.action.previousEditor
	// - workbench.action.previousEditorInGroup
	// - workbench.action.previousPanelView
	// - workbench.action.previousSideBarView
	// - workbench.action.quickOpen
	// - workbench.action.quickOpenLeastRecentlyUsedEditor
	// - workbench.action.quickOpenLeastRecentlyUsedEditorInGroup
	// - workbench.action.quickOpenPreviousEditor
	// - workbench.action.quickOpenPreviousRecentlyUsedEditor
	// - workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup
	// - workbench.action.quickOpenView
	// - workbench.action.showCommands
	// - workbench.action.tasks.build
	// - workbench.action.tasks.reRunTask
	// - workbench.action.tasks.restartTask
	// - workbench.action.tasks.runTask
	// - workbench.action.tasks.showLog
	// - workbench.action.tasks.showTasks
	// - workbench.action.tasks.terminate
	// - workbench.action.tasks.test
	// - workbench.action.terminal.clear
	// - workbench.action.terminal.clearSelection
	// - workbench.action.terminal.copyLastCommand
	// - workbench.action.terminal.copySelection
	// - workbench.action.terminal.copySelectionAsHtml
	// - workbench.action.terminal.deleteToLineStart
	// - workbench.action.terminal.deleteWordLeft
	// - workbench.action.terminal.deleteWordRight
	// - workbench.action.terminal.findNext
	// - workbench.action.terminal.findPrevious
	// - workbench.action.terminal.focus
	// - workbench.action.terminal.focusAtIndex1
	// - workbench.action.terminal.focusAtIndex2
	// - workbench.action.terminal.focusAtIndex3
	// - workbench.action.terminal.focusAtIndex4
	// - workbench.action.terminal.focusAtIndex5
	// - workbench.action.terminal.focusAtIndex6
	// - workbench.action.terminal.focusAtIndex7
	// - workbench.action.terminal.focusAtIndex8
	// - workbench.action.terminal.focusAtIndex9
	// - workbench.action.terminal.focusFind
	// - workbench.action.terminal.focusNext
	// - workbench.action.terminal.focusNextPane
	// - workbench.action.terminal.focusPrevious
	// - workbench.action.terminal.focusPreviousPane
	// - workbench.action.terminal.goToRecentDirectory
	// - workbench.action.terminal.hideFind
	// - workbench.action.terminal.kill
	// - workbench.action.terminal.killEditor
	// - workbench.action.terminal.moveToEditor
	// - workbench.action.terminal.moveToLineEnd
	// - workbench.action.terminal.moveToLineStart
	// - workbench.action.terminal.moveToTerminalPanel
	// - workbench.action.terminal.navigationModeExit
	// - workbench.action.terminal.navigationModeFocusNext
	// - workbench.action.terminal.navigationModeFocusPrevious
	// - workbench.action.terminal.new
	// - workbench.action.terminal.newInActiveWorkspace
	// - workbench.action.terminal.paste
	// - workbench.action.terminal.pasteSelection
	// - workbench.action.terminal.quickFix
	// - workbench.action.terminal.resizePaneDown
	// - workbench.action.terminal.resizePaneLeft
	// - workbench.action.terminal.resizePaneRight
	// - workbench.action.terminal.resizePaneUp
	// - workbench.action.terminal.runActiveFile
	// - workbench.action.terminal.runRecentCommand
	// - workbench.action.terminal.runSelectedText
	// - workbench.action.terminal.scrollDown
	// - workbench.action.terminal.scrollDownPage
	// - workbench.action.terminal.scrollToBottom
	// - workbench.action.terminal.scrollToNextCommand
	// - workbench.action.terminal.scrollToPreviousCommand
	// - workbench.action.terminal.scrollToTop
	// - workbench.action.terminal.scrollUp
	// - workbench.action.terminal.scrollUpPage
	// - workbench.action.terminal.selectAll
	// - workbench.action.terminal.selectToNextCommand
	// - workbench.action.terminal.selectToNextLine
	// - workbench.action.terminal.selectToPreviousCommand
	// - workbench.action.terminal.selectToPreviousLine
	// - workbench.action.terminal.sendSequence
	// - workbench.action.terminal.sizeToContentWidth
	// - workbench.action.terminal.split
	// - workbench.action.terminal.splitInActiveWorkspace
	// - workbench.action.terminal.toggleFindCaseSensitive
	// - workbench.action.terminal.toggleFindRegex
	// - workbench.action.terminal.toggleFindWholeWord
	// - workbench.action.terminal.toggleTerminal
	// - workbench.action.toggleFullScreen
	// - workbench.action.toggleMaximizedPanel
	// - workbench.action.togglePanel
	"terminal.integrated.commandsToSkipShell": [],

	// Controla se é necessário confirmar quando a janela fecha se houver sessões de terminal ativas.
	//  - never: Nunca confirme.
	//  - always: Sempre confirme se existem terminais.
	//  - hasChildProcesses: Confirme se há terminais com processos filhos.
	"terminal.integrated.confirmOnExit": "never",

	// Controla se os terminais de eliminação devem ser confirmados quando eles têm processos filhos. Quando definido como editor, os terminais na área do editor serão marcados como alterados quando tiverem processos filhos. Observe que a detecção de processos filho pode não funcionar bem para shells como o Git Bash, que não executam seus processos como processos filhos do shell.
	//  - never: Nunca confirme.
	//  - editor: Confirme se o terminal está no editor.
	//  - panel: Confirme se o terminal está no painel.
	//  - always: Confirme se o terminal está no editor ou no painel.
	"terminal.integrated.confirmOnKill": "editor",

	// Controla se o texto selecionado no terminal será copiado na área de transferência.
	"terminal.integrated.copyOnSelection": false,

	// Controla se o cursor de terminal pisca.
	"terminal.integrated.cursorBlinking": false,

	// Controla o estilo do cursor do terminal.
	"terminal.integrated.cursorStyle": "block",

	// Controla a largura do cursor quando `terminal.integrated.cursorStyle` é definido como `line`.
	"terminal.integrated.cursorWidth": 1,

	// Se você deseja desenhar glifos personalizados para elemento de bloco e caracteres de desenho de caixa em vez de usar a fonte, o que geralmente produz melhor renderização com linhas contínuas. Observe que isso não funciona com o renderizador DOM.
	"terminal.integrated.customGlyphs": true,

	// Um caminho de início explícito em que o terminal será iniciado. Ele será usado como o diretório de trabalho atual (cwd) para o processo de shell. Isso poderá ser particularmente útil em configurações de workspace se o diretório raiz não for um cwd conveniente.
	"terminal.integrated.cwd": "",

	// Controla onde os terminais recém-criados aparecerão.
	//  - editor: Criar terminais no editor
	//  - view: Criar terminais na exibição do terminal
	"terminal.integrated.defaultLocation": "view",

	// O perfil padrão usado no Linux. No momento, essa configuração será ignorada se `terminal.integrated.shell.linux` ou `terminal.integrated.shellArgs.linux` estiveres definidos.
	"terminal.integrated.defaultProfile.linux": null,

	// O perfil padrão usado no macOS. No momento, essa configuração será ignorada se `terminal.integrated.shell.osx` ou `terminal.integrated.shellArgs.osx` estiverem definidos.
	"terminal.integrated.defaultProfile.osx": null,

	// O perfil padrão usado no Windows. No momento, essa configuração será ignorada se `terminal.integrated.shell.windows` ou `terminal.integrated.shellArgs.windows` estiverem definidos.
	//  - null: Detectar o padrão automaticamente
	//  - PowerShell: $(terminal-powershell) PowerShell
	// - path: C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe
	//  - Windows PowerShell: $(terminal-powershell) Windows PowerShell
	// - path: C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe
	//  - Git Bash: $(terminal) Git Bash
	// - path: C:\Program Files\Git\bin\bash.exe
	// - args: ['--login']
	//  - Command Prompt: $(terminal-cmd) Command Prompt
	// - path: C:\Windows\System32\cmd.exe
	// - args: []
	//  - JavaScript Debug Terminal: $($(debug)) JavaScript Debug Terminal
	// - extensionIdentifier: ms-vscode.js-debug
	"terminal.integrated.defaultProfile.windows": null,

	// Controla se a variável de ambiente `$LANG` deve ser detectada e definida como uma opção compatível com UTF-8, pois o terminal do VS Code só dá suporte a dados codificados em UTF-8 provenientes de shell.
	//  - auto: Definir a variável de ambiente `$LANG` se a variável existente não existir ou se não terminar em `'.UTF-8 '`.
	//  - off: Não definir a variável de ambiente `$LANG`.
	//  - on: Sempre definir a variável de ambiente `$LANG`.
	"terminal.integrated.detectLocale": "auto",

	// Controla se o texto em negrito no terminal sempre usará a variante de cor ANSI "brilhante".
	"terminal.integrated.drawBoldTextInBrightColors": true,

	// Controla se o sinal de terminal está habilitado, isso aparece como um campainha visual ao lado do nome do terminal.
	"terminal.integrated.enableBell": false,

	// Se os links de arquivo devem ser habilitados no terminal. Os links podem ser lentos ao trabalhar em uma unidade de rede em particular porque cada link de arquivo é verificado no sistema de arquivos. A alteração dessa variável entrará em vigor somente em novos terminais.
	"terminal.integrated.enableFileLinks": true,

	// Mostra uma caixa de diálogo de aviso ao colar várias linhas no terminal. A caixa de diálogo não é exibida quando:
	// 
	// - O modo de colagem entre colchetes está ativado (o shell suporta nativamente a colagem de várias linhas)
	// - A colagem é tratada pela linha de leitura do shell (no caso de pwsh)
	"terminal.integrated.enableMultiLinePasteWarning": true,

	// Persistir sessões/histórico de terminal para o espaço de trabalho em recarregamentos de janela.
	"terminal.integrated.enablePersistentSessions": true,

	// Objeto com variáveis de ambiente que serão adicionadas ao processo do VS Code a ser usado pelo terminal no Linux. Defina como `null` para excluir a variável de ambiente.
	"terminal.integrated.env.linux": {},

	// Objeto com variáveis de ambiente que serão adicionadas ao processo do VS Code a ser usado pelo terminal no macOS. Defina como `null` para excluir a variável de ambiente.
	"terminal.integrated.env.osx": {},

	// Objeto com variáveis de ambiente que serão adicionadas ao processo do VS Code a ser usado pelo terminal no Windows. Defina como `null` para excluir a variável de ambiente.
	"terminal.integrated.env.windows": {},

	// Se deseja exibir o indicador de alterações de ambiente em cada terminal, o que explica se as extensões foram aplicadas, ou se você deseja fazer alterações no ambiente do terminal.
	//  - off: Desabilitar o indicador.
	//  - on: Habilitar o indicador.
	//  - warnonly: Somente mostrar o indicador de aviso quando o ambiente de um terminal estiver 'obsoleto', e não o indicador de informações que mostra que um terminal teve seu ambiente modificado por uma extensão.
	"terminal.integrated.environmentChangesIndicator": "warnonly",

	// Se os terminais serão reiniciados automaticamente quando a extensão desejar contribuir para o ambiente e ainda não tiver interagido com eles.
	"terminal.integrated.environmentChangesRelaunch": true,

	// Multiplicador de velocidade de rolagem ao pressionar `Alt`.
	"terminal.integrated.fastScrollSensitivity": 5,

	// Controla a família de fontes do terminal, o padrão é o valor de `editor.fontFamily`.
	"terminal.integrated.fontFamily": "",

	// Controla o tamanho da fonte em pixels do terminal.
	"terminal.integrated.fontSize": 14,

	// A espessura da fonte a ser usada no terminal para texto sem negrito. Aceita palavras-chave "normal" e "negrito" ou números entre 1 e 1000.
	"terminal.integrated.fontWeight": "normal",

	// A espessura da fonte a ser usada no terminal para texto em negrito. Aceita palavras-chave "normal" e "negrito" ou números entre 1 e 1000.
	"terminal.integrated.fontWeightBold": "bold",

	// Controla se o terminal aproveitará a GPU para fazer a renderização.
	//  - auto: Permitir que o VS Code detecte qual renderizador fornecerá a melhor experiência.
	//  - on: Habilitar a aceleração da GPU no terminal.
	//  - off: Desabilite a aceleração de GPU no terminal. O terminal será renderizado muito mais lentamente quando a aceleração de GPU estiver desativada, mas deverá funcionar de forma confiável em todos os sistemas.
	//  - canvas: Use o renderizador de tela de fallback do terminal que usa um contexto 2d em vez de webgl, que pode ter um desempenho melhor em alguns sistemas. Observe que alguns recursos são limitados no renderizador de tela, como a seleção opaca.
	"terminal.integrated.gpuAcceleration": "auto",

	// Um conjunto de nomes de processos a serem ignorados ao usar a configuração `terminal.integrated.confirmOnKill`.
	"terminal.integrated.ignoreProcessNames": [
		"starship",
		"oh-my-posh",
		"bash",
		"zsh"
	],

	// Se os novos shells devem herdar seu ambiente do código VS, o que pode gerar um shell de entrada para garantir que $PATH e outras variáveis de desenvolvimento sejam inicializadas. Isso não tem efeito no Windows.
	"terminal.integrated.inheritEnv": true,

	// Controla o espaçamento de letras do terminal, este é um valor inteiro que representa a quantidade de pixels adicionais a serem adicionados entre caracteres.
	"terminal.integrated.letterSpacing": 0,

	// Controla a altura da linha do terminal, esse número é multiplicado pelo tamanho da fonte do terminal para obter a altura real da linha em pixels.
	"terminal.integrated.lineHeight": 1,

	// Quando o eco local deve ser ativado. Isso irá substituir `terminal.integrated.localEchoLatencyThreshold`
	//  - on: Sempre habilitado
	//  - off: Sempre desabilitado
	//  - auto: Habilitado somente para workspaces remotos
	"terminal.integrated.localEchoEnabled": "auto",

	// O eco local será desativado quando qualquer um desses nomes de programa for encontrado no título do terminal.
	"terminal.integrated.localEchoExcludePrograms": [
		"vim",
		"vi",
		"nano",
		"tmux"
	],

	// Duração do atraso da rede, em milissegundos, em que as edições locais serão ecoadas no terminal sem esperar pela confirmação do servidor. Se for '0', o eco local estará sempre ativado, e se for '-1', ele será desabilitado.
	"terminal.integrated.localEchoLatencyThreshold": 30,

	// Estilo do terminal de texto ecoado localmente; um estilo da fonte ou uma cor RGB.
	"terminal.integrated.localEchoStyle": "dim",

	// Controla se a seleção deve ser forçada ao usar Option + clique no macOS. Isso forçará uma seleção regular (linha) e removerá a permissão de uso do modo de seleção de coluna. Isso permite copiar e colar usando a seleção de terminal normal, por exemplo, quando o modo de mouse está habilitado no tmux.
	"terminal.integrated.macOptionClickForcesSelection": false,

	// Controla se a chave de opção deve ser tratada como a chave de meta no terminal no macOS.
	"terminal.integrated.macOptionIsMeta": false,

	// Quando definido, a cor de primeiro plano de cada célula será alterada para tentar atender à taxa de contraste especificada. Observe que isso não se aplica a caracteres `powerline` por #146406. Valores de exemplo:
	// 
	// - 1: não faça nada e use as cores padrão do tema.
	// - 4.5: [Conformidade com WCAG AA (mínimo)](https://www.w3.org/TR/UNDERSTANDING-WCAG20/visual-audio-contrast-contrast.html) (default).
	// - 7: [Conformidade WCAG AAA (melhorado)](https://www.w3.org/TR/UNDERSTANDING-WCAG20/visual-audio-contrast7.html).
	// - 21: branco no preto ou preto no branco.
	"terminal.integrated.minimumContrastRatio": 4.5,

	// Um multiplicador a ser usado no `deltaY` dos eventos de rolagem do mouse.
	"terminal.integrated.mouseWheelScrollSensitivity": 1,

	// Quando o processo do terminal deve ser encerrado (por exemplo, ao fechar a janela ou o aplicativo), isso determina quando o conteúdo/histórico da sessão do terminal anterior deve ser restaurado e os processos devem ser recriados na próxima vez que o espaço de trabalho for aberto.
	// 
	// Advertências:
	// 
	// - A restauração do diretório de trabalho atual do processo depende se ele é suportado pelo shell.
	// - O tempo para persistir a sessão durante o desligamento é limitado, portanto, pode ser abortado ao usar conexões remotas de alta latência.
	//  - onExit: Reativa os processos depois que a última janela for fechada no Windows/Linux ou quando o comando `workbench.action.quit` for disparado (paleta de comandos, associação de teclas, menu).
	//  - onExitAndWindowClose: Reativa os processos depois que a última janela for fechada no Windows/Linux ou quando o comando `workbench.action.quit` for disparado (paleta de comandos, associação de teclas, menu) ou quando a janela for fechada.
	//  - never: Nunca restaure os buffers do terminal nem recrie o processo.
	"terminal.integrated.persistentSessionReviveProcess": "onExit",

	// Controla a quantidade máxima de linhas que serão restauradas ao se reconectar a uma sessão de terminal persistente. Aumentar isso irá restaurar mais linhas de scrollback ao custo de mais memória e aumentará o tempo que leva para se conectar aos terminais na inicialização. Esta configuração requer uma reinicialização para ter efeito e deve ser definida para um valor menor ou igual a `terminal.integrated.scrollback`.
	"terminal.integrated.persistentSessionScrollback": 100,

	// Os perfis do Linux a serem presentes ao criar um terminal por meio da lista suspensa do terminal. Defina a `path` propriedade manualmente com um `args`.
	// 
	// Defina um perfil existente `null` para ocultar o perfil da lista, por exemplo: `"bash": null`.
	"terminal.integrated.profiles.linux": {
		"bash": {
			"path": "bash",
			"icon": "terminal-bash"
		},
		"zsh": {
			"path": "zsh"
		},
		"fish": {
			"path": "fish"
		},
		"tmux": {
			"path": "tmux",
			"icon": "terminal-tmux"
		},
		"pwsh": {
			"path": "pwsh",
			"icon": "terminal-powershell"
		}
	},

	// Os perfis do macOS a serem presentes ao criar um terminal por meio da lista suspensa do terminal. Defina a `path` propriedade manualmente com um `args`.
	// 
	// Defina um perfil existente `null` para ocultar o perfil da lista, por exemplo: `"bash": null`.
	"terminal.integrated.profiles.osx": {
		"bash": {
			"path": "bash",
			"args": [
				"-l"
			],
			"icon": "terminal-bash"
		},
		"zsh": {
			"path": "zsh",
			"args": [
				"-l"
			]
		},
		"fish": {
			"path": "fish",
			"args": [
				"-l"
			]
		},
		"tmux": {
			"path": "tmux",
			"icon": "terminal-tmux"
		},
		"pwsh": {
			"path": "pwsh",
			"icon": "terminal-powershell"
		}
	},

	// Os perfis do Windows a serem presentes ao criar um novo terminal por meio da lista suspensa do terminal. Use a `source` propriedade para detectar automaticamente a localização do shell. Ou defina a `path` propriedade manualmente com um `args`.
	// 
	// Definir um perfil existente para `null` ocultar o perfil da lista, por exemplo: `"Ubuntu-20.04 (WSL)": null`.
	"terminal.integrated.profiles.windows": {
		"PowerShell": {
			"source": "PowerShell",
			"icon": "terminal-powershell"
		},
		"Command Prompt": {
			"path": [
				"${env:windir}\\Sysnative\\cmd.exe",
				"${env:windir}\\System32\\cmd.exe"
			],
			"args": [],
			"icon": "terminal-cmd"
		},
		"Git Bash": {
			"source": "Git Bash"
		}
	},

	// Controla como o terminal reage ao clicar com o botão direito do mouse.
	//  - default: Mostrar o menu de contexto.
	//  - copyPaste: Copiar quando houver uma seleção, caso contrário, colar.
	//  - paste: Colar ao clicar com o botão direito do mouse.
	//  - selectWord: Selecionar a palavra sob o cursor e mostrar o menu de contexto.
	//  - nothing: Não faça nada e passe o evento para o terminal.
	"terminal.integrated.rightClickBehavior": "copyPaste",

	// Controla o número máximo de linhas que o terminal mantém no buffer.
	"terminal.integrated.scrollback": 1000,

	// Envia a maioria das combinações de teclas para o terminal em vez do workbench, substituindo `terminal.integrated.commandsToSkipShell`, que pode ser usado alternativamente para ajuste fino.
	"terminal.integrated.sendKeybindingsToShell": false,

	// Isso foi preterido. A nova maneira recomendada de configurar seu shell padrão é criar um perfil de terminal no `terminal.integrated.profiles.linux#` e definir seu nome de perfil como padrão no `#terminal.integrated.defaultProfile.linux`. No momento, isso terá prioridade sobre as novas configurações de perfis, mas isso mudará no futuro.
	// The path of the shell that the terminal uses on Linux. [Read more about configuring the shell](https://code.visualstudio.com/docs/editor/integrated-terminal#_terminal-profiles).
	"terminal.integrated.shell.linux": null,

	// Isso foi preterido. A nova maneira recomendada de configurar seu shell padrão é criar um perfil de terminal no `terminal.integrated.profiles.osx#` e definir seu nome de perfil como padrão no `#terminal.integrated.defaultProfile.osx`. No momento, isso terá prioridade sobre as novas configurações de perfis, mas isso mudará no futuro.
	// The path of the shell that the terminal uses on macOS. [Read more about configuring the shell](https://code.visualstudio.com/docs/editor/integrated-terminal#_terminal-profiles).
	"terminal.integrated.shell.osx": null,

	// Isso foi preterido. A nova maneira recomendada de configurar seu shell padrão é criar um perfil de terminal no `terminal.integrated.profiles.windows#` e definir seu nome de perfil como padrão no `#terminal.integrated.defaultProfile.windows`. No momento, isso terá prioridade sobre as novas configurações de perfis, mas isso mudará no futuro.
	// The path of the shell that the terminal uses on Windows. [Read more about configuring the shell](https://code.visualstudio.com/docs/editor/integrated-terminal#_terminal-profiles).
	"terminal.integrated.shell.windows": null,

	// Isso foi preterido. A nova maneira recomendada de configurar seu shell padrão é criar um perfil de terminal no `terminal.integrated.profiles.linux#` e definir seu nome de perfil como padrão no `#terminal.integrated.defaultProfile.linux`. No momento, isso terá prioridade sobre as novas configurações de perfis, mas isso mudará no futuro.
	// The command line arguments to use when on the Linux terminal. [Read more about configuring the shell](https://code.visualstudio.com/docs/editor/integrated-terminal#_terminal-profiles).
	"terminal.integrated.shellArgs.linux": [],

	// Isso foi preterido. A nova maneira recomendada de configurar seu shell padrão é criar um perfil de terminal no `terminal.integrated.profiles.osx#` e definir seu nome de perfil como padrão no `#terminal.integrated.defaultProfile.osx`. No momento, isso terá prioridade sobre as novas configurações de perfis, mas isso mudará no futuro.
	// The command line arguments to use when on the macOS terminal. [Read more about configuring the shell](https://code.visualstudio.com/docs/editor/integrated-terminal#_terminal-profiles).
	"terminal.integrated.shellArgs.osx": [
		"-l"
	],

	// Isso foi preterido. A nova maneira recomendada de configurar seu shell padrão é criar um perfil de terminal no `terminal.integrated.profiles.windows#` e definir seu nome de perfil como padrão no `#terminal.integrated.defaultProfile.windows`. No momento, isso terá prioridade sobre as novas configurações de perfis, mas isso mudará no futuro.
	// The command line arguments to use when on the Windows terminal. [Read more about configuring the shell](https://code.visualstudio.com/docs/editor/integrated-terminal#_terminal-profiles).
	"terminal.integrated.shellArgs.windows": [],

	// Quando a integração do shell está habilitada, adiciona uma decoração para cada comando.
	//  - both: Mostrar decorações na calha (esquerda) e régua de visão geral (direita)
	//  - gutter: Mostrar decorações de calha à esquerda do terminal
	//  - overviewRuler: Mostrar as decorações da régua de visão geral à direita do terminal
	//  - never: Não mostrar decorações
	"terminal.integrated.shellIntegration.decorationsEnabled": "both",

	// Determina se a integração do shell é ou não injetada automaticamente para oferecer suporte a recursos como rastreamento de comando aprimorado e detecção de diretório de trabalho atual. 
	// 
	// A integração do shell funciona injetando o shell com um script de inicialização. O script fornece ao VS Code informações sobre o que está acontecendo no terminal.
	// 
	// Shells suportados:
	// 
	// - Linux/macOS: bash, pwsh, zsh
	//  - Windows: pwsh
	// 
	// Esta configuração se aplica somente quando os terminais são criados, portanto, você precisará reiniciar seus terminais para que ela tenha efeito.
	// 
	//  Observe que a injeção de script pode não funcionar se você tiver argumentos personalizados definidos no perfil do terminal, um [bash complexo `PROMPT_COMMAND`](https://code.visualstudio.com/docs/editor/integrated-terminal#_complex- bash-promptcommand) ou outra configuração não suportada. Para desativar as decorações, veja `terminal.integrated.shellIntegrations.decorationsEnabled`
	"terminal.integrated.shellIntegration.enabled": true,

	// Controla o número de comandos usados recentemente para manter no histórico de comandos do terminal. Defina como 0 para desabilitar o histórico de comandos do terminal.
	"terminal.integrated.shellIntegration.history": 100,

	// Controla se o alerta "O processo do terminal terminou com o código de saída" é mostrado quando o código de saída é diferente de zero.
	"terminal.integrated.showExitAlert": true,

	// Se deseja mostrar os focos para links na saída do terminal.
	"terminal.integrated.showLinkHover": true,

	// Controla se o terminal rolará usando uma animação.
	"terminal.integrated.smoothScrolling": false,

	// Controla o diretório de trabalho com o qual um terminal dividido começa.
	//  - workspaceRoot: Um novo terminal dividido usará a raiz do workspace como o diretório de trabalho. Em um workspace de várias raízes, uma escolha para qual pasta raiz usar é oferecida.
	//  - initial: Um novo terminal dividido usará o diretório de trabalho com o que o terminal pai começou.
	//  - inherited: No macOS e no Linux, um novo terminal dividido usará o diretório de trabalho do terminal pai. No Windows, ele se comporta do mesmo modo que o inicial.
	"terminal.integrated.splitCwd": "inherited",

	// Um ID de cor de tema para associar aos ícones do terminal por padrão.
	"terminal.integrated.tabs.defaultColor": null,

	// Um ID de codicon para associar aos ícones do terminal por padrão.
	//  - add: $(add)
	//  - plus: $(plus)
	//  - gist-new: $(gist-new)
	//  - repo-create: $(repo-create)
	//  - lightbulb: $(lightbulb)
	//  - light-bulb: $(light-bulb)
	//  - repo: $(repo)
	//  - repo-delete: $(repo-delete)
	//  - gist-fork: $(gist-fork)
	//  - repo-forked: $(repo-forked)
	//  - git-pull-request: $(git-pull-request)
	//  - git-pull-request-abandoned: $(git-pull-request-abandoned)
	//  - record-keys: $(record-keys)
	//  - keyboard: $(keyboard)
	//  - tag: $(tag)
	//  - tag-add: $(tag-add)
	//  - tag-remove: $(tag-remove)
	//  - person: $(person)
	//  - person-follow: $(person-follow)
	//  - person-outline: $(person-outline)
	//  - person-filled: $(person-filled)
	//  - git-branch: $(git-branch)
	//  - git-branch-create: $(git-branch-create)
	//  - git-branch-delete: $(git-branch-delete)
	//  - source-control: $(source-control)
	//  - mirror: $(mirror)
	//  - mirror-public: $(mirror-public)
	//  - star: $(star)
	//  - star-add: $(star-add)
	//  - star-delete: $(star-delete)
	//  - star-empty: $(star-empty)
	//  - comment: $(comment)
	//  - comment-add: $(comment-add)
	//  - alert: $(alert)
	//  - warning: $(warning)
	//  - search: $(search)
	//  - search-save: $(search-save)
	//  - log-out: $(log-out)
	//  - sign-out: $(sign-out)
	//  - log-in: $(log-in)
	//  - sign-in: $(sign-in)
	//  - eye: $(eye)
	//  - eye-unwatch: $(eye-unwatch)
	//  - eye-watch: $(eye-watch)
	//  - circle-filled: $(circle-filled)
	//  - primitive-dot: $(primitive-dot)
	//  - close-dirty: $(close-dirty)
	//  - debug-breakpoint: $(debug-breakpoint)
	//  - debug-breakpoint-disabled: $(debug-breakpoint-disabled)
	//  - debug-hint: $(debug-hint)
	//  - primitive-square: $(primitive-square)
	//  - edit: $(edit)
	//  - pencil: $(pencil)
	//  - info: $(info)
	//  - issue-opened: $(issue-opened)
	//  - gist-private: $(gist-private)
	//  - git-fork-private: $(git-fork-private)
	//  - lock: $(lock)
	//  - mirror-private: $(mirror-private)
	//  - close: $(close)
	//  - remove-close: $(remove-close)
	//  - x: $(x)
	//  - repo-sync: $(repo-sync)
	//  - sync: $(sync)
	//  - clone: $(clone)
	//  - desktop-download: $(desktop-download)
	//  - beaker: $(beaker)
	//  - microscope: $(microscope)
	//  - vm: $(vm)
	//  - device-desktop: $(device-desktop)
	//  - file: $(file)
	//  - file-text: $(file-text)
	//  - more: $(more)
	//  - ellipsis: $(ellipsis)
	//  - kebab-horizontal: $(kebab-horizontal)
	//  - mail-reply: $(mail-reply)
	//  - reply: $(reply)
	//  - organization: $(organization)
	//  - organization-filled: $(organization-filled)
	//  - organization-outline: $(organization-outline)
	//  - new-file: $(new-file)
	//  - file-add: $(file-add)
	//  - new-folder: $(new-folder)
	//  - file-directory-create: $(file-directory-create)
	//  - trash: $(trash)
	//  - trashcan: $(trashcan)
	//  - history: $(history)
	//  - clock: $(clock)
	//  - folder: $(folder)
	//  - file-directory: $(file-directory)
	//  - symbol-folder: $(symbol-folder)
	//  - logo-github: $(logo-github)
	//  - mark-github: $(mark-github)
	//  - github: $(github)
	//  - terminal: $(terminal)
	//  - console: $(console)
	//  - repl: $(repl)
	//  - zap: $(zap)
	//  - symbol-event: $(symbol-event)
	//  - error: $(error)
	//  - stop: $(stop)
	//  - variable: $(variable)
	//  - symbol-variable: $(symbol-variable)
	//  - array: $(array)
	//  - symbol-array: $(symbol-array)
	//  - symbol-module: $(symbol-module)
	//  - symbol-package: $(symbol-package)
	//  - symbol-namespace: $(symbol-namespace)
	//  - symbol-object: $(symbol-object)
	//  - symbol-method: $(symbol-method)
	//  - symbol-function: $(symbol-function)
	//  - symbol-constructor: $(symbol-constructor)
	//  - symbol-boolean: $(symbol-boolean)
	//  - symbol-null: $(symbol-null)
	//  - symbol-numeric: $(symbol-numeric)
	//  - symbol-number: $(symbol-number)
	//  - symbol-structure: $(symbol-structure)
	//  - symbol-struct: $(symbol-struct)
	//  - symbol-parameter: $(symbol-parameter)
	//  - symbol-type-parameter: $(symbol-type-parameter)
	//  - symbol-key: $(symbol-key)
	//  - symbol-text: $(symbol-text)
	//  - symbol-reference: $(symbol-reference)
	//  - go-to-file: $(go-to-file)
	//  - symbol-enum: $(symbol-enum)
	//  - symbol-value: $(symbol-value)
	//  - symbol-ruler: $(symbol-ruler)
	//  - symbol-unit: $(symbol-unit)
	//  - activate-breakpoints: $(activate-breakpoints)
	//  - archive: $(archive)
	//  - arrow-both: $(arrow-both)
	//  - arrow-down: $(arrow-down)
	//  - arrow-left: $(arrow-left)
	//  - arrow-right: $(arrow-right)
	//  - arrow-small-down: $(arrow-small-down)
	//  - arrow-small-left: $(arrow-small-left)
	//  - arrow-small-right: $(arrow-small-right)
	//  - arrow-small-up: $(arrow-small-up)
	//  - arrow-up: $(arrow-up)
	//  - bell: $(bell)
	//  - bold: $(bold)
	//  - book: $(book)
	//  - bookmark: $(bookmark)
	//  - debug-breakpoint-conditional-unverified: $(debug-breakpoint-conditional-unverified)
	//  - debug-breakpoint-conditional: $(debug-breakpoint-conditional)
	//  - debug-breakpoint-conditional-disabled: $(debug-breakpoint-conditional-disabled)
	//  - debug-breakpoint-data-unverified: $(debug-breakpoint-data-unverified)
	//  - debug-breakpoint-data: $(debug-breakpoint-data)
	//  - debug-breakpoint-data-disabled: $(debug-breakpoint-data-disabled)
	//  - debug-breakpoint-log-unverified: $(debug-breakpoint-log-unverified)
	//  - debug-breakpoint-log: $(debug-breakpoint-log)
	//  - debug-breakpoint-log-disabled: $(debug-breakpoint-log-disabled)
	//  - briefcase: $(briefcase)
	//  - broadcast: $(broadcast)
	//  - browser: $(browser)
	//  - bug: $(bug)
	//  - calendar: $(calendar)
	//  - case-sensitive: $(case-sensitive)
	//  - check: $(check)
	//  - checklist: $(checklist)
	//  - chevron-down: $(chevron-down)
	//  - drop-down-button: $(drop-down-button)
	//  - chevron-left: $(chevron-left)
	//  - chevron-right: $(chevron-right)
	//  - chevron-up: $(chevron-up)
	//  - chrome-close: $(chrome-close)
	//  - chrome-maximize: $(chrome-maximize)
	//  - chrome-minimize: $(chrome-minimize)
	//  - chrome-restore: $(chrome-restore)
	//  - circle: $(circle)
	//  - circle-outline: $(circle-outline)
	//  - debug-breakpoint-unverified: $(debug-breakpoint-unverified)
	//  - circle-slash: $(circle-slash)
	//  - circuit-board: $(circuit-board)
	//  - clear-all: $(clear-all)
	//  - clippy: $(clippy)
	//  - close-all: $(close-all)
	//  - cloud-download: $(cloud-download)
	//  - cloud-upload: $(cloud-upload)
	//  - code: $(code)
	//  - collapse-all: $(collapse-all)
	//  - color-mode: $(color-mode)
	//  - comment-discussion: $(comment-discussion)
	//  - compare-changes: $(compare-changes)
	//  - credit-card: $(credit-card)
	//  - dash: $(dash)
	//  - dashboard: $(dashboard)
	//  - database: $(database)
	//  - debug-continue: $(debug-continue)
	//  - debug-disconnect: $(debug-disconnect)
	//  - debug-pause: $(debug-pause)
	//  - debug-restart: $(debug-restart)
	//  - debug-start: $(debug-start)
	//  - debug-step-into: $(debug-step-into)
	//  - debug-step-out: $(debug-step-out)
	//  - debug-step-over: $(debug-step-over)
	//  - debug-stop: $(debug-stop)
	//  - debug: $(debug)
	//  - device-camera-video: $(device-camera-video)
	//  - device-camera: $(device-camera)
	//  - device-mobile: $(device-mobile)
	//  - diff-added: $(diff-added)
	//  - diff-ignored: $(diff-ignored)
	//  - diff-modified: $(diff-modified)
	//  - diff-removed: $(diff-removed)
	//  - diff-renamed: $(diff-renamed)
	//  - diff: $(diff)
	//  - discard: $(discard)
	//  - editor-layout: $(editor-layout)
	//  - empty-window: $(empty-window)
	//  - exclude: $(exclude)
	//  - extensions: $(extensions)
	//  - eye-closed: $(eye-closed)
	//  - file-binary: $(file-binary)
	//  - file-code: $(file-code)
	//  - file-media: $(file-media)
	//  - file-pdf: $(file-pdf)
	//  - file-submodule: $(file-submodule)
	//  - file-symlink-directory: $(file-symlink-directory)
	//  - file-symlink-file: $(file-symlink-file)
	//  - file-zip: $(file-zip)
	//  - files: $(files)
	//  - filter: $(filter)
	//  - flame: $(flame)
	//  - fold-down: $(fold-down)
	//  - fold-up: $(fold-up)
	//  - fold: $(fold)
	//  - folder-active: $(folder-active)
	//  - folder-opened: $(folder-opened)
	//  - gear: $(gear)
	//  - gift: $(gift)
	//  - gist-secret: $(gist-secret)
	//  - gist: $(gist)
	//  - git-commit: $(git-commit)
	//  - git-compare: $(git-compare)
	//  - git-merge: $(git-merge)
	//  - github-action: $(github-action)
	//  - github-alt: $(github-alt)
	//  - globe: $(globe)
	//  - grabber: $(grabber)
	//  - graph: $(graph)
	//  - gripper: $(gripper)
	//  - heart: $(heart)
	//  - home: $(home)
	//  - horizontal-rule: $(horizontal-rule)
	//  - hubot: $(hubot)
	//  - inbox: $(inbox)
	//  - issue-closed: $(issue-closed)
	//  - issue-reopened: $(issue-reopened)
	//  - issues: $(issues)
	//  - italic: $(italic)
	//  - jersey: $(jersey)
	//  - json: $(json)
	//  - kebab-vertical: $(kebab-vertical)
	//  - key: $(key)
	//  - law: $(law)
	//  - lightbulb-autofix: $(lightbulb-autofix)
	//  - link-external: $(link-external)
	//  - link: $(link)
	//  - list-ordered: $(list-ordered)
	//  - list-unordered: $(list-unordered)
	//  - live-share: $(live-share)
	//  - loading: $(loading)
	//  - location: $(location)
	//  - mail-read: $(mail-read)
	//  - mail: $(mail)
	//  - markdown: $(markdown)
	//  - megaphone: $(megaphone)
	//  - mention: $(mention)
	//  - milestone: $(milestone)
	//  - mortar-board: $(mortar-board)
	//  - move: $(move)
	//  - multiple-windows: $(multiple-windows)
	//  - mute: $(mute)
	//  - no-newline: $(no-newline)
	//  - note: $(note)
	//  - octoface: $(octoface)
	//  - open-preview: $(open-preview)
	//  - package: $(package)
	//  - paintcan: $(paintcan)
	//  - pin: $(pin)
	//  - play: $(play)
	//  - run: $(run)
	//  - plug: $(plug)
	//  - preserve-case: $(preserve-case)
	//  - preview: $(preview)
	//  - project: $(project)
	//  - pulse: $(pulse)
	//  - question: $(question)
	//  - quote: $(quote)
	//  - radio-tower: $(radio-tower)
	//  - reactions: $(reactions)
	//  - references: $(references)
	//  - refresh: $(refresh)
	//  - regex: $(regex)
	//  - remote-explorer: $(remote-explorer)
	//  - remote: $(remote)
	//  - remove: $(remove)
	//  - replace-all: $(replace-all)
	//  - replace: $(replace)
	//  - repo-clone: $(repo-clone)
	//  - repo-force-push: $(repo-force-push)
	//  - repo-pull: $(repo-pull)
	//  - repo-push: $(repo-push)
	//  - report: $(report)
	//  - request-changes: $(request-changes)
	//  - rocket: $(rocket)
	//  - root-folder-opened: $(root-folder-opened)
	//  - root-folder: $(root-folder)
	//  - rss: $(rss)
	//  - ruby: $(ruby)
	//  - save-all: $(save-all)
	//  - save-as: $(save-as)
	//  - save: $(save)
	//  - screen-full: $(screen-full)
	//  - screen-normal: $(screen-normal)
	//  - search-stop: $(search-stop)
	//  - server: $(server)
	//  - settings-gear: $(settings-gear)
	//  - settings: $(settings)
	//  - shield: $(shield)
	//  - smiley: $(smiley)
	//  - sort-precedence: $(sort-precedence)
	//  - split-horizontal: $(split-horizontal)
	//  - split-vertical: $(split-vertical)
	//  - squirrel: $(squirrel)
	//  - star-full: $(star-full)
	//  - star-half: $(star-half)
	//  - symbol-class: $(symbol-class)
	//  - symbol-color: $(symbol-color)
	//  - symbol-customcolor: $(symbol-customcolor)
	//  - symbol-constant: $(symbol-constant)
	//  - symbol-enum-member: $(symbol-enum-member)
	//  - symbol-field: $(symbol-field)
	//  - symbol-file: $(symbol-file)
	//  - symbol-interface: $(symbol-interface)
	//  - symbol-keyword: $(symbol-keyword)
	//  - symbol-misc: $(symbol-misc)
	//  - symbol-operator: $(symbol-operator)
	//  - symbol-property: $(symbol-property)
	//  - wrench: $(wrench)
	//  - wrench-subaction: $(wrench-subaction)
	//  - symbol-snippet: $(symbol-snippet)
	//  - tasklist: $(tasklist)
	//  - telescope: $(telescope)
	//  - text-size: $(text-size)
	//  - three-bars: $(three-bars)
	//  - thumbsdown: $(thumbsdown)
	//  - thumbsup: $(thumbsup)
	//  - tools: $(tools)
	//  - triangle-down: $(triangle-down)
	//  - triangle-left: $(triangle-left)
	//  - triangle-right: $(triangle-right)
	//  - triangle-up: $(triangle-up)
	//  - twitter: $(twitter)
	//  - unfold: $(unfold)
	//  - unlock: $(unlock)
	//  - unmute: $(unmute)
	//  - unverified: $(unverified)
	//  - verified: $(verified)
	//  - versions: $(versions)
	//  - vm-active: $(vm-active)
	//  - vm-outline: $(vm-outline)
	//  - vm-running: $(vm-running)
	//  - watch: $(watch)
	//  - whitespace: $(whitespace)
	//  - whole-word: $(whole-word)
	//  - window: $(window)
	//  - word-wrap: $(word-wrap)
	//  - zoom-in: $(zoom-in)
	//  - zoom-out: $(zoom-out)
	//  - list-filter: $(list-filter)
	//  - list-flat: $(list-flat)
	//  - list-selection: $(list-selection)
	//  - selection: $(selection)
	//  - list-tree: $(list-tree)
	//  - debug-breakpoint-function-unverified: $(debug-breakpoint-function-unverified)
	//  - debug-breakpoint-function: $(debug-breakpoint-function)
	//  - debug-breakpoint-function-disabled: $(debug-breakpoint-function-disabled)
	//  - debug-stackframe-active: $(debug-stackframe-active)
	//  - circle-small-filled: $(circle-small-filled)
	//  - debug-stackframe-dot: $(debug-stackframe-dot)
	//  - debug-stackframe: $(debug-stackframe)
	//  - debug-stackframe-focused: $(debug-stackframe-focused)
	//  - debug-breakpoint-unsupported: $(debug-breakpoint-unsupported)
	//  - symbol-string: $(symbol-string)
	//  - debug-reverse-continue: $(debug-reverse-continue)
	//  - debug-step-back: $(debug-step-back)
	//  - debug-restart-frame: $(debug-restart-frame)
	//  - call-incoming: $(call-incoming)
	//  - call-outgoing: $(call-outgoing)
	//  - menu: $(menu)
	//  - expand-all: $(expand-all)
	//  - feedback: $(feedback)
	//  - group-by-ref-type: $(group-by-ref-type)
	//  - ungroup-by-ref-type: $(ungroup-by-ref-type)
	//  - account: $(account)
	//  - bell-dot: $(bell-dot)
	//  - debug-console: $(debug-console)
	//  - library: $(library)
	//  - output: $(output)
	//  - run-all: $(run-all)
	//  - sync-ignored: $(sync-ignored)
	//  - pinned: $(pinned)
	//  - github-inverted: $(github-inverted)
	//  - debug-alt: $(debug-alt)
	//  - server-process: $(server-process)
	//  - server-environment: $(server-environment)
	//  - pass: $(pass)
	//  - stop-circle: $(stop-circle)
	//  - play-circle: $(play-circle)
	//  - record: $(record)
	//  - debug-alt-small: $(debug-alt-small)
	//  - vm-connect: $(vm-connect)
	//  - cloud: $(cloud)
	//  - merge: $(merge)
	//  - export: $(export)
	//  - graph-left: $(graph-left)
	//  - magnet: $(magnet)
	//  - notebook: $(notebook)
	//  - redo: $(redo)
	//  - check-all: $(check-all)
	//  - pinned-dirty: $(pinned-dirty)
	//  - pass-filled: $(pass-filled)
	//  - circle-large-filled: $(circle-large-filled)
	//  - circle-large: $(circle-large)
	//  - circle-large-outline: $(circle-large-outline)
	//  - combine: $(combine)
	//  - gather: $(gather)
	//  - table: $(table)
	//  - variable-group: $(variable-group)
	//  - type-hierarchy: $(type-hierarchy)
	//  - type-hierarchy-sub: $(type-hierarchy-sub)
	//  - type-hierarchy-super: $(type-hierarchy-super)
	//  - git-pull-request-create: $(git-pull-request-create)
	//  - run-above: $(run-above)
	//  - run-below: $(run-below)
	//  - notebook-template: $(notebook-template)
	//  - debug-rerun: $(debug-rerun)
	//  - workspace-trusted: $(workspace-trusted)
	//  - workspace-untrusted: $(workspace-untrusted)
	//  - workspace-unspecified: $(workspace-unspecified)
	//  - terminal-cmd: $(terminal-cmd)
	//  - terminal-debian: $(terminal-debian)
	//  - terminal-linux: $(terminal-linux)
	//  - terminal-powershell: $(terminal-powershell)
	//  - terminal-tmux: $(terminal-tmux)
	//  - terminal-ubuntu: $(terminal-ubuntu)
	//  - terminal-bash: $(terminal-bash)
	//  - arrow-swap: $(arrow-swap)
	//  - copy: $(copy)
	//  - person-add: $(person-add)
	//  - filter-filled: $(filter-filled)
	//  - wand: $(wand)
	//  - debug-line-by-line: $(debug-line-by-line)
	//  - inspect: $(inspect)
	//  - layers: $(layers)
	//  - layers-dot: $(layers-dot)
	//  - layers-active: $(layers-active)
	//  - compass: $(compass)
	//  - compass-dot: $(compass-dot)
	//  - compass-active: $(compass-active)
	//  - azure: $(azure)
	//  - issue-draft: $(issue-draft)
	//  - git-pull-request-closed: $(git-pull-request-closed)
	//  - git-pull-request-draft: $(git-pull-request-draft)
	//  - debug-all: $(debug-all)
	//  - debug-coverage: $(debug-coverage)
	//  - run-errors: $(run-errors)
	//  - folder-library: $(folder-library)
	//  - debug-continue-small: $(debug-continue-small)
	//  - beaker-stop: $(beaker-stop)
	//  - graph-line: $(graph-line)
	//  - graph-scatter: $(graph-scatter)
	//  - pie-chart: $(pie-chart)
	//  - bracket: $(bracket)
	//  - bracket-dot: $(bracket-dot)
	//  - bracket-error: $(bracket-error)
	//  - lock-small: $(lock-small)
	//  - azure-devops: $(azure-devops)
	//  - verified-filled: $(verified-filled)
	//  - newline: $(newline)
	//  - layout: $(layout)
	//  - layout-activitybar-left: $(layout-activitybar-left)
	//  - layout-activitybar-right: $(layout-activitybar-right)
	//  - layout-panel-left: $(layout-panel-left)
	//  - layout-panel-center: $(layout-panel-center)
	//  - layout-panel-justify: $(layout-panel-justify)
	//  - layout-panel-right: $(layout-panel-right)
	//  - layout-panel: $(layout-panel)
	//  - layout-sidebar-left: $(layout-sidebar-left)
	//  - layout-sidebar-right: $(layout-sidebar-right)
	//  - layout-statusbar: $(layout-statusbar)
	//  - layout-menubar: $(layout-menubar)
	//  - layout-centered: $(layout-centered)
	//  - layout-sidebar-right-off: $(layout-sidebar-right-off)
	//  - layout-panel-off: $(layout-panel-off)
	//  - layout-sidebar-left-off: $(layout-sidebar-left-off)
	//  - target: $(target)
	//  - indent: $(indent)
	//  - record-small: $(record-small)
	//  - error-small: $(error-small)
	//  - arrow-circle-down: $(arrow-circle-down)
	//  - arrow-circle-left: $(arrow-circle-left)
	//  - arrow-circle-right: $(arrow-circle-right)
	//  - arrow-circle-up: $(arrow-circle-up)
	//  - heart-filled: $(heart-filled)
	//  - map: $(map)
	//  - map-filled: $(map-filled)
	//  - circle-small: $(circle-small)
	//  - bell-slash: $(bell-slash)
	//  - bell-slash-dot: $(bell-slash-dot)
	//  - comment-unresolved: $(comment-unresolved)
	//  - git-pull-request-go-to-changes: $(git-pull-request-go-to-changes)
	//  - git-pull-request-new-changes: $(git-pull-request-new-changes)
	//  - search-fuzzy: $(search-fuzzy)
	//  - dialog-error: $(dialog-error)
	//  - dialog-warning: $(dialog-warning)
	//  - dialog-info: $(dialog-info)
	//  - dialog-close: $(dialog-close)
	//  - tree-item-expanded: $(tree-item-expanded)
	//  - tree-filter-on-type-on: $(tree-filter-on-type-on)
	//  - tree-filter-on-type-off: $(tree-filter-on-type-off)
	//  - tree-filter-clear: $(tree-filter-clear)
	//  - tree-item-loading: $(tree-item-loading)
	//  - menu-selection: $(menu-selection)
	//  - menu-submenu: $(menu-submenu)
	//  - menubar-more: $(menubar-more)
	//  - scrollbar-button-left: $(scrollbar-button-left)
	//  - scrollbar-button-right: $(scrollbar-button-right)
	//  - scrollbar-button-up: $(scrollbar-button-up)
	//  - scrollbar-button-down: $(scrollbar-button-down)
	//  - toolbar-more: $(toolbar-more)
	//  - quick-input-back: $(quick-input-back)
	"terminal.integrated.tabs.defaultIcon": "terminal",

	// Controla a descrição do terminal, que aparece à direita do título. As variáveis são substituídas de acordo com o contexto:
	// - `${cwd}`: o diretório de trabalho atual do terminal
	// - `${cwdFolder}`: o diretório de trabalho atual do terminal, exibido para espaços de trabalho de várias raízes ou em um único espaço de trabalho raiz quando o valor difere do diretório de trabalho inicial. No Windows, isto só será exibido quando a integração do shell estiver ativada.
	// - `${workspaceFolder}`: o workspace no qual o terminal foi inicializado
	// - `${local}`: indica um terminal local em um workspace remoto
	// - `${process}`: o nome do processo de terminal
	// - `${separator}`: um separador condicional (” - “) que só será exibido quando cercado por variáveis com valores ou texto estático.
	// - `${sequence}`: o nome fornecido pelo processo ao terminal
	// - `${task}`: indica que este terminal está associado a uma tarefa
	"terminal.integrated.tabs.description": "${task}${separator}${local}${separator}${cwdFolder}",

	// Controla se os status da guia do terminal suportam animação (por exemplo, tarefas em andamento).
	"terminal.integrated.tabs.enableAnimation": true,

	// Controla se as guias de terminal são exibidas como uma lista no lado do terminal. Quando desabilitada, uma lista suspensa será exibida.
	"terminal.integrated.tabs.enabled": true,

	// Controla se a concentração do terminal de uma guia acontece com um clique duplo ou único.
	//  - singleClick: Focalizar o terminal ao clicar duas vezes em uma guia de terminal
	//  - doubleClick: Concentrar o terminal ao clicar duas vezes em uma guia de terminal
	"terminal.integrated.tabs.focusMode": "doubleClick",

	// Controla se a exibição de guias de terminal será ocultada em determinadas condições.
	//  - never: Nunca ocultar a exibição das guias do terminal
	//  - singleTerminal: Ocultar a visualização das guias do terminal quando houver apenas um único terminal aberto
	//  - singleGroup: Ocultar o modo de exibição das guias de terminal quando houver apenas um único grupo de terminal aberto
	"terminal.integrated.tabs.hideCondition": "singleTerminal",

	// Controla o local das guias de terminal, à esquerda ou à direita do(s) terminal(is) atual(is).
	//  - left: Mostrar o modo de exibição das guias do terminal à esquerda do terminal
	//  - right: Mostrar o modo de exibição das guias do terminal à direita do terminal
	"terminal.integrated.tabs.location": "right",

	// Separador usado por `terminal.integrated.tabs.title` e `terminal.integrated.tabs.title`.
	"terminal.integrated.tabs.separator": " - ",

	// Controla se os botões de divisão e eliminação do terminal são exibidos ao lado do novo botão do terminal.
	//  - always: Sempre mostrar as ações
	//  - singleTerminal: Mostrar as ações quando é o único terminal aberto
	//  - singleTerminalOrNarrow: Mostra as ações quando é o único terminal aberto ou quando as abas estão em seu estado estreito sem texto
	//  - never: Nunca mostrar as ações
	"terminal.integrated.tabs.showActions": "singleTerminalOrNarrow",

	// Mostra as informações de terminal ativas no modo de exibição, isso é particularmente útil quando o título dentro das guias não está visível.
	//  - always: Sempre mostrar o terminal ativo
	//  - singleTerminal: Mostrar o terminal ativo quando ele for o único terminal aberto
	//  - singleTerminalOrNarrow: Mostrar o terminal ativo quando ele for o único terminal aberto ou quando o modo de exibição de guias estiver em seu estado de texto restrito
	//  - never: Nunca mostrar o terminal ativo
	"terminal.integrated.tabs.showActiveTerminal": "singleTerminalOrNarrow",

	// Controla o título do terminal. As variáveis são substituídas de acordo com o contexto:
	// - `${cwd}`: o diretório de trabalho atual do terminal
	// - `${cwdFolder}`: o diretório de trabalho atual do terminal, exibido para espaços de trabalho de várias raízes ou em um único espaço de trabalho raiz quando o valor difere do diretório de trabalho inicial. No Windows, isto só será exibido quando a integração do shell estiver ativada.
	// - `${workspaceFolder}`: o workspace no qual o terminal foi inicializado
	// - `${local}`: indica um terminal local em um workspace remoto
	// - `${process}`: o nome do processo de terminal
	// - `${separator}`: um separador condicional (” - “) que só será exibido quando cercado por variáveis com valores ou texto estático.
	// - `${sequence}`: o nome fornecido pelo processo ao terminal
	// - `${task}`: indica que este terminal está associado a uma tarefa
	"terminal.integrated.tabs.title": "${process}",

	// Controla qual versão do unicode será usada ao avaliar a largura dos caracteres no terminal. Se um emoji ou outros caracteres largos não ocupar a quantidade correta de espaço ou backspace, excluindo demais ou muito pouco, talvez seja necessário tentar ajustar essa configuração.
	//  - 6: Versão 6 do Unicode. Esta é uma versão mais antiga que deve funcionar melhor em sistemas mais antigos.
	//  - 11: Versão 11 do Unicode. Esta versão fornece um suporte melhor em sistemas modernos que usam versões modernas do Unicode.
	"terminal.integrated.unicodeVersion": "11",

	// Controla se as distribuições do WSL são mostradas no menu suspenso do terminal
	"terminal.integrated.useWslProfiles": true,

	// Se deve ser usado o ConPTY para comunicação do processo de terminal do Windows (exige o número de build 18309 ou posteriores do Windows 10). Winpty será usado se isso for false.
	"terminal.integrated.windowsEnableConpty": true,

	// Uma cadeia de caracteres contendo todos os caracteres a serem considerados separadores de palavras ao clicar duas vezes para selecionar o recurso de palavra.
	"terminal.integrated.wordSeparators": " ()[]{}',\"`─‘’",

	// Controla se o modo de exibição de Problemas deve revelar os arquivos automaticamente ao abri-los.
	"problems.autoReveal": true,

	// Mostrar Erros & Avisos em arquivos e pastas.
	"problems.decorations.enabled": true,

	// Controla o modo de exibição padrão do modo de exibição Problemas.
	"problems.defaultViewMode": "tree",

	// Quando habilitado, mostra o problema atual na barra de status.
	"problems.showCurrentInStatus": false,

	// Controla a ordem em que os problemas são navegados.
	//  - severity: Navegar por problemas ordenados por severidade
	//  - position: Navegar por problemas ordenados por posição
	"problems.sortOrder": "severity",

	// Specifies where the indicators of the file changes annotations will be shown
	//  - gutter: Adds an indicator to the gutter
	//  - line: Adds a full-line highlight background color
	//  - overview: Adds an indicator to the scroll bar
	"gitlens.changes.locations": [
		"gutter",
		"line",
		"overview"
	],

	// Specifies how the file changes annotations will be toggled
	//  - file: Toggles each file individually
	//  - window: Toggles the window, i.e. all files at once
	"gitlens.changes.toggleMode": "file",

	// Habilitar/desabilitar trilhas de navegação.
	"breadcrumbs.enabled": true,

	// Controla se e como os caminhos de arquivo são mostrados no modo de exibição de trilhas.
	//  - on: Mostrar o caminho do arquivo no modo de exibição de trilhas.
	//  - off: Não mostrar o caminho do arquivo no modo de exibição estrutural.
	//  - last: Somente mostrar o último elemento do caminho do arquivo no modo de exibição de trilhas.
	"breadcrumbs.filePath": "on",

	// Renderizar itens de trilha com ícones.
	"breadcrumbs.icons": true,

	// Quando as trilhas habilitadas mostram símbolos `array`.
	"breadcrumbs.showArrays": true,

	// Quando as trilhas habilitadas mostram símbolos `boolean`.
	"breadcrumbs.showBooleans": true,

	// Quando as trilhas habilitadas mostram símbolos `class`.
	"breadcrumbs.showClasses": true,

	// Quando as trilhas habilitadas mostram símbolos `constant`.
	"breadcrumbs.showConstants": true,

	// Quando as trilhas habilitadas mostram símbolos `constructor`.
	"breadcrumbs.showConstructors": true,

	// Quando as trilhas habilitadas mostram símbolos `enumMember`.
	"breadcrumbs.showEnumMembers": true,

	// Quando as trilhas habilitadas mostram símbolos `enum`.
	"breadcrumbs.showEnums": true,

	// Quando as trilhas habilitadas mostram símbolos `event`.
	"breadcrumbs.showEvents": true,

	// Quando as trilhas habilitadas mostram símbolos `field`.
	"breadcrumbs.showFields": true,

	// Quando as trilhas habilitadas mostram símbolos `file`.
	"breadcrumbs.showFiles": true,

	// Quando as trilhas habilitadas mostram símbolos `function`.
	"breadcrumbs.showFunctions": true,

	// Quando as trilhas habilitadas mostram símbolos `interface`.
	"breadcrumbs.showInterfaces": true,

	// Quando as trilhas habilitadas mostram símbolos `key`.
	"breadcrumbs.showKeys": true,

	// Quando as trilhas habilitadas mostram símbolos `method`.
	"breadcrumbs.showMethods": true,

	// Quando as trilhas habilitadas mostram símbolos `module`.
	"breadcrumbs.showModules": true,

	// Quando as trilhas habilitadas mostram símbolos `namespace`.
	"breadcrumbs.showNamespaces": true,

	// Quando as trilhas habilitadas mostram símbolos `null`.
	"breadcrumbs.showNull": true,

	// Quando as trilhas habilitadas mostram símbolos `number`.
	"breadcrumbs.showNumbers": true,

	// Quando as trilhas habilitadas mostram símbolos `object`.
	"breadcrumbs.showObjects": true,

	// Quando as trilhas habilitadas mostram símbolos `operator`.
	"breadcrumbs.showOperators": true,

	// Quando as trilhas habilitadas mostram símbolos `package`.
	"breadcrumbs.showPackages": true,

	// Quando as trilhas habilitadas mostram símbolos `property`.
	"breadcrumbs.showProperties": true,

	// Quando as trilhas habilitadas mostram símbolos `string`.
	"breadcrumbs.showStrings": true,

	// Quando as trilhas habilitadas mostram símbolos `struct`.
	"breadcrumbs.showStructs": true,

	// Quando as trilhas habilitadas mostram símbolos `typeParameter`.
	"breadcrumbs.showTypeParameters": true,

	// Quando as trilhas habilitadas mostram símbolos `variable`.
	"breadcrumbs.showVariables": true,

	// Controla se e como os símbolos são mostrados no modo de exibição de trilhas.
	//  - on: Mostrar todos os símbolos na exibição trilhas.
	//  - off: Não mostrar símbolos no modo de exibição estrutural.
	//  - last: Somente mostrar o símbolo atual no modo de exibição de trilhas.
	"breadcrumbs.symbolPath": "on",

	// Controla como os símbolos são classificados no modo de exibição da estrutura do código de trilha.
	//  - position: Mostrar estrutura de tópicos do símbolo na ordem de posição do arquivo.
	//  - name: Mostrar estrutura de tópicos do símbolo em ordem alfabética.
	//  - type: Mostrar estrutura de tópicos do símbolo em ordem de tipo de símbolo.
	"breadcrumbs.symbolSortOrder": "position",

	// Specifies the age of the most recent change (in days) after which the file heatmap annotations will be cold rather than hot (i.e. will use `gitlens.heatmap.coldColor#` instead of `#gitlens.heatmap.hotColor`)
	"gitlens.heatmap.ageThreshold": 90,

	// Specifies the base color of the file heatmap annotations when the most recent change is older (cold) than the `gitlens.heatmap.ageThreshold` value
	"gitlens.heatmap.coldColor": "#0a60f6",

	// Specifies the whether to fade out older lines
	"gitlens.heatmap.fadeLines": true,

	// Specifies the base color of the file heatmap annotations when the most recent change is newer (hot) than the `gitlens.heatmap.ageThreshold` value
	"gitlens.heatmap.hotColor": "#f66a0a",

	// Specifies where the indicators of the file heatmap annotations will be shown
	//  - gutter: Adds an indicator to the gutter
	//  - line: Adds a full-line highlight background color
	//  - overview: Adds an indicator to the scroll bar
	"gitlens.heatmap.locations": [
		"gutter",
		"line",
		"overview"
	],

	// Specifies how the file heatmap annotations will be toggled
	//  - file: Toggles each file individually
	//  - window: Toggles the window, i.e. all files at once
	"gitlens.heatmap.toggleMode": "file",

	// Specifies whether to show avatar images instead of author initials and remote icons in the _Commit Graph_
	"gitlens.graph.avatars": true,

	// Specifies the order by which commits will be shown on the _Commit Graph_
	//  - date: Shows commits in reverse chronological order of the commit timestamp
	//  - author-date: Shows commits in reverse chronological order of the author timestamp
	//  - topo: Shows commits in reverse chronological order of the commit timestamp, but avoids intermixing multiple lines of history
	"gitlens.graph.commitOrdering": "date",

	// Specifies how absolute dates will be formatted in the _Commit Graph_. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for supported formats
	"gitlens.graph.dateFormat": null,

	// Specifies how dates will be displayed in the _Commit Graph_
	//  - relative: e.g. 1 day ago
	//  - absolute: e.g. July 25th, 2018 7:18pm
	"gitlens.graph.dateStyle": "relative",

	// Specifies the default number of items to show in the _Commit Graph_. Use 0 to specify no limit
	"gitlens.graph.defaultItemLimit": 500,

	// Specifies whether to highlight rows associated with the branch / tag when hovering over it in the _Commit Graph_
	"gitlens.graph.highlightRowsOnRefHover": true,

	// Specifies the number of additional items to fetch when paginating in the _Commit Graph_. Use 0 to specify no limit
	"gitlens.graph.pageItemLimit": 200,

	// Specifies the number of results to gather when searching in the _Commit Graph_. Use 0 to specify no limit
	"gitlens.graph.searchItemLimit": 100,

	// Specifies when to show the _Commit Details_ view for the selected row in the _Commit Graph_
	//  - false: Never shows the _Commit Details_ view automatically
	//  - open: Shows the _Commit Details_ view automatically when the _Commit Graph_ is first opened
	//  - selection: Shows the _Commit Details_ view automatically when selection changes in the _Commit Graph_
	"gitlens.graph.showDetailsView": "selection",

	// Specifies whether to show a ghost branch / tag when hovering over or selecting a row in the _Commit Graph_
	"gitlens.graph.showGhostRefsOnRowHover": true,

	// Specifies whether to show remote names on remote branches in the _Commit Graph_
	"gitlens.graph.showRemoteNames": false,

	// Specifies whether to show the _Commit Graph_ in the status bar
	"gitlens.graph.statusBar.enabled": true,

	// Specifies the limit on the how many commits can be queried for statistics in the Visual File History, because of rate limits. Only applies to virtual workspaces.
	"gitlens.visualHistory.queryLimit": 20,

	// Specifies how Git commits are displayed in the _Interactive Rebase Editor_
	//  - asc: Shows oldest commit first
	//  - desc: Shows newest commit first
	"gitlens.rebaseEditor.ordering": "desc",

	// Specifies whether to dismiss the _Git Command Palette_ when focus is lost (if not, press `ESC` to dismiss)
	"gitlens.gitCommands.closeOnFocusOut": true,

	// Specifies whether to match all or any commit message search patterns
	"gitlens.gitCommands.search.matchAll": false,

	// Specifies whether to match commit search patterns with or without regard to casing
	"gitlens.gitCommands.search.matchCase": false,

	// Specifies whether to match commit search patterns using regular expressions
	"gitlens.gitCommands.search.matchRegex": true,

	// Specifies whether to show the commit search results directly in the quick pick menu, in the Side Bar, or will be based on the context
	"gitlens.gitCommands.search.showResultsInSideBar": null,

	// Deprecated. This setting has been renamed to `gitlens.gitCommands.search.showResultsInSideBar`
	// 
	"gitlens.gitCommands.search.showResultsInView": null,

	// Specifies which (and when) Git commands will skip the confirmation step, using the format: `git-command-name:(menu|command)`
	//  - branch-create:command: Skips branch create confirmations when run from a command, e.g. a view action
	//  - branch-create:menu: Skips branch create confirmations when run from the Git Command Palette
	//  - co-authors:command: Skips co-author confirmations when run from a command, e.g. a view action
	//  - co-authors:menu: Skips co-author confirmations when run from the Git Command Palette
	//  - fetch:command: Skips fetch confirmations when run from a command, e.g. a view action
	//  - fetch:menu: Skips fetch confirmations when run from the Git Command Palette
	//  - pull:command: Skips pull confirmations when run from a command, e.g. a view action
	//  - pull:menu: Skips pull confirmations when run from the Git Command Palette
	//  - push:command: Skips push confirmations when run from a command, e.g. a view action
	//  - push:menu: Skips push confirmations when run from the Git Command Palette
	//  - stash-apply:command: Skips stash apply confirmations when run from a command, e.g. a view action
	//  - stash-apply:menu: Skips stash apply confirmations when run from the Git Command Palette
	//  - stash-pop:command: Skips stash pop confirmations when run from a command, e.g. a view action
	//  - stash-pop:menu: Skips stash pop confirmations when run from the Git Command Palette
	//  - stash-push:command: Skips stash push confirmations when run from a command, e.g. a view action
	//  - stash-push:menu: Skips stash push confirmations when run from the Git Command Palette
	//  - switch:command: Skips switch confirmations when run from a command, e.g. a view action
	//  - switch:menu: Skips switch confirmations when run from the Git Command Palette
	//  - tag-create:command: Skips tag create confirmations when run from a command, e.g. a view action
	//  - tag-create:menu: Skips tag create confirmations when run from the Git Command Palette
	"gitlens.gitCommands.skipConfirmations": [
		"fetch:command",
		"stash-push:command",
		"switch:command"
	],

	// Specifies how Git commands are sorted in the _Git Command Palette_
	//  - name: Sorts commands by name
	//  - usage: Sorts commands by last used date
	"gitlens.gitCommands.sortBy": "usage",

	// Se esta configuração for falsa, nenhuma telemetria será enviada, independentemente do valor da nova configuração. Preterido devido à combinação na configuração `telemetry.telemetryLevel`.
	// Habilite os relatórios de erro que serão coletados. Isso nos ajuda a melhorar a estabilidade. 
	// Essa opção requer a reinicialização para ter efeito.
	"telemetry.enableCrashReporter": true,

	// Se esta configuração for falsa, nenhuma telemetria será enviada, independentemente do valor da nova configuração. Preterido em favor da configuração `telemetry.telemetryLevel`.
	// Habilite os dados de diagnóstico que serão coletados. Isso nos ajuda a melhor entender como Visual Studio Code é executado e onde as melhorias precisam ser feitas. [Leia mais](https://go.microsoft.com/fwlink/?LinkId=786907) sobre o que coletamos e nossa política de privacidade.
	"telemetry.enableTelemetry": true,

	// 
	// Controla a telemetria Visual Studio Code, a telemetria de extensão internar e a telemetria de extensão de terceiros participantes. Algumas extensões de terceiros podem não respeitar essa configuração. Consulte a documentação da extensão específica para ter certeza. A telemetria nos ajuda a entender melhor o desempenho de Visual Studio Code, onde as melhorias precisam ser feitas e como os recursos estão sendo usados. Leia mais sobre os [dados coletados](https://aka.ms/vscode-telemetry) e nossa [política de privacidade](https://go.microsoft.com/fwlink/?LinkId=786907). Será necessário uma reinicialização completa do aplicativo para que as alterações do relatório de falhas entrem em vigor.
	// 
	// &nbsp;
	// 
	// A tabela a seguir descreve os dados enviados com cada configuração:
	// 
	// |       | Relatórios de Falhas | Telemetria de Erro | Dados de Uso |
	// |:------|:---------------------:|:---------------:|:--------------:|
	// | all   |            ✓          |        ✓        |        ✓       |
	// | error |            ✓          |        ✓        |        -       |
	// | crash |            ✓          |        -        |        -       |
	// | off   |            -          |        -        |        -       |
	// 
	// 
	// &nbsp;
	// 
	// ****Observação:*** se esta configuração estiver “desativada”, nenhuma telemetria será enviada independentemente de outras configurações de telemetria. Se essa configuração estiver definida como qualquer coisa, exceto “desativada”, e a telemetria estiver desabilitada com configurações preteridas, nenhuma telemetria será enviada.*
	// 
	//  - all: Envia dados de uso, erros e relatórios de falhas.
	//  - error: Envia relatórios gerais de telemetria e falhas de erros.
	//  - crash: Envia relatórios de falhas no nível do sistema operacional.
	//  - off: Desabilita toda a telemetria do produto.
	"telemetry.telemetryLevel": "all",

	// Specifies autolinks to external resources in commit messages. Use `<num>` as the variable for the reference number
	"gitlens.autolinks": null,

	// Specifies whether to enable rich integrations with any supported remote services
	"gitlens.integrations.enabled": true,

	// Specifies whether to allow guest access to GitLens features when using Visual Studio Live Share
	"gitlens.liveshare.allowGuestAccess": true,

	// Specifies the configuration of a partner integration
	"gitlens.partners": null,

	// Specifies custom remote services to be matched with Git remotes to detect custom domains for built-in remote services or provide support for custom remote services
	"gitlens.remotes": null,

	// Specifies whether to enable terminal links &mdash; autolinks in the integrated terminal to quickly jump to more details for commits, branches, tags, and more
	"gitlens.terminalLinks.enabled": true,

	// Renderizar Elementos de Estrutura de Tópicos com Ícones.
	"outline.icons": true,

	// Usar selos para Erros & Avisos.
	"outline.problems.badges": true,

	// Usar cores para Erros & Avisos.
	"outline.problems.colors": true,

	// Mostrar Erros & Avisos nos Elementos da Estrutura de Tópicos.
	"outline.problems.enabled": true,

	// Quando habilitada, a estrutura de tópicos mostra símbolos `array`.
	"outline.showArrays": true,

	// Quando habilitada, a estrutura de tópicos mostra símbolos `boolean`.
	"outline.showBooleans": true,

	// Quando habilitada, a estrutura de tópicos mostra símbolos `class`.
	"outline.showClasses": true,

	// Quando habilitada, a estrutura de tópicos mostra símbolos `constant`.
	"outline.showConstants": true,

	// Quando habilitada, a estrutura de tópicos mostra símbolos `constructor`.
	"outline.showConstructors": true,

	// Quando habilitada, a estrutura de tópicos mostra símbolos `enumMember`.
	"outline.showEnumMembers": true,

	// Quando habilitada, a estrutura de tópicos mostra símbolos `enum`.
	"outline.showEnums": true,

	// Quando habilitada, a estrutura de tópicos mostra símbolos `event`.
	"outline.showEvents": true,

	// Quando habilitada, a estrutura de tópicos mostra símbolos `field`.
	"outline.showFields": true,

	// Quando habilitada, a estrutura de tópicos mostra símbolos `file`.
	"outline.showFiles": true,

	// Quando habilitada, a estrutura de tópicos mostra símbolos `function`.
	"outline.showFunctions": true,

	// Quando habilitada, a estrutura de tópicos mostra símbolos `interface`.
	"outline.showInterfaces": true,

	// Quando habilitada, a estrutura de tópicos mostra símbolos `key`.
	"outline.showKeys": true,

	// Quando habilitada, a estrutura de tópicos mostra símbolos `method`.
	"outline.showMethods": true,

	// Quando habilitada, a estrutura de tópicos mostra símbolos `module`.
	"outline.showModules": true,

	// Quando habilitada, a estrutura de tópicos mostra símbolos `namespace`.
	"outline.showNamespaces": true,

	// Quando habilitada, a estrutura de tópicos mostra símbolos `null`.
	"outline.showNull": true,

	// Quando habilitada, a estrutura de tópicos mostra símbolos `number`.
	"outline.showNumbers": true,

	// Quando habilitada, a estrutura de tópicos mostra símbolos `object`.
	"outline.showObjects": true,

	// Quando habilitada, a estrutura de tópicos mostra símbolos `operator`.
	"outline.showOperators": true,

	// Quando habilitada, a estrutura de tópicos mostra símbolos `package`.
	"outline.showPackages": true,

	// Quando habilitada, a estrutura de tópicos mostra símbolos `property`.
	"outline.showProperties": true,

	// Quando habilitada, a estrutura de tópicos mostra símbolos `string`.
	"outline.showStrings": true,

	// Quando habilitada, a estrutura de tópicos mostra símbolos `struct`.
	"outline.showStructs": true,

	// Quando habilitada, a estrutura de tópicos mostra símbolos `typeParameter`.
	"outline.showTypeParameters": true,

	// Quando habilitada, a estrutura de tópicos mostra símbolos `variable`.
	"outline.showVariables": true,

	// Specifies how absolute dates will be formatted by default. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for supported formats
	"gitlens.defaultDateFormat": null,

	// Specifies the locale, a [BCP 47 language tag](https://en.wikipedia.org/wiki/IETF_language_tag#List_of_major_primary_language_subtags), to use for date formatting, defaults to the VS Code locale. Use `system` to follow the current system locale, or choose a specific locale, e.g `en-US` — US English, `en-GB` — British English, `de-DE` — German, 'ja-JP = Japanese, etc.
	"gitlens.defaultDateLocale": null,

	// Specifies how short absolute dates will be formatted by default. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for supported formats
	"gitlens.defaultDateShortFormat": null,

	// Specifies whether commit dates should use the authored or committed date
	//  - authored: Uses the date when the changes were authored (i.e. originally written)
	//  - committed: Uses the date when the changes were committed
	"gitlens.defaultDateSource": "authored",

	// Specifies how dates will be displayed by default
	//  - relative: e.g. 1 day ago
	//  - absolute: e.g. July 25th, 2018 7:18pm
	"gitlens.defaultDateStyle": "relative",

	// Specifies how times will be formatted by default. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for supported formats
	"gitlens.defaultTimeFormat": null,

	// Specifies which commands will be added to which menus
	"gitlens.menus": {
		"editor": {
			"blame": false,
			"clipboard": true,
			"compare": true,
			"history": false,
			"remote": false
		},
		"editorGroup": {
			"blame": true,
			"compare": true
		},
		"editorTab": {
			"clipboard": true,
			"compare": true,
			"history": true,
			"remote": true
		},
		"explorer": {
			"clipboard": true,
			"compare": true,
			"history": true,
			"remote": true
		},
		"scm": {
			"graph": true
		},
		"scmRepositoryInline": {
			"graph": true
		},
		"scmRepository": {
			"authors": true,
			"graph": false
		},
		"scmGroupInline": {
			"stash": true
		},
		"scmGroup": {
			"compare": true,
			"openClose": true,
			"stash": true
		},
		"scmItemInline": {},
		"scmItem": {
			"clipboard": true,
			"compare": true,
			"history": true,
			"remote": false,
			"stash": true
		}
	},

	// Specifies the keymap to use for GitLens shortcut keys
	//  - alternate: Adds an alternate set of shortcut keys that start with `Alt` (⌥ on macOS)
	//  - chorded: Adds a chorded set of shortcut keys that start with `Ctrl+Alt+G` (`⌥⌘G` on macOS)
	//  - none: No shortcut keys will be added
	"gitlens.keymap": "chorded",

	// Specifies the active GitLens mode, if any
	"gitlens.mode.active": "",

	// Specifies the active GitLens mode alignment in the status bar
	//  - left: Aligns to the left
	//  - right: Aligns to the right
	"gitlens.mode.statusBar.alignment": "right",

	// Specifies whether to provide the active GitLens mode in the status bar
	"gitlens.mode.statusBar.enabled": true,

	// Specifies the user-defined GitLens modes
	"gitlens.modes": {
		"zen": {
			"name": "Zen",
			"statusBarItemName": "Zen",
			"description": "for a zen-like experience, disables many visual features",
			"codeLens": false,
			"currentLine": false,
			"hovers": false,
			"statusBar": false
		},
		"review": {
			"name": "Review",
			"statusBarItemName": "Reviewing",
			"description": "for reviewing code, enables many visual features",
			"codeLens": true,
			"currentLine": true,
			"hovers": true
		}
	},

	// Recipe ID filter patterns. Either exact ids or patterns with '*' as the wild-card
	"boot-java.rewrite.recipe-filters": [
		"org.openrewrite.java.spring.boot2.SpringBoot2JUnit4to5Migration",
		"org.openrewrite.java.spring.boot2.SpringBoot2BestPractices",
		"org.openrewrite.java.spring.boot2.SpringBoot1To2Migration",
		"org.openrewrite.java.testing.junit5.JUnit5BestPractices",
		"org.openrewrite.java.testing.junit5.JUnit4to5Migration",
		"org.openrewrite.java.spring.boot2.UpgradeSpringBoot_2_6",
		"org.openrewrite.java.spring.boot3.UpgradeSpringBoot_3_0",
		"org.rewrite.java.security.*",
		"org.springframework.rewrite.test.*",
		"rewrite.test.*"
	],

	// Experimental reconciling for Java source based on Rewrite project
	"boot-java.rewrite.reconcile": false,

	// Recipes refactoring entire Maven project via commands
	"boot-java.rewrite.refactorings.on": true,

	// Java project output folders to scan for recipes
	"boot-java.rewrite.scan-dirs": [],

	// JAR and YAML files to scan for recipes, code actions, problem and quick fix descriptors
	"boot-java.rewrite.scan-files": [],

	// Enablement
	"boot-java.validation.java.boot2": "AUTO",

	// Unnecessary `@Autowired` over the only constructor
	"spring-boot.ls.problem.boot2.JAVA_AUTOWIRED_CONSTRUCTOR": "WARNING",

	// Use constrcutor parameter injection
	"spring-boot.ls.problem.boot2.JAVA_CONSTRUCTOR_PARAMETER_INJECTION": "IGNORE",

	// Use precise mapping annotation, i.e. '@GetMapping', '@PostMapping', etc.
	"spring-boot.ls.problem.boot2.JAVA_PRECISE_REQUEST_MAPPING": "HINT",

	// Public modifier on `@Bean` method. They no longer have to be public visibility to be usable by Spring.
	"spring-boot.ls.problem.boot2.JAVA_PUBLIC_BEAN_METHOD": "HINT",

	// `@SpringBootTest` and all test slice annotations already applies `@SpringExtension` as of Spring Boot 2.1.0.
	"spring-boot.ls.problem.boot2.JAVA_TEST_SPRING_EXTENSION": "WARNING",

	// Enablement
	"boot-java.validation.java.boot3": "AUTO",

	// Spring factories key not supported
	"spring-boot.ls.problem.boot3.FACTORIES_KEY_NOT_SUPPORTED": "ERROR",

	// Not registered as Bean
	"spring-boot.ls.problem.boot3.JAVA_BEAN_NOT_REGISTERED_IN_AOT": "WARNING",

	// 'BeanPostProcessor' behaviour is ignored in Spring 6 AOT
	"spring-boot.ls.problem.boot3.JAVA_BEAN_POST_PROCESSOR_IGNORED_IN_AOT": "WARNING",

	// Bean definition should have precise type for Spring 6 AOT
	"spring-boot.ls.problem.boot3.JAVA_CONCRETE_BEAN_TYPE": "WARNING",

	// Type no supported as of Spring Boot 3
	"spring-boot.ls.problem.boot3.JAVA_TYPE_NOT_SUPPORTED": "ERROR",

	// Property is marked as Deprecated
	"spring-boot.ls.problem.application-properties.PROP_DEPRECATED": "WARNING",

	// Multiple assignments to the same property value
	"spring-boot.ls.problem.application-properties.PROP_DUPLICATE_KEY": "ERROR",

	// Unexpected character found where a '.' or '[' was expected
	"spring-boot.ls.problem.application-properties.PROP_EXPECTED_DOT_OR_LBRACK": "ERROR",

	// Accessing a 'bean property' in a type that doesn't have properties (e.g. like String or Integer)
	"spring-boot.ls.problem.application-properties.PROP_INVALID_BEAN_NAVIGATION": "ERROR",

	// Accessing a named property in a type that doesn't provide a property accessor with that name
	"spring-boot.ls.problem.application-properties.PROP_INVALID_BEAN_PROPERTY": "ERROR",

	// Accessing a property using [] in a type that doesn't support that
	"spring-boot.ls.problem.application-properties.PROP_INVALID_INDEXED_NAVIGATION": "ERROR",

	// Found a '[' but no matching ']'
	"spring-boot.ls.problem.application-properties.PROP_NO_MATCHING_RBRACK": "ERROR",

	// Use of [..] navigation with non-integer value
	"spring-boot.ls.problem.application-properties.PROP_NON_INTEGER_IN_BRACKETS": "ERROR",

	// Syntax Error
	"spring-boot.ls.problem.application-properties.PROP_SYNTAX_ERROR": "ERROR",

	// Property-key not found in any configuration metadata on the project's classpath
	"spring-boot.ls.problem.application-properties.PROP_UNKNOWN_PROPERTY": "WARNING",

	// Expecting a value of a certain type, but value doesn't parse as such
	"spring-boot.ls.problem.application-properties.PROP_VALUE_TYPE_MISMATCH": "ERROR",

	// Property is marked as Deprecated(Error)
	"spring-boot.ls.problem.application-yaml.YAML_DEPRECATED_ERROR": "ERROR",

	// Property is marked as Deprecated(Warning)
	"spring-boot.ls.problem.application-yaml.YAML_DEPRECATED_WARNING": "WARNING",

	// A mapping node contains multiple entries for the same key
	"spring-boot.ls.problem.application-yaml.YAML_DUPLICATE_KEY": "ERROR",

	// Expecting a 'bean property' name but found something more complex
	"spring-boot.ls.problem.application-yaml.YAML_EXPECT_BEAN_PROPERTY_NAME": "ERROR",

	// Expecting a 'mapping' node but found something else
	"spring-boot.ls.problem.application-yaml.YAML_EXPECT_MAPPING": "ERROR",

	// Expecting a 'scalar' value but found something more complex.
	"spring-boot.ls.problem.application-yaml.YAML_EXPECT_SCALAR": "ERROR",

	// Found a 'mapping' node where a type that can't be treated as a 'property map' is expected
	"spring-boot.ls.problem.application-yaml.YAML_EXPECT_TYPE_FOUND_MAPPING": "ERROR",

	// Found a 'sequence' node where a non 'list-like' type is expected
	"spring-boot.ls.problem.application-yaml.YAML_EXPECT_TYPE_FOUND_SEQUENCE": "ERROR",

	// Accessing a named property in a type that doesn't provide a property accessor with that name
	"spring-boot.ls.problem.application-yaml.YAML_INVALID_BEAN_PROPERTY": "ERROR",

	// This key contains special characters and should probably be escaped by surrounding it with '[]'
	"spring-boot.ls.problem.application-yaml.YAML_SHOULD_ESCAPE": "WARNING",

	// Error parsing the input using snakeyaml
	"spring-boot.ls.problem.application-yaml.YAML_SYNTAX_ERROR": "ERROR",

	// Property-key not found in the configuration metadata on the project's classpath
	"spring-boot.ls.problem.application-yaml.YAML_UNKNOWN_PROPERTY": "WARNING",

	// Expecting a value of a certain type, but value doesn't parse as such
	"spring-boot.ls.problem.application-yaml.YAML_VALUE_TYPE_MISMATCH": "ERROR",

	// Enablement
	"boot-java.validation.spel.on": "ON",

	// SpEL parser raised a ParseException
	"spring-boot.ls.problem.spel.JAVA_SPEL_EXPRESSION_SYNTAX": "ERROR",

	// Specifies the length of abbreviated commit SHAs
	"gitlens.advanced.abbreviatedShaLength": 7,

	// Specifies whether to copy full or abbreviated commit SHAs to the clipboard. Abbreviates to the length of `gitlens.advanced.abbreviatedShaLength`.
	"gitlens.advanced.abbreviateShaOnCopy": false,

	// Specifies additional arguments to pass to the `git blame` command
	"gitlens.advanced.blame.customArguments": null,

	// Specifies the time (in milliseconds) to wait before re-blaming an unsaved document after an edit. Use 0 to specify an infinite wait
	"gitlens.advanced.blame.delayAfterEdit": 5000,

	// Specifies the maximum document size (in lines) allowed to be re-blamed after an edit while still unsaved. Use 0 to specify no maximum
	"gitlens.advanced.blame.sizeThresholdAfterEdit": 5000,

	// Specifies whether git output will be cached — changing the default is not recommended
	"gitlens.advanced.caching.enabled": true,

	// Specifies the order by which commits will be shown. If unspecified, commits will be shown in reverse chronological order
	//  - null: Shows commits in reverse chronological order
	//  - date: Shows commits in reverse chronological order of the commit timestamp
	//  - author-date: Shows commits in reverse chronological order of the author timestamp
	//  - topo: Shows commits in reverse chronological order of the commit timestamp, but avoids intermixing multiple lines of history
	"gitlens.advanced.commitOrdering": null,

	// Specifies an optional external diff tool to use when comparing files. Must be a configured [Git difftool](https://git-scm.com/docs/git-config#Documentation/git-config.txt-difftool).
	"gitlens.advanced.externalDiffTool": null,

	// Specifies an optional external diff tool to use when comparing directories. Must be a configured [Git difftool](https://git-scm.com/docs/git-config#Documentation/git-config.txt-difftool).
	"gitlens.advanced.externalDirectoryDiffTool": null,

	// Specifies the maximum number of items to show in a list. Use 0 to specify no maximum
	"gitlens.advanced.maxListItems": 200,

	// Specifies the maximum number of items to show in a search. Use 0 to specify no maximum
	"gitlens.advanced.maxSearchItems": 200,

	// Specifies which messages should be suppressed
	"gitlens.advanced.messages": {
		"suppressCommitHasNoPreviousCommitWarning": false,
		"suppressCommitNotFoundWarning": false,
		"suppressCreatePullRequestPrompt": false,
		"suppressDebugLoggingWarning": false,
		"suppressFileNotUnderSourceControlWarning": false,
		"suppressGitDisabledWarning": false,
		"suppressGitMissingWarning": false,
		"suppressGitVersionWarning": false,
		"suppressLineUncommittedWarning": false,
		"suppressNoRepositoryWarning": false,
		"suppressRebaseSwitchToTextWarning": false,
		"suppressIntegrationDisconnectedTooManyFailedRequestsWarning": false,
		"suppressIntegrationRequestFailed500Warning": false,
		"suppressIntegrationRequestTimedOutWarning": false
	},

	// Specifies whether to dismiss quick pick menus when focus is lost (if not, press `ESC` to dismiss)
	"gitlens.advanced.quickPick.closeOnFocusOut": true,

	// Specifies how many folders deep to search for repositories. Defaults to `git.repositoryScanMaxDepth`
	"gitlens.advanced.repositorySearchDepth": null,

	// Specifies the amount (percent) of similarity a deleted and added file pair must have to be considered a rename
	"gitlens.advanced.similarityThreshold": null,

	// Deprecated. This setting is no longer used
	// Deprecated. This setting is no longer used
	"gitlens.advanced.useSymmetricDifferenceNotation": null,

	// Specifies whether to ignore whitespace when comparing revisions during blame operations
	"gitlens.blame.ignoreWhitespace": false,

	// Specifies debug mode
	"gitlens.debug": false,

	// Specifies whether to attempt to detect nested repositories when opening files
	"gitlens.detectNestedRepositories": false,

	// Enable/Disable Java VM validation
	"spring-boot.ls.checkJVM": true,

	// Max JVM heap value, passed via -Xmx argument when launching spring-boot-language-server JVM process.
	"spring-boot.ls.java.heap": "",

	// Override JAVA_HOME used for launching the spring-boot-language-server JVM process.
	"spring-boot.ls.java.home": "",

	// Additional 'user defined' VM args to pass to the language server process.
	"spring-boot.ls.java.vmargs": [],

	// The path of a file to write language server logs. If not set or null, then logs are discarded.
	"spring-boot.ls.logfile": "",

	// Experimental. Controla se a Exibição de linha do tempo carregará a próxima página de itens quando você rolar até o final da lista.
	"timeline.pageOnScroll": false,

	// O número de itens a serem mostrados na Exibição de linha do tempo por padrão e ao carregar mais itens. A configuração como `null` (o padrão) escolherá automaticamente um tamanho de página com base na área visível da Exibição de linha do tempo.
	"timeline.pageSize": null,

	// Definir configurações que serão substituídas pela ansible linguagem.
	"[ansible]":  {
		"gitlens.codeLens.scopes": [
				"document"
		]
	},

	// Definir configurações que serão substituídas pela azure-pipelines linguagem.
	"[azure-pipelines]":  {
		"gitlens.codeLens.scopes": [
				"document"
		]
	},

	// Definir configurações que serão substituídas pela css linguagem.
	"[css]":  {
		"editor.suggest.insertMode": "replace",
		"gitlens.codeLens.scopes": [
				"document"
		]
	},

	// Definir configurações que serão substituídas pela dockercompose linguagem.
	"[dockercompose]":  {
		"editor.insertSpaces": true,
		"editor.tabSize": 2,
		"editor.autoIndent": "advanced"
	},

	// Definir configurações que serão substituídas pela dockerfile linguagem.
	"[dockerfile]":  {
		"editor.quickSuggestions": {
				"strings": true
		}
	},

	// Definir configurações que serão substituídas pela git-commit linguagem.
	"[git-commit]":  {
		"editor.rulers": [
				72
		],
		"workbench.editor.restoreViewState": false
	},

	// Definir configurações que serão substituídas pela git-rebase linguagem.
	"[git-rebase]":  {
		"workbench.editor.restoreViewState": false
	},

	// Definir configurações que serão substituídas pela go linguagem.
	"[go]":  {
		"editor.insertSpaces": false
	},

	// Definir configurações que serão substituídas pela handlebars linguagem.
	"[handlebars]":  {
		"editor.suggest.insertMode": "replace"
	},

	// Definir configurações que serão substituídas pela html linguagem.
	"[html]":  {
		"editor.suggest.insertMode": "replace",
		"gitlens.codeLens.scopes": [
				"document"
		]
	},

	// Definir configurações que serão substituídas pela java linguagem.
	"[java]":  {
		"editor.suggest.snippetsPreventQuickSuggestions": false
	},

	// Definir configurações que serão substituídas pela javascript linguagem.
	"[javascript]":  {
		"editor.maxTokenizationLineLength": 2500
	},

	// Definir configurações que serão substituídas pela json linguagem.
	"[json]":  {
		"editor.quickSuggestions": {
				"strings": true
		},
		"editor.suggest.insertMode": "replace",
		"gitlens.codeLens.scopes": [
				"document"
		]
	},

	// Definir configurações que serão substituídas pela jsonc linguagem.
	"[jsonc]":  {
		"editor.quickSuggestions": {
				"strings": true
		},
		"editor.suggest.insertMode": "replace",
		"gitlens.codeLens.scopes": [
				"document"
		]
	},

	// Definir configurações que serão substituídas pela less linguagem.
	"[less]":  {
		"editor.suggest.insertMode": "replace",
		"gitlens.codeLens.scopes": [
				"document"
		]
	},

	// Definir configurações que serão substituídas pela makefile linguagem.
	"[makefile]":  {
		"editor.insertSpaces": false
	},

	// Definir configurações que serão substituídas pela markdown linguagem.
	"[markdown]":  {
		"editor.unicodeHighlight.ambiguousCharacters": false,
		"editor.unicodeHighlight.invisibleCharacters": false,
		"editor.wordWrap": "on",
		"editor.quickSuggestions": {
				"comments": "off",
				"strings": "off",
				"other": "off"
		}
	},

	// Definir configurações que serão substituídas pela plaintext linguagem.
	"[plaintext]":  {
		"editor.unicodeHighlight.ambiguousCharacters": false,
		"editor.unicodeHighlight.invisibleCharacters": false
	},

	// Definir configurações que serão substituídas pela postcss linguagem.
	"[postcss]":  {
		"gitlens.codeLens.scopes": [
				"document"
		]
	},

	// Definir configurações que serão substituídas pela powershell linguagem.
	"[powershell]":  {
		"debug.saveBeforeStart": "nonUntitledEditorsInActiveGroup",
		"editor.semanticHighlighting.enabled": false,
		"editor.wordSeparators": "`~!@#$%^&*()=+[{]}\\|;:'\",.<>/?"
	},

	// Definir configurações que serão substituídas pela python linguagem.
	"[python]":  {
		"gitlens.codeLens.symbolScopes": [
				"!Module"
		],
		"editor.wordBasedSuggestions": false
	},

	// Definir configurações que serão substituídas pela scss linguagem.
	"[scss]":  {
		"editor.suggest.insertMode": "replace",
		"gitlens.codeLens.scopes": [
				"document"
		]
	},

	// Definir configurações que serão substituídas pela search-result linguagem.
	"[search-result]":  {
		"editor.lineNumbers": "off"
	},

	// Definir configurações que serão substituídas pela shellscript linguagem.
	"[shellscript]":  {
		"files.eol": "\n"
	},

	// Definir configurações que serão substituídas pela stylus linguagem.
	"[stylus]":  {
		"gitlens.codeLens.scopes": [
				"document"
		]
	},

	// Definir configurações que serão substituídas pela vue linguagem.
	"[vue]":  {
		"gitlens.codeLens.scopes": [
				"document"
		]
	},

	// Definir configurações que serão substituídas pela xml linguagem.
	"[xml]":  {
		"editor.autoClosingBrackets": "never",
		"files.trimFinalNewlines": true
	},

	// Definir configurações que serão substituídas pela xsl linguagem.
	"[xsl]":  {
		"editor.autoClosingBrackets": "never",
		"files.trimFinalNewlines": true
	},

	// Definir configurações que serão substituídas pela yaml linguagem.
	"[yaml]":  {
		"editor.insertSpaces": true,
		"editor.tabSize": 2,
		"editor.autoIndent": "advanced",
		"gitlens.codeLens.scopes": [
				"document"
		]
	},

	// Deprecated. Use the specific setting for each audio cue instead (`audioCues.*`).
	// 
	"audioCues.enabled": null,

	// Reproduz um som quando a linha ativa tem um ponto de interrupção.
	//  - auto: Habilitar dicas de áudio quando um leitor de tela estiver conectado.
	//  - on: Habilitar dica de áudio.
	//  - off: Desabilitar as dicas de áudio.
	"audioCues.lineHasBreakpoint": "auto",

	// Reproduz um som quando a linha ativa tem um erro.
	//  - auto: Habilitar dicas de áudio quando um leitor de tela estiver conectado.
	//  - on: Habilitar dica de áudio.
	//  - off: Desabilitar as dicas de áudio.
	"audioCues.lineHasError": "auto",

	// Reproduz um som quando a linha ativa tem uma área dobrada que pode ser desdobrada.
	//  - auto: Habilitar dicas de áudio quando um leitor de tela estiver conectado.
	//  - on: Habilitar dica de áudio.
	//  - off: Desabilitar as dicas de áudio.
	"audioCues.lineHasFoldedArea": "auto",

	// Reproduz um som quando a linha ativa tem uma sugestão embutida.
	//  - auto: Habilitar dicas de áudio quando um leitor de tela estiver conectado.
	//  - on: Habilitar dica de áudio.
	//  - off: Desabilitar as dicas de áudio.
	"audioCues.lineHasInlineSuggestion": "auto",

	// Reproduz um som quando a linha ativa tem um aviso.
	//  - auto: Habilitar dicas de áudio quando um leitor de tela estiver conectado.
	//  - on: Habilitar dica de áudio.
	//  - off: Desabilitar as dicas de áudio.
	"audioCues.lineHasWarning": "off",

	// Reproduz um som ao tentar ler uma linha com dicas embutidas que não tenhas estas dicas.
	//  - auto: Habilitar dicas de áudio quando um leitor de tela estiver conectado.
	//  - on: Habilitar dica de áudio.
	//  - off: Desabilitar as dicas de áudio.
	"audioCues.noInlayHints": "auto",

	// Reproduz um som quando o depurador parou em um ponto de interrupção.
	//  - auto: Habilitar dicas de áudio quando um leitor de tela estiver conectado.
	//  - on: Habilitar dica de áudio.
	//  - off: Desabilitar as dicas de áudio.
	"audioCues.onDebugBreak": "auto",

	// Reproduz um som quando uma tarefa termina.
	//  - auto: Habilitar dicas de áudio quando um leitor de tela estiver conectado.
	//  - on: Habilitar dica de áudio.
	//  - off: Desabilitar as dicas de áudio.
	"audioCues.taskEnded": "auto",

	// Reproduz um som quando as correções rápidas de um terminal estão disponíveis
	//  - auto: Habilitar dicas de áudio quando um leitor de tela estiver conectado.
	//  - on: Habilitar dica de áudio.
	//  - off: Desabilitar as dicas de áudio.
	"audioCues.terminalQuickFix": "auto",

	// O volume das dicas de áudio em porcentagem (0-100).
	"audioCues.volume": 70,

	// Quando habilitada, novos processos em execução são detectados e as portas nas quais eles escutam são encaminhadas automaticamente. Desabilitar esta configuração não impedirá que todas as portas sejam encaminhadas. Mesmo quando desabilitadas, as extensões ainda poderão fazer com que as portas sejam encaminhadas, e a abertura de alguns URLs ainda fará com que as portas sejam encaminhadas.
	"remote.autoForwardPorts": true,

	// Define a origem da qual as portas são encaminhadas automaticamente quando `remote.autoForwardPorts` é verdadeiro. Em controles remotos Windows e Mac, a opção `process` não tem efeito e `output` será usado. Requer uma recarga para ter efeito.
	//  - process: As portas serão encaminhadas automaticamente quando descobertas pela inspeção dos processos que forem iniciados e incluírem uma porta.
	//  - output: As portas serão encaminhadas automaticamente quando descobertas pela leitura da saída do terminal e da depuração. Nem todos os processos que usam portas serão impressos no terminal integrado ou no console de depuração, portanto algumas portas serão perdidas. As portas encaminhadas com base na saída não serão "revertidas" até a recarga ou até que a porta seja fechada pelo usuário na exibição Portas.
	"remote.autoForwardPortsSource": "process",

	// Quando ativado, as extensões são baixadas localmente e instaladas no local remoto.
	"remote.downloadExtensionsLocally": false,

	// Substituir o tipo de uma extensão. As extensões `ui` são instaladas e executadas no computador local, enquanto as extensões `workspace` são executadas no repositório remoto. Ao substituir o tipo padrão de uma extensão usando essa configuração, você deve especificar se essa extensão deve ser instalada e habilitada local ou remotamente.
	"remote.extensionKind": {
		"pub.name": [
			"ui"
		]
	},

	// Especifica o nome do host local que será usado para o encaminhamento de porta.
	"remote.localPortHost": "localhost",

	// Defina as propriedades padrão que são aplicadas a todas as portas que não obtêm propriedades da configuração `remote.portsAttributes`. Por exemplo:
	// 
	// ```
	// {
	//   "onAutoForward": "ignore"
	// }
	// ```
	"remote.otherPortsAttributes": {},

	// Definir as propriedades que são aplicadas quando um número de porta específico é encaminhado. Por exemplo:
	// 
	// 
	// ```"3000": {
	//   "label": "Application"
	// },
	// "40000-55000": {
	//  "onAutoForward": "ignore"
	// },
	// ".+\\/server.js": {
	//  "onAutoForward": "openPreview"
	// }
	// ```
	"remote.portsAttributes": {
		"443": {
			"protocol": "https"
		},
		"8443": {
			"protocol": "https"
		}
	},

	// Restaura as portas que você encaminhou em um espaço de trabalho.
	"remote.restoreForwardedPorts": true,

	// 
	//  - smart: Usa o algoritmo de comparação padrão.
	//  - experimental: Usa um algoritmo de comparação experimental.
	"mergeEditor.diffAlgorithm": "smart",

	// Uma matriz de linguagens na qual as abreviações Emmet não devem ser expandidas.
	"emmet.excludeLanguages": [
		"markdown"
	],

	// Uma matriz de caminhos, em que cada caminho pode conter Emmet syntaxProfiles e/ou arquivos de Snippet.
	// No caso de conflitos, os perfis/snippets de caminhos posteriores substituirão os caminhos anteriores.
	// Consulte https://code.visualstudio.com/docs/editor/emmet para obter mais informações e um arquivo de snippet de exemplo.
	"emmet.extensionsPath": [],

	// Habilitar as abreviações do Emmet em linguagens sem suporte por padrão. Adicione um mapeamento aqui entre a linguagem e a linguagem compatível com o Emmet.
	//  Por exemplo: `{"vue-html": "html", "javascript": "javascriptreact"}`
	"emmet.includeLanguages": {},

	// Quando esta opção está definida como `false`, o arquivo inteiro é analisado para determinar se a posição atual é válida para expandir as abreviações do Emmet. Quando definida como `true`, é analisado somente o conteúdo próximo da posição atual nos arquivos CSS/SCSS/Less.
	"emmet.optimizeStylesheetParsing": true,

	// Preferências usadas para modificar o comportamento de algumas ações e resolvedores do Emmet.
	"emmet.preferences": {},

	// Mostra possíveis abreviações do Emmet como sugestões. Não aplicável em folhas de estilos ou quando emmet.showExpandedAbbreviation está definido como `"never"`.
	"emmet.showAbbreviationSuggestions": true,

	// Mostra abreviações do Emmet expandidas como sugestões.
	// A opção `"inMarkupAndStylesheetFilesOnly"` aplica-se a html, haml, jade, slim, xml, xsl, css, scss, sass, less e stylus. 
	// A opção `"always"` aplica-se a todas as partes do arquivo, independentemente da marcação/css.
	"emmet.showExpandedAbbreviation": "always",

	// Se `true`, as sugestões do Emmet serão mostradas como snippets que permitem que você as ordene de acordo com a configuração `editor.snippetSuggestions`.
	"emmet.showSuggestionsAsSnippets": false,

	// Definir o perfil para a sintaxe especificada ou usar seu próprio perfil com regras específicas.
	"emmet.syntaxProfiles": {},

	// Quando habilitadas, as abreviações do Emmet são expandidas ao pressionar TAB.
	"emmet.triggerExpansionOnTab": false,

	// Se `true`, o Emmet usará conclusões embutidas para sugerir expansões. Para evitar que o provedor de item de conclusão não embutido apareça com tanta frequência enquanto essa configuração for `true`, mude `editor.quickSuggestions` para `inline` ou `off` para o item `other`.
	"emmet.useInlineCompletions": false,

	// Variáveis a serem usadas em snippets do Emmet.
	"emmet.variables": {},

	// Controla se o envio forçado por push (com ou sem concessão) está habilitado.
	"git.allowForcePush": false,

	// Controla se as confirmações sem executar ganchos pre-commit e commit-msg são permitidas.
	"git.allowNoVerifyCommit": false,

	// Sempre mostrar o grupo de recursos Alterações em Etapas.
	"git.alwaysShowStagedChangesResourceGroup": false,

	// Controla o sinalizador de aprovação para todas as confirmações.
	"git.alwaysSignOff": false,

	// Quando esta opção estiver definida como true, os commits serão buscados automaticamente no repositório remoto padrão do repositório do Git atual. Quando ela estiver definida como `all` os commits serão buscados de todos os repositórios remotos.
	"git.autofetch": false,

	// Duração em segundos entre cada busca automática de git, quando `git.autofetch` está habilitado.
	"git.autofetchPeriod": 180,

	// Se a atualização automática está habilitada.
	"git.autorefresh": true,

	// Configura quando os repositórios devem ser detectados automaticamente.
	//  - true: Examinar as duas subpastas da pasta aberta no momento e das pastas pai de arquivos abertos.
	//  - false: Desabilitar verificação automática do repositório.
	//  - subFolders: Examinar subpastas da pasta aberta no momento.
	//  - openEditors: Examinar pastas pai de arquivos abertos.
	"git.autoRepositoryDetection": true,

	// Efetuar stash das alterações antes de acioná-las e restaurá-las após o êxito.
	"git.autoStash": false,

	// Prefixo usado ao criar um novo branch.
	"git.branchPrefix": "",

	// Lista de branches protegidos. Por padrão, um prompt é mostrado antes que as alterações sejam confirmadas em um branch protegido. O prompt pode ser controlado usando a configuração `git.branchProtectionPrompt`.
	"git.branchProtection": [],

	// Controla se um prompt está sendo usado antes que as alterações sejam confirmadas em um branch protegido.
	//  - alwaysCommit: Sempre faça commit nas alterações no branch protegido.
	//  - alwaysCommitToNewBranch: Sempre fazer commit nas alterações em um novo branch.
	//  - alwaysPrompt: Sempre solicitar antes que as alterações sejam confirmadas em um branch protegido.
	"git.branchProtectionPrompt": "alwaysPrompt",

	// Lista de dicionários usados para o nome do branch gerado aleatoriamente. Cada valor representa o dicionário usado para gerar o segmento do nome da ramificação. Dicionários suportados: `adjetivos`, `animais`, `cores` e `números`.
	//  - adjectives: Um adjetivo aleatório
	//  - animals: Um nome de animal aleatório
	//  - colors: Um nome de cor aleatório
	//  - numbers: Um número aleatório entre 100 e 999
	"git.branchRandomName.dictionary": [
		"adjectives",
		"animals"
	],

	// Controla se um nome aleatório é gerado ao criar um novo branch.
	"git.branchRandomName.enable": false,

	// Controla a ordem de classificação de ramificações.
	"git.branchSortOrder": "committerdate",

	// Uma expressão regular para validar novos nomes de branch.
	"git.branchValidationRegex": "",

	// O caractere para substituir o espaço em branco em novos nomes de branch e para separar segmentos de um nome de branch gerado aleatoriamente.
	"git.branchWhitespaceChar": "-",

	// Controla o tipo de referências do Git que são listadas ao executar `Checkout to...`.
	//  - local: Branches locais
	//  - tags: Tags
	//  - remote: Branches remotos
	"git.checkoutType": [
		"local",
		"remote",
		"tags"
	],

	// Controla se o editor de comparação deve ser fechado automaticamente quando as alterações são ocultadas, confirmadas, descartadas, preparadas ou não.
	"git.closeDiffOnOperation": false,

	// Lista de comandos git (por exemplo: commit, push) que teriam seu 'stdout' registrado no [git output](command:git.showOutput). Se o comando git tiver um gancho do lado do cliente configurado, o 'stdout' do gancho do lado do cliente também será registrado no [git output](command:git.showOutput).
	"git.commandsToLog": [],

	// Sempre confirmar a criação de confirmações vazias para o comando 'Git: Commit Empty'.
	"git.confirmEmptyCommits": true,

	// Controla se é necessário solicitar confirmação antes de forçar o envio por push.
	"git.confirmForcePush": true,

	// Controla se deve solicitar confirmação antes de confirmar sem verificação.
	"git.confirmNoVerifyCommit": true,

	// Confirmar antes de sincronizar os repositórios git.
	"git.confirmSync": true,

	// Controla o selo da contagem de Git.
	//  - all: Contar todas as alterações.
	//  - tracked: Contar somente as alterações controladas.
	//  - off: Desligar o contador.
	"git.countBadge": "all",

	// Controla se o Git contribui com cores e selos para o Explorador e para a exibição Editores Abertos.
	"git.decorations.enabled": true,

	// A localização padrão para clonar um repositório git.
	"git.defaultCloneDirectory": null,

	// Controla se os submódulos git devem ser detectados automaticamente.
	"git.detectSubmodules": true,

	// Controla o limite de submódulos git detectados.
	"git.detectSubmodulesLimit": 10,

	// Habilita a assinatura de confirmação com GPG ou X.509.
	"git.enableCommitSigning": false,

	// Se o Git está habilitado.
	"git.enabled": true,

	// Confirmar todas as alterações quando não houver alterações preparadas.
	"git.enableSmartCommit": false,

	// Controla se o comando de sincronização do Git aparece na barra de status.
	"git.enableStatusBarSync": true,

	// Quando habilitado, busque todas as ramificações efetuando pull. Caso contrário, busque apenas a atual.
	"git.fetchOnPull": false,

	// Seguir as marcas de envio de tudo por push ao executar o comando de sincronização.
	"git.followTagsWhenSync": false,

	// This setting is now deprecated, please use `github.gitAuthentication` instead.
	// 
	"git.githubAuthentication": null,

	// Lista de repositórios git a serem ignorados.
	"git.ignoredRepositories": [],

	// Ignora o aviso de Git herdado.
	"git.ignoreLegacyWarning": false,

	// Ignora o aviso quando há muitas alterações em um repositório.
	"git.ignoreLimitWarning": false,

	// Ignora o aviso quando o Git está ausente.
	"git.ignoreMissingGitWarning": false,

	// Ignora o aviso quando parece que a base do branch pode ter sido trocada ao efetuar pull.
	"git.ignoreRebaseWarning": false,

	// Ignorar as modificações em submódulos na árvore de arquivos.
	"git.ignoreSubmodules": false,

	// Ignora o aviso quando as versões 2.25 – 2.26 do Git estão instaladas no Windows.
	"git.ignoreWindowsGit27Warning": false,

	// Controla quando mostrar a validação de entrada da mensagem de confirmação.
	"git.inputValidation": "warn",

	// Controla o limite de tamanho da mensagem de confirmação para mostrar um aviso.
	"git.inputValidationLength": 72,

	// Controla o limite de tamanho do assunto da mensagem de confirmação para mostrar um aviso. Remova a definição dele para herdar o valor de `config.inputValidationLength`.
	"git.inputValidationSubjectLength": 50,

	// Especifica a quantidade de informações (se houver) para registrar no [git output](command:git.showOutput).
	//  - Trace: Registrar todas as informações
	//  - Debug: Registrar apenas depuração, informações, avisos, erros e informações críticas
	//  - Info: Registrar apenas informações, avisos, erros e informações críticas
	//  - Warning: Registrar apenas avisos, erros e informações críticas
	//  - Error: Erro somente de log e informações críticas
	//  - Critical: Registrar somente informações críticas
	//  - Off: Não registrar nada
	"git.logLevel": "Info",

	// Abra o editor de mesclagem para arquivos que estão atualmente em conflito.
	"git.mergeEditor": false,

	// Controla se um repositório deve ser aberto automaticamente após a clonagem.
	//  - always: Sempre abrir o repositório na janela atual.
	//  - alwaysNewWindow: Sempre abrir o repositório em uma nova janela.
	//  - whenNoFolderOpen: Abrir somente na janela atual quando não for aberta nenhuma pasta.
	//  - prompt: Sempre solicitar uma ação.
	"git.openAfterClone": "prompt",

	// Controla se o editor de comparação deve ser aberto ao clicar em uma alteração. Caso contrário, o editor regular será aberto.
	"git.openDiffOnClick": true,

	// Caminho e nome de arquivo do executável git, por exemplo, `C:\Program Files\Git\bin\git.exe` (Windows). Isso também pode ser uma matriz de valores de cadeia de caracteres contendo vários caminhos para pesquisar.
	"git.path": null,

	// Execute um comando git após um commit bem-sucedido.
	//  - none: Não executar nenhum comando após uma confirmação.
	//  - push: Execute 'git push' após um commit bem-sucedido.
	//  - sync: Execute 'git pull' e 'git push' após um commit bem-sucedido.
	"git.postCommitCommand": "none",

	// Controla se o Git deve verificar arquivos não salvos antes de confirmar.
	//  - always: Verificar se há arquivos não salvos.
	//  - staged: Verificar somente os arquivos preparados não salvos.
	//  - never: Desabilitar essa verificação.
	"git.promptToSaveFilesBeforeCommit": "always",

	// Controla se o Git deve verificar se há arquivos não salvos antes de fazer stash das alterações.
	//  - always: Verificar se há arquivos não salvos.
	//  - staged: Verificar somente os arquivos preparados não salvos.
	//  - never: Desabilitar esta verificação.
	"git.promptToSaveFilesBeforeStash": "always",

	// Fazer a remoção durante a busca.
	"git.pruneOnFetch": false,

	// Controla se uma ramificação que não possui commits de saída é avançada antes do check-out.
	"git.pullBeforeCheckout": false,

	// Buscar todas as marcas ao efetuar pull.
	"git.pullTags": true,

	// Forçar o git a usar a troca de base ao executar o comando de sincronização.
	"git.rebaseWhenSync": false,

	// Lembre-se do último comando git executado após um commit.
	"git.rememberPostCommitCommand": false,

	// Lista de pastas ignoradas durante a verificação de repositórios Git quando '#git.autoRepositoryDetection#' está definido como 'true' ou 'subFolders'.
	"git.repositoryScanIgnoredFolders": [
		"node_modules"
	],

	// Controla a profundidade usada ao verificar as pastas do workspace para repositórios Git quando `git.autoRepositoryDetection` está definido como `true` ou` subFolders`. Pode ser definido como `-1` para nenhum limite.
	"git.repositoryScanMaxDepth": 1,

	// Controla se a configuração explícita do usuário do Git deve ser exigida ou se o Git pode adivinhar a configuração quando ela estiver ausente.
	"git.requireGitUserConfig": true,

	// Lista de caminhos nos quais pesquisar repositórios git.
	"git.scanRepositories": [],

	// Controla se um botão de ação é mostrado na visualização Source Control.
	"git.showActionButton": {
		"commit": true,
		"publish": true,
		"sync": true
	},

	// Controla se a entrada de confirmação deve ser mostrada no painel de controle do código-fonte do Git.
	"git.showCommitInput": true,

	// Controla se uma ação de abertura de arquivo embutida deve ser mostrada no modo de exibição de alterações do Git.
	"git.showInlineOpenFileAction": true,

	// Controla se as ações git devem mostrar o progresso.
	"git.showProgress": true,

	// Controla se uma notificação deve ser mostrada quando um envio por push é bem-sucedido.
	"git.showPushSuccessNotification": false,

	// Controlar quais alterações são automaticamente testadas por Confirmação Inteligente.
	//  - all: Preparar automaticamente todas as alterações.
	//  - tracked: Somente preparar automaticamente as alterações controladas.
	"git.smartCommitChanges": "all",

	// Controla como limitar o número de alterações que podem ser analisadas a partir do comando de status do Git. Pode ser definido como 0 para nenhum limite.
	"git.statusLimit": 10000,

	// Sugere habilitar a confirmação inteligente (confirmar todas as alterações quando não há alterações preparadas).
	"git.suggestSmartCommit": true,

	// Controla se uma notificação aparece durante a execução da ação de sincronização, o que permite ao usuário cancelar a operação.
	"git.supportCancellation": false,

	// Controla se o VS Code deve ser habilitado para ser o manipulador de autenticação para processos git gerados no terminal integrado. Observação: os terminais precisam ser reiniciados para retirar uma alteração nesta configuração.
	"git.terminalAuthentication": true,

	// Controla se o VS Code deve ser ativado como editor git para processos git gerados no terminal integrado. Nota: os terminais precisam ser reiniciados para detectar uma alteração nesta configuração.
	"git.terminalGitEditor": false,

	// Controla qual data deve ser usada para os itens na exibição Linha do tempo.
	//  - committed: Usar a data confirmada
	//  - authored: Usar a data de criação
	"git.timeline.date": "committed",

	// Controla se o autor do commit deve ser mostrado na exibição Linha do tempo.
	"git.timeline.showAuthor": true,

	// Controla se as alterações não confirmadas devem ser mostradas no modo de exibição de Linha do Tempo.
	"git.timeline.showUncommitted": false,

	// Controla como as alterações não controladas se comportam.
	//  - mixed: Todas as alterações, controladas e não controladas, aparecem juntas e se comportam igualmente.
	//  - separate: As alterações não controladas são exibidas separadamente no modo de exibição de Controle do Código-fonte. Elas também são excluídas de várias ações.
	//  - hidden: As alterações não controladas são ocultas e excluídas de várias ações.
	"git.untrackedChanges": "mixed",

	// Controla se a mensagem da caixa de entrada de commit deve ser usada como a mensagem de stash padrão.
	"git.useCommitInputAsStashMessage": false,

	// Controla se um editor de texto completo será usado para criar mensagens de confirmação, sempre que nenhuma mensagem for fornecida na caixa de entrada de confirmação.
	"git.useEditorAsCommitInput": true,

	// Controla se o envio por push forçado usa a variante force-with-lease mais segura.
	"git.useForcePushWithLease": true,

	// Controla se o GIT_ASKPASS deve ser substituído para usar a versão integrada.
	"git.useIntegratedAskPass": true,

	// Habilite a saída detalhada quando `git.useEditorAsCommitInput` estiver habilitado.
	"git.verboseCommit": false,

	// Controla se a autenticação automática do GitHub deve ser habilitada para comandos git no VS Code.
	"github.gitAuthentication": true,

	// Controla qual protocolo é utilizado para clonar um repositório do GitHub
	"github.gitProtocol": "https",

	// URI of your GitHub Enterprise Instance
	"github-enterprise.uri": "",

	// Controla a habilitação da detecção de tarefas Grunt. A detecção de tarefas Grunt pode causar a execução de arquivos em qualquer espaço de trabalho aberto.
	"grunt.autoDetect": "off",

	// Controla a habilitação da detecção de tarefas Gulp. A detecção de tarefas Gulp pode causar a execução de arquivos em qualquer espaço de trabalho aberto.
	"gulp.autoDetect": "off",

	// Habilitar/Desabilitar a colagem de imagens em células Markdown em arquivos ipynb. Requer a habilitação de `editor.experimental.pasteActions.enabled`.
	"ipynb.experimental.pasteImages.enabled": false,

	// Controla a habilitação da detecção de tarefas Jake. A detecção de tarefas Jake pode causar a execução de arquivos em qualquer espaço de trabalho aberto.
	"jake.autoDetect": "off",

	// Habilitar/desabilitar a matemática da renderização da visualização interna do Markdown.
	"markdown.math.enabled": true,

	// Se é necessário navegar automaticamente até o próximo conflito de mesclagem após resolver um conflito de mesclagem.
	"merge-conflict.autoNavigateNextConflict.enabled": false,

	// Criar um CodeLens para blocos de conflitos de mesclagem no editor.
	"merge-conflict.codeLens.enabled": true,

	// Criar decoradores para blocos de conflitos de mesclagem no editor.
	"merge-conflict.decorators.enabled": true,

	// Controla onde a exibição de comparação deve ser aberta ao comparar as alterações nos conflitos de mesclagem.
	//  - Current: Abrir o modo de exibição de comparação no grupo do editor atual.
	//  - Beside: Abrir o modo de exibição de comparação próximo ao grupo do editor atual.
	//  - Below: Abrir o modo de exibição de comparação abaixo do grupo do editor atual.
	"merge-conflict.diffViewPosition": "Current",

	// Configures which processes to automatically attach and debug when `debug.node.autoAttach` is on. A Node process launched with the `--inspect` flag will always be attached to, regardless of this setting.
	//  - always: Auto attach to every Node.js process launched in the terminal.
	//  - smart: Auto attach when running scripts that aren't in a node_modules folder.
	//  - onlyWithFlag: Only auto attach when the `--inspect` is given.
	//  - disabled: Auto attach is disabled and not shown in status bar.
	"debug.javascript.autoAttachFilter": "disabled",

	// Configures glob patterns for determining when to attach in "smart" `debug.javascript.autoAttachFilter` mode. `$KNOWN_TOOLS$` is replaced with a list of names of common test and code runners. [Read more on the VS Code docs](https://code.visualstudio.com/docs/nodejs/nodejs-debugging#_auto-attach-smart-patterns).
	"debug.javascript.autoAttachSmartPattern": [
		"${workspaceFolder}/**",
		"!**/node_modules/**",
		"**/$KNOWN_TOOLS$/**"
	],

	// When debugging a remote web app, configures whether to automatically tunnel the remote server to your local machine.
	"debug.javascript.automaticallyTunnelRemoteServer": true,

	// Whether to stop when conditional breakpoints throw an error.
	"debug.javascript.breakOnConditionalError": false,

	// Where a "Run" and "Debug" code lens should be shown in your npm scripts. It may be on "all", scripts, on "top" of the script section, or "never".
	"debug.javascript.codelens.npmScripts": "top",

	// Options used when debugging open links clicked from inside the JavaScript Debug Terminal. Can be set to "off" to disable this behavior, or "always" to enable debugging in all terminals.
	"debug.javascript.debugByLinkOptions": "on",

	// The default `runtimeExecutable` used for launch configurations, if unspecified. This can be used to config custom paths to Node.js or browser installations.
	"debug.javascript.defaultRuntimeExecutable": {
		"pwa-node": "node"
	},

	// Default options used when debugging a process through the `Debug: Attach to Node.js Process` command
	"debug.javascript.pickAndAttachOptions": {},

	// Request options to use when loading resources, such as source maps, in the debugger. You may need to configure this if your sourcemaps require authentication or use a self-signed certificate, for instance. Options are used to create a request using the [`got`](https://github.com/sindresorhus/got) library.
	// 
	// A common case to disable certificate verification can be done by passing `{ "https": { "rejectUnauthorized": false } }`.
	"debug.javascript.resourceRequestOptions": {},

	// Default launch options for the JavaScript debug terminal and npm scripts.
	"debug.javascript.terminalOptions": {},

	// Configures whether sourcemapped file where the original file can't be read will automatically be unmapped. If this is false (default), a prompt is shown.
	"debug.javascript.unmapMissingSources": false,

	// Controla se os scripts npm devem ser automaticamente detectados.
	"npm.autoDetect": "on",

	// Habilitar a execução de scripts npm contidos em uma pasta no menu de contexto do Explorador.
	"npm.enableRunFromFolder": false,

	// The NPM Script Explorer is now available in 'Views' menu in the Explorer in all folders.
	// Habilitar um modo de exibição do explorador para scripts npm quando não houver arquivo 'package.json' de nível superior.
	"npm.enableScriptExplorer": false,

	// Configurar padrões glob para pastas que devem ser excluídas da detecção automática de script.
	"npm.exclude": "",

	// Buscar dados de https://registry.npmjs.org e https://registry.bower.io para fornecer preenchimento automático e informações sobre os recursos de foco em dependências npm.
	"npm.fetchOnlinePackageInfo": true,

	// O gerenciador de pacotes usado para executar scripts.
	//  - auto: Detectar automaticamente qual gerenciador de pacotes deve ser usado para executar scripts com base nos arquivos de bloqueio e nos gerenciadores de pacotes instalados.
	//  - npm: Usar o npm como o gerenciador de pacotes para executar scripts.
	//  - yarn: Usar o YARN como o gerenciador de pacotes para executar scripts.
	//  - pnpm: Usar o pnpm como o gerenciador de pacotes para executar scripts.
	"npm.packageManager": "auto",

	// Execute comandos npm com a opção `--silent`.
	"npm.runSilent": false,

	// A ação de clique padrão usada no explorador de scripts npm: `open` ou `run`, o padrão é `open`.
	"npm.scriptExplorerAction": "open",

	// Uma matriz de expressões regulares que indicam quais scripts devem ser excluídos da exibição de Scripts NPM.
	"npm.scriptExplorerExclude": [],

	// Exiba o foco com os comandos 'Executar' e 'Depurar' para scripts.
	"npm.scriptHover": true,

	// Controla se 'Espiar Referências' ou 'Localizar Referências' é invocado ao selecionar referências de lente de código
	//  - peek: Mostrar referências no editor de espiada.
	//  - view: Mostrar referências em modo de exibição separado.
	"references.preferredLocation": "peek",

	// Habilita/desabilita o indicador flutuante que é exibido quando focalizado no navegador simples.
	"simpleBrowser.focusLockIndicator.enabled": true,

	// The HTML attributes for which to provide class completions, hover previews, linting etc.
	"tailwindCSS.classAttributes": [
		"class",
		"className",
		"ngClass"
	],

	// Enable code actions.
	"tailwindCSS.codeActions": true,

	// Controls whether the editor should render inline color decorators for Tailwind CSS classes and helper functions.
	"tailwindCSS.colorDecorators": true,

	// Enable class name completions when using Emmet-style syntax, for example `div.bg-red-500.uppercase`
	"tailwindCSS.emmetCompletions": false,

	// 
	"tailwindCSS.experimental.classRegex": [],

	// Manually specify the Tailwind config file or files that should be read to provide IntelliSense features. Can either be a single string value, or an object where each key is a config file path and each value is a glob or array of globs representing the set of files that the config file applies to.
	"tailwindCSS.experimental.configFile": null,

	// Configure glob patterns to exclude from all IntelliSense features. Inherits all glob patterns from the `files.exclude` setting.
	"tailwindCSS.files.exclude": [
		"**/.git/**",
		"**/node_modules/**",
		"**/.hg/**",
		"**/.svn/**"
	],

	// Enable hovers.
	"tailwindCSS.hovers": true,

	// Enable features in languages that are not supported by default. Add a mapping here between the new language and an already supported language.
	//  E.g.: `{"plaintext": "html"}`
	"tailwindCSS.includeLanguages": {},

	// Enable the Node.js inspector agent for the language server and listen on the specified port.
	"tailwindCSS.inspectPort": null,

	// Class names on the same HTML element which apply the same CSS property or properties
	"tailwindCSS.lint.cssConflict": "warning",

	// Unsupported use of the [`@apply` directive](https://tailwindcss.com/docs/functions-and-directives/#apply)
	"tailwindCSS.lint.invalidApply": "error",

	// Unknown or invalid path used with the [`theme` helper](https://tailwindcss.com/docs/functions-and-directives/#theme)
	"tailwindCSS.lint.invalidConfigPath": "error",

	// Unknown screen name used with the [`@screen` directive](https://tailwindcss.com/docs/functions-and-directives/#screen)
	"tailwindCSS.lint.invalidScreen": "error",

	// Unknown value used with the [`@tailwind` directive](https://tailwindcss.com/docs/functions-and-directives/#tailwind)
	"tailwindCSS.lint.invalidTailwindDirective": "error",

	// Unknown variant name used with the [`@variants` directive](https://tailwindcss.com/docs/functions-and-directives/#variants)
	"tailwindCSS.lint.invalidVariant": "error",

	// Class variants not in the recommended order (applies in [JIT mode](https://tailwindcss.com/docs/just-in-time-mode) only)
	"tailwindCSS.lint.recommendedVariantOrder": "warning",

	// Root font size in pixels. Used to convert `rem` CSS values to their `px` equivalents. See `tailwindCSS.showPixelEquivalents`.
	"tailwindCSS.rootFontSize": 16,

	// Show `px` equivalents for `rem` CSS values.
	"tailwindCSS.showPixelEquivalents": true,

	// Enable autocomplete suggestions.
	"tailwindCSS.suggestions": true,

	// Enable linting. Rules can be configured individually using the `tailwindcss.lint.*` settings
	"tailwindCSS.validate": true,

	// Enables code lens for Regex Previewer
	"regex-previewer.enableCodeLens": true,

	// Always show the ESlint status bar item.
	"eslint.alwaysShowStatus": false,

	// The setting is deprecated. Use editor.codeActionsOnSave instead with a source.fixAll.eslint member.
	// Turns auto fix on save on or off.
	"eslint.autoFixOnSave": false,

	// Show disable lint rule in the quick fix menu.
	"eslint.codeAction.disableRuleComment": {
		"enable": true,
		"location": "separateLine"
	},

	// Show open lint rule documentation web page in the quick fix menu.
	"eslint.codeAction.showDocumentation": {
		"enable": true
	},

	// Specifies the code action mode. Possible values are 'all' and 'problems'.
	//  - all: Fixes all possible problems in the file. This option might take some time.
	//  - problems: Only fixes reported problems that have non overlapping textual edits. This options runs a lot faster.
	"eslint.codeActionsOnSave.mode": "all",

	// The rules that should be executed when computing the code actions on save or formatting a file. Defaults to the rules configured via the ESLint configuration
	"eslint.codeActionsOnSave.rules": null,

	// Enables ESLint debug mode (same as `--debug` on the command line)
	"eslint.debug": false,

	// Controls whether eslint is enabled or not.
	"eslint.enable": true,

	// Additional exec argv argument passed to the runtime. This can for example be used to control the maximum heap space using --max_old_space_size
	"eslint.execArgv": null,

	// Enables ESLint as a formatter.
	"eslint.format.enable": false,

	// Controls whether a task for linting the whole workspace will be available.
	"eslint.lintTask.enable": false,

	// Command line options applied when running the task for linting the whole workspace (see https://eslint.org/docs/user-guide/command-line-interface).
	"eslint.lintTask.options": ".",

	// Whether ESlint should migrate auto fix on save settings.
	"eslint.migration.2_x": "on",

	// The value of `NODE_ENV` to use when running eslint tasks.
	"eslint.nodeEnv": null,

	// A path added to `NODE_PATH` when resolving the eslint module.
	"eslint.nodePath": null,

	// A special rules customization section for text cells in notebook documents.
	"eslint.notebooks.rules.customizations": [],

	// Whether ESLint should issue a warning on ignored files.
	"eslint.onIgnoredFiles": "off",

	// The eslint options object to provide args normally passed to eslint when executed from a command line (see https://eslint.org/docs/developer-guide/nodejs-api#eslint-class).
	"eslint.options": {},

	// The package manager you use to install node modules.
	"eslint.packageManager": "npm",

	// An array of language ids for which the extension should probe if support is installed.
	"eslint.probe": [
		"javascript",
		"javascriptreact",
		"typescript",
		"typescriptreact",
		"html",
		"vue",
		"markdown"
	],

	// This option is deprecated. Use eslint.lintTask.enable instead.
	// Controls whether a task for linting the whole workspace will be available.
	"eslint.provideLintTask": false,

	// Turns on quiet mode, which ignores warnings.
	"eslint.quiet": false,

	// Override the severity of one or more rules reported by this extension, regardless of the project's ESLint config. Use globs to apply default severities for multiple rules.
	"eslint.rules.customizations": [],

	// Run the linter on save (onSave) or on type (onType)
	"eslint.run": "onType",

	// The location of the node binary to run ESLint under.
	"eslint.runtime": null,

	// Traces the communication between VSCode and the eslint linter service.
	"eslint.trace.server": "off",

	// Since version 7 ESLint offers a new API call ESLint. Use it even if the old CLIEngine is available. From version 8 on forward on ESLint class is available.
	"eslint.useESLintClass": false,

	// An array of language ids which should be validated by ESLint. If not installed ESLint will show an error.
	"eslint.validate": [],

	// Specifies how the working directories ESLint is using are computed. ESLint resolves configuration files (e.g. `eslintrc`, `.eslintignore`) relative to a working directory so it is important to configure this correctly.
	"eslint.workingDirectories": [],

	// Automatically generates an .editorconfig file according to your current editor settings.
	"editorconfig.generateAuto": true,

	// If generateAuto is false, this template path will be used for each newly-generated .editorconfig file.
	"editorconfig.template": "default",

	// Use ANTLR parser to verify text documents when edited.
	"systemverilog.antlrVerification": false,

	// Compile all files when opened.
	"systemverilog.compileOnOpen": false,

	// Compile SystemVerilog/Verilog files when saved.
	"systemverilog.compileOnSave": false,

	// Select the compiler type from the drop down list.
	"systemverilog.compilerType": "Verilator",

	// Disable automatic indexing when opening a folder or workspace.
	"systemverilog.disableIndexing": false,

	// The level of detail the parser should use when looking for symbols:
	//   - 'full': detect blocks, ports, parameters, classes, methods, typedefs, defines, labels, instantiations, assertions, and references
	//   - 'full_no_references': detect blocks, ports, parameters, classes, methods, typedefs, defines, labels, instantiations, and assertions
	//   - 'declarations': detect blocks, ports, parameters, classes, methods, typedefs, and defines
	//   - 'fast': detect only common blocks (module, class, interface, package, program) without hierarchy
	"systemverilog.documentSymbolsPrecision": "full",

	// Enable incremental indexation as you open files.
	"systemverilog.enableIncrementalIndexing": true,

	// Files excluded from compiling (glob pattern).
	"systemverilog.excludeCompiling": "",

	// Files excluded from indexing (glob pattern).
	"systemverilog.excludeIndexing": "",

	// Force indexing to use fast regular expression parsing.
	"systemverilog.forceFastIndexing": false,

	// Launch command for running the formatter.
	"systemverilog.formatCommand": "verible-verilog-format",

	// Files included for indexing (glob pattern). Examples: 
	//   - Include files within the workspace's rtl folder ('*' at front of pattern denotes that path is relative to workspace root): **/rtl/**/*.{sv,v,svh,vh}
	//   - Add all files with a '.svp' extension: **/*.svp
	//   - Add files only when in a specific workspace: /abs/path/to/workspace/rtl/**/*.{sv,v,svh,vh}
	"systemverilog.includeIndexing": [
		"**/*.{sv,v,svh,vh}"
	],

	// Launch command for running VCS as the compiler.
	"systemverilog.launchConfigurationVCS": "vcs",

	// Launch command for running Verible as the compiler.
	"systemverilog.launchConfigurationVerible": "verible-verilog-lint",

	// Launch command for running Verilator as the compiler.
	"systemverilog.launchConfigurationVerilator": "verilator --sv --lint-only --language 1800-2012 --Wall",

	// When indexing a file, if the line count is larger than this number, fast indexing will be used to improve symbol lookup performance.
	"systemverilog.maxLineCountIndexing": 2000,

	// The number of files the extension should attempt to process in parallel. Processing consist of opening found files and perform matching to find symbols.
	"systemverilog.parallelProcessing": 10,

	// Traces the communication between VS Code and the SystemVerilog language server.
	"systemverilog.trace.server": "off",

	// Run ANTLR verification on all files when opened.
	"systemverilog.verifyOnOpen": false,

	// Include parentheses around a sole arrow function parameter
	"prettier.arrowParens": "always",

	// If true, puts the `>` of a multi-line HTML (HTML, JSX, Vue, Angular) element at the end of the last line instead of being alone on the next line (does not apply to self closing elements).
	"prettier.bracketSameLine": false,

	// Controls the printing of spaces inside object literals
	"prettier.bracketSpacing": true,

	// Path to the prettier configuration file
	"prettier.configPath": "",

	// This feature is no longer supported. Instead, configure VS Code [default formatters](https://github.com/prettier/prettier-vscode#default-formatter) or use .prettierignore.
	// A list of languages IDs to disable this extension on
	"prettier.disableLanguages": [],

	// A list of [glob patterns](https://code.visualstudio.com/api/references/vscode-api#GlobPattern) to register Prettier formatter
	"prettier.documentSelectors": [],

	// Control whether Prettier formats quoted code embedded in the file.
	"prettier.embeddedLanguageFormatting": "auto",

	// Controls whether prettier is enabled or not.
	"prettier.enable": true,

	// Enable debug logs for troubleshooting.
	"prettier.enableDebugLogs": false,

	// Specify the end of line used by prettier
	"prettier.endOfLine": "lf",

	// Specify the global whitespace sensitivity for HTML files.
	//  Valid options:
	// - `css` - Respect the default value of CSS display property.
	// - `strict` - Whitespaces are considered sensitive.
	// - `ignore` - Whitespaces are considered insensitive.
	"prettier.htmlWhitespaceSensitivity": "css",

	// Path to a .prettierignore file
	"prettier.ignorePath": ".prettierignore",

	// Prettier can insert a special @format marker at the top of files specifying that the file has been formatted with prettier. This works well when used in tandem with the `--require-pragma` option. If there is already a docblock at the top of the file then this option will add a newline to it with the @format marker.
	"prettier.insertPragma": false,

	// This option has been deprecated in v2.4.0, use `bracketSameLine` instead.
	// If true, puts the `>` of a multi-line jsx element at the end of the last line instead of being alone on the next line (does not apply to self closing elements).
	"prettier.jsxBracketSameLine": false,

	// Use single quotes instead of double quotes in JSX
	"prettier.jsxSingleQuote": false,

	// Package manager is now automatically detected by VS Code. This setting is no longer used.
	// The package manager you use to install node modules.
	"prettier.packageManager": "npm",

	// Path to the prettier module
	"prettier.prettierPath": "",

	// Fit code within this line limit
	"prettier.printWidth": 80,

	// (Markdown) wrap prose over multiple lines
	"prettier.proseWrap": "preserve",

	// Change when properties in objects are quoted
	"prettier.quoteProps": "as-needed",

	// Require a prettier configuration file to format. See [documentation for valid configuration files](https://prettier.io/docs/en/configuration.html).
	// 
	// > _Note, untitled files will still be formatted using the VS Code prettier settings even when this setting is set._
	"prettier.requireConfig": false,

	// Prettier can restrict itself to only format files that contain a special comment, called a pragma, at the top of the file. This is very useful when gradually transitioning large, unformatted codebases to prettier.
	"prettier.requirePragma": false,

	// When enabled, this extension will attempt to use global npm or yarn modules if local modules cannot be resolved.
	// > _This setting can have a negative performance impact, particularly on Windows when you have attached network drives. Only enable this if you must use global modules._
	"prettier.resolveGlobalModules": false,

	// Whether to add a semicolon at the end of every line
	"prettier.semi": true,

	// If true, enforces single attribute per line in HTML, Vue and JSX.
	"prettier.singleAttributePerLine": false,

	// If true, will use single instead of double quotes
	"prettier.singleQuote": false,

	// Number of spaces it should use per tab
	"prettier.tabWidth": 2,

	// Controls the printing of trailing commas wherever possible. Valid options:
	// - `none` - No trailing commas
	// - `es5` - Trailing commas where valid in ES5 (objects, arrays, etc)
	// - `all` - Trailing commas wherever possible (function arguments)
	"prettier.trailingComma": "es5",

	// Whether or not to take `.editorconfig` into account when parsing configuration. See the [prettier.resolveConfig](https://prettier.io/docs/en/api.html) docs for details.
	"prettier.useEditorConfig": true,

	// Indent lines with tabs
	"prettier.useTabs": false,

	// Whether or not to indent the code inside `<script>` and `<style>` tags in Vue files. Some people (like the creator of Vue) don’t indent to save an indentation level, but this might break code folding in your editor.
	"prettier.vueIndentScriptAndStyle": false,

	// If true, this extension will process files in node_modules
	"prettier.withNodeModules": false,

	// If there is no solution in the workplace root folder, it will search for solutions in any of these folders.
	"vssolution.altSolutionFolders": [
		"src"
	],

	// Sets custom the terminal commands.
	"vssolution.customCommands": {},

	// Sets whether related items will be displayed nested
	"vssolution.itemNesting": false,

	// Controls line endings of solution and project files.
	"vssolution.lineEndings": "lf",

	// Folder and filenames to ignore when get a dotnet core project content
	"vssolution.netcoreIgnore": [
		"bin",
		"node_modules",
		"obj",
		".ds_store",
		".vs"
	],

	// Sets whether solutions will be automatically loaded from the altSolutionFolders parameter.
	"vssolution.openSolutions.inAltFolders": true,

	// Sets whether solutions will be automatically loaded from the current opened folder and subfolders.
	"vssolution.openSolutions.inFoldersAndSubfolders": false,

	// Sets whether solutions will be automatically loaded from the root folder.
	"vssolution.openSolutions.inRootFolder": true,

	// Sets whether solutions will be automatically loaded from the current selected solution in Omnisharp extension.
	"vssolution.openSolutions.selectedInOmnisharp": false,

	// Show the solution explorer in the activity bar, in the explorer pane or don't show it.
	"vssolution.showMode": "activityBar",

	// Show the solution explorer output channel.
	"vssolution.showOutputChannel": true,

	// solution-explorer -> Uses the vscode-solution-explorer custom icons
	// mix -> use current theme icons for files and folders
	// current-theme -> Uses the installed icon theme
	"vssolution.solutionExplorerIcons": "solution-explorer",

	// Select the active editor file in the solution explorer.
	"vssolution.trackActiveItem": false,

	// Win32 codepage -> iconv.js encoding equivalences.
	"vssolution.win32Encoding": {
		"932": "Shift_JIS",
		"936": "GBK",
		"950": "BIG5"
	},

	// Add space at the end of XML closing tag, ex: " />"
	"vssolution.xmlClosingTagSpace": "false",

	// Spaces to be used for indenting XML output. It could be a number or an string. ex. "2", " " or "\t".
	"vssolution.xmlspaces": "2",

	// Type of XML element to put in the xxproj files.
	"vssolution.xxprojItemTypes": {
		"*": "Content",
		"cs": "Compile",
		"cpp": "ClCompile",
		"cc": "ClCompile",
		"c": "ClCompile",
		"h": "ClInclude",
		"hpp": "ClInclude",
		"vb": "Compile",
		"fs": "Compile",
		"ts": "TypeScriptCompile"
	},

	// 
	"github.copilot.advanced": {},

	// Enable or disable Copilot for specified [languages](https://code.visualstudio.com/docs/languages/identifiers)
	"github.copilot.enable": {
		"*": true,
		"yaml": false,
		"plaintext": false,
		"markdown": false
	},

	// Show inline suggestions
	"github.copilot.inlineSuggest.enable": true,

	// Assigns the issue you're working on to you. Only applies when the issue you're working on is in a repo you currently have open.
	"githubIssues.assignWhenWorking": true,

	// Controls whether an issue number (ex. #1234) or a full url (ex. https://github.com/owner/name/issues/1234) is inserted when the Create Issue code action is run.
	"githubIssues.createInsertFormat": "number",

	// Strings that will cause the 'Create issue from comment' code action to show.
	"githubIssues.createIssueTriggers": [
		"TODO",
		"todo",
		"BUG",
		"FIXME",
		"ISSUE",
		"HACK"
	],

	// Languages that the '#' character should not be used to trigger issue completion suggestions.
	"githubIssues.ignoreCompletionTrigger": [
		"coffeescript",
		"diff",
		"dockerfile",
		"dockercompose",
		"ignore",
		"ini",
		"julia",
		"makefile",
		"perl",
		"powershell",
		"python",
		"r",
		"ruby",
		"shellscript",
		"yaml"
	],

	// An array of milestones titles to never show issues from.
	"githubIssues.ignoreMilestones": [],

	// Languages that the '@' character should not be used to trigger user completion suggestions.
	"githubIssues.ignoreUserCompletionTrigger": [
		"python"
	],

	// Advanced settings for the name of the branch that is created when you start working on an issue. 
	// - `${user}` will be replace with the currently logged in username 
	// - `${issueNumber}` will be replaced with the current issue number 
	// - `${sanitizedIssueTitle}` will be replaced with the issue title, with all spaces and unsupported characters (https://git-scm.com/docs/git-check-ref-format) removed
	"githubIssues.issueBranchTitle": "${user}/issue${issueNumber}",

	// Sets the format of issue completions in the SCM inputbox. 
	// - `${user}` will be replace with the currently logged in username 
	// - `${issueNumber}` will be replaced with the current issue number 
	// - `${issueNumberLabel}` will be replaced with a label formatted as #number or owner/repository#number, depending on whether the issue is in the current repository
	"githubIssues.issueCompletionFormatScm": "${issueTitle} ${issueNumberLabel}",

	// Controls whether completion suggestions are shown for issues.
	"githubIssues.issueCompletions.enabled": true,

	// Specifies what queries should be used in the GitHub issues tree using [GitHub search syntax](https://help.github.com/en/articles/understanding-the-search-syntax) with variables. The first query listed will be expanded in the Issues view. The "default" query includes issues assigned to you by Milestone. If you want to preserve these, make sure they are still in the array when you modify the setting.
	"githubIssues.queries": [
		{
			"label": "My Issues",
			"query": "default"
		},
		{
			"label": "Created Issues",
			"query": "author:${user} state:open repo:${owner}/${repository} sort:created-desc"
		},
		{
			"label": "Recent Issues",
			"query": "state:open repo:${owner}/${repository} sort:updated-desc"
		}
	],

	// Determines whether a branch should be checked out when working on an issue. To configure the name of the branch, set `githubIssues.issueBranchTitle`.
	//  - on: A branch will always be checked out when you start working on an issue. If the branch doesn't exist, it will be created.
	//  - off: A branch will not be created when you start working on an issue. If you have worked on an issue before and a branch was created for it, that same branch will be checked out.
	//  - prompt: A prompt will show for setting the name of the branch that will be created and checked out.
	"githubIssues.useBranchForIssues": "on",

	// Controls whether completion suggestions are shown for users.
	"githubIssues.userCompletions.enabled": true,

	// Sets the format of the commit message that is set in the SCM inputbox when you **Start Working on an Issue**. Defaults to `${issueTitle} 
	// Fixes #${issueNumber}`
	"githubIssues.workingIssueFormatScm": "${issueTitle} \nFixes ${issueNumberLabel}",

	// All pull requests created with this extension will be assigned to this user. To assign to yourself, use the '${user}' variable.
	"githubPullRequests.assignCreated": "",

	// Controls whether comments are expanded when a document with comments is opened.
	//  - expandUnresolved: All unresolved comments will be expanded.
	//  - collapseAll: All comments will be collapsed
	"githubPullRequests.commentExpandState": "expandUnresolved",

	// Create a pull request when a branch is published.
	//  - never: Never create a pull request when a branch is published.
	//  - ask: Ask if you want to create a pull request when a branch is published.
	"githubPullRequests.createOnPublishBranch": "ask",

	// When true, the option to delete the local branch will be selected by default when deleting a branch from a pull request.
	"githubPullRequests.defaultDeletionMethod.selectLocalBranch": true,

	// When true, the option to delete the remote will be selected by default when deleting a branch from a pull request.
	"githubPullRequests.defaultDeletionMethod.selectRemote": true,

	// The method to use when merging pull requests.
	"githubPullRequests.defaultMergeMethod": "merge",

	// The layout to use when displaying changed files list.
	"githubPullRequests.fileListLayout": "tree",

	// Whether to enter focused mode when a pull request is checked out. This hides the issues and pull requests tree views.
	"githubPullRequests.focusedMode": true,

	// Prevents branches that are associated with a pull request from being automatically detected. This will prevent review mode from being entered on these branches.
	"githubPullRequests.ignoredPullRequestBranches": [],

	// The setting `githubPullRequests.includeRemotes` has been deprecated. Use `githubPullRequests.remotes` to configure what remotes are shown.
	// By default we only support remotes created by users. If you want to see pull requests from remotes this extension created for pull requests, change this setting to 'all'.
	"githubPullRequests.includeRemotes": "default",

	// Logging for GitHub Pull Request extension. The log is emitted to the output channel named as GitHub Pull Request.
	"githubPullRequests.logLevel": "info",

	// If GitHub notifications should be shown to the user.
	"githubPullRequests.notifications": "off",

	// The default branch for a repository is set on github.com. With this setting, you can override that default with another branch.
	"githubPullRequests.overrideDefaultBranch": "",

	// The action to take after creating a pull request.
	//  - none: No action
	//  - openOverview: Open the overview page of the pull request
	"githubPullRequests.postCreate": "openOverview",

	// Pull changes from the remote when a PR branch is checked out locally. Changes are detected when the PR is manually refreshed and during periodic background updates.
	//  - prompt: Prompt to pull a PR branch when changes are detected in the PR.
	//  - never: Never pull a PR branch when changes are detected in the PR.
	//  - always: Always pull a PR branch when changes are detected in the PR. When `"git.autoStash": true` this will instead `prompt` to prevent unexpected file changes.
	"githubPullRequests.pullBranch": "prompt",

	// The description used when creating pull requests.
	//  - template: Use a pull request template and commit description, or just use the commit description if no templates were found
	//  - commit: Use the latest commit message only
	"githubPullRequests.pullRequestDescription": "template",

	// The pull request title now uses the same defaults as GitHub, and can be edited before create.
	// The title used when creating pull requests.
	//  - commit: Use the latest commit message
	//  - branch: Use the branch name
	//  - custom: Specify a custom title
	//  - ask: Ask which of the above methods to use
	"githubPullRequests.pullRequestTitle": "ask",

	// Push the "from" branch when creating a PR and the "from" branch is not available on the remote.
	//  - prompt: Prompt to push the branch when creating a PR and the "from" branch is not available on the remote.
	//  - always: Always push the branch when creating a PR and the "from" branch is not available on the remote.
	"githubPullRequests.pushBranch": "prompt",

	// Specifies what queries should be used in the GitHub Pull Requests tree. Each query object has a `label` that will be shown in the tree and a search `query` using [GitHub search syntax](https://help.github.com/en/articles/understanding-the-search-syntax). The variable `${user}` can be used to specify the logged in user within a search. By default these queries define the categories "Waiting For My Review", "Assigned To Me" and "Created By Me". If you want to preserve these, make sure they are still in the array when you modify the setting.
	"githubPullRequests.queries": [
		{
			"label": "Waiting For My Review",
			"query": "is:open review-requested:${user}"
		},
		{
			"label": "Assigned To Me",
			"query": "is:open assignee:${user}"
		},
		{
			"label": "Created By Me",
			"query": "is:open author:${user}"
		}
	],

	// List of remotes, by name, to fetch pull requests from.
	"githubPullRequests.remotes": [
		"origin",
		"upstream"
	],

	// This setting is deprecated. Views can now be dragged to any location.
	// When true, show GitHub Pull Requests within the SCM viewlet. Otherwise show a separate view container for them.
	"githubPullRequests.showInSCM": false,

	// Default handler for terminal links.
	//  - github: Create the pull request on GitHub
	//  - vscode: Create the pull request in VS Code
	//  - ask: Ask which method to use
	"githubPullRequests.terminalLinksHandler": "ask",

	// Choose which pull request states will use review mode. "Open" pull requests will always use review mode.
	"githubPullRequests.useReviewMode": {
		"merged": true,
		"closed": false
	},

	// Whether to typecheck the entire project on load. It could drive to bad performance in large projects.
	"haskell.checkProject": true,

	// The formatter to use when formatting a document or range. Ensure the plugin is enabled.
	"haskell.formattingProvider": "ormolu",

	// Manually set a ghcup executable path.
	"haskell.ghcupExecutablePath": "",

	// If set, redirects the logs to a file.
	"haskell.logFile": "",

	// How to manage/find HLS installations.
	//  - GHCup: Will use ghcup and manage Haskell toolchain in the default location (usually '~/.ghcup')
	//  - PATH: Discovers HLS and other executables in system PATH
	"haskell.manageHLS": "PATH",

	// Maximum number of completions sent to the editor.
	"haskell.maxCompletions": 40,

	// An optional URL to override where ghcup checks for tool download info (usually at: https://raw.githubusercontent.com/haskell/ghcup-metadata/master/ghcup-0.0.7.yaml)
	"haskell.metadataURL": "",

	// When opening 'Documentation' for external libraries, open in hackage by default. Set to false to instead open in vscode.
	"haskell.openDocumentationInHackage": true,

	// When opening 'Source' for external libraries, open in hackage by default. Set to false to instead open in vscode.
	"haskell.openSourceInHackage": true,

	// Enables alternateNumberFormat plugin
	"haskell.plugin.alternateNumberFormat.globalOn": true,

	// Enables callHierarchy plugin
	"haskell.plugin.callHierarchy.globalOn": true,

	// Enables changeTypeSignature plugin
	"haskell.plugin.changeTypeSignature.globalOn": true,

	// Enables class plugin
	"haskell.plugin.class.globalOn": true,

	// Enable the diff output (WAS/NOW) of eval lenses
	"haskell.plugin.eval.config.diff": true,

	// Enable marking exceptions with `*** Exception:` similarly to doctest and GHCi.
	"haskell.plugin.eval.config.exception": false,

	// Enables eval plugin
	"haskell.plugin.eval.globalOn": true,

	// Enables ghcide-code-actions-bindings plugin
	"haskell.plugin.ghcide-code-actions-bindings.globalOn": true,

	// Enables ghcide-code-actions-fill-holes plugin
	"haskell.plugin.ghcide-code-actions-fill-holes.globalOn": true,

	// Enables ghcide-code-actions-imports-exports plugin
	"haskell.plugin.ghcide-code-actions-imports-exports.globalOn": true,

	// Enables ghcide-code-actions-type-signatures plugin
	"haskell.plugin.ghcide-code-actions-type-signatures.globalOn": true,

	// Extends the import list automatically when completing a out-of-scope identifier
	"haskell.plugin.ghcide-completions.config.autoExtendOn": true,

	// Inserts snippets when using code completions
	"haskell.plugin.ghcide-completions.config.snippetsOn": true,

	// Enables ghcide-completions plugin
	"haskell.plugin.ghcide-completions.globalOn": true,

	// Enables ghcide-hover-and-symbols hover
	"haskell.plugin.ghcide-hover-and-symbols.hoverOn": true,

	// Enables ghcide-hover-and-symbols symbols
	"haskell.plugin.ghcide-hover-and-symbols.symbolsOn": true,

	// Control how type lenses are shown
	//  - always: Always displays type lenses of global bindings
	//  - exported: Only display type lenses of exported global bindings
	//  - diagnostics: Follows error messages produced by GHC about missing signatures
	"haskell.plugin.ghcide-type-lenses.config.mode": "always",

	// Enables ghcide-type-lenses plugin
	"haskell.plugin.ghcide-type-lenses.globalOn": true,

	// Enables haddockComments plugin
	"haskell.plugin.haddockComments.globalOn": true,

	// Enables hlint code actions
	"haskell.plugin.hlint.codeActionsOn": true,

	// Flags used by hlint
	"haskell.plugin.hlint.config.flags": [],

	// Enables hlint diagnostics
	"haskell.plugin.hlint.diagnosticsOn": true,

	// Enables importLens code actions
	"haskell.plugin.importLens.codeActionsOn": true,

	// Enables importLens code lenses
	"haskell.plugin.importLens.codeLensOn": true,

	// Enables moduleName plugin
	"haskell.plugin.moduleName.globalOn": true,

	// Enables pragmas code actions
	"haskell.plugin.pragmas.codeActionsOn": true,

	// Enables pragmas completions
	"haskell.plugin.pragmas.completionOn": true,

	// Enables qualifyImportedNames plugin
	"haskell.plugin.qualifyImportedNames.globalOn": true,

	// Enables refineImports code actions
	"haskell.plugin.refineImports.codeActionsOn": true,

	// Enables refineImports code lenses
	"haskell.plugin.refineImports.codeLensOn": true,

	// Enable experimental cross-module renaming
	"haskell.plugin.rename.config.crossModule": false,

	// Enables rename plugin
	"haskell.plugin.rename.globalOn": true,

	// Enables retrie plugin
	"haskell.plugin.retrie.globalOn": true,

	// Enables splice plugin
	"haskell.plugin.splice.globalOn": true,

	// Enables tactics code actions
	"haskell.plugin.tactics.codeActionsOn": true,

	// Enables tactics code lenses
	"haskell.plugin.tactics.codeLensOn": true,

	// The depth of the search tree when performing "Attempt to fill hole". Bigger values will be able to derive more solutions, but will take exponentially more time.
	"haskell.plugin.tactics.config.auto_gas": 4,

	// The severity to use when showing hole diagnostics. These are noisy, but some editors don't allow jumping to all severities.
	//  - 1: error
	//  - 2: warning
	//  - 3: info
	//  - 4: hint
	//  - null: none
	"haskell.plugin.tactics.config.hole_severity": null,

	// Maximum number of `Use constructor <x>` code actions that can appear
	"haskell.plugin.tactics.config.max_use_ctor_actions": 5,

	// Should Wingman emit styling markup when showing metaprogram proof states?
	"haskell.plugin.tactics.config.proofstate_styling": true,

	// The timeout for Wingman actions, in seconds
	"haskell.plugin.tactics.config.timeout_duration": 2,

	// Enables tactics hover
	"haskell.plugin.tactics.hoverOn": true,

	// Prompt before performing any downloads.
	"haskell.promptBeforeDownloads": "true",

	// An optional path where downloaded metadata will be stored. Check the default value [here](https://github.com/haskell/vscode-haskell#downloaded-binaries)
	"haskell.releasesDownloadStoragePath": "",

	// An optional URL to override where ghcup checks for HLS-GHC compatibility list (usually at: https://raw.githubusercontent.com/haskell/ghcup-metadata/master/hls-metadata-0.0.1.json)
	"haskell.releasesURL": "",

	// Define environment variables for the language server.
	"haskell.serverEnvironment": {},

	// Manually set a language server executable. Can be something on the $PATH or the full path to the executable itself. Works with `~,` `${HOME}` and `${workspaceFolder}`. **Deprecated scope**: This option will be set to `machine` scope in a future release, so it can be changed only globally, not per workspace.
	"haskell.serverExecutablePath": "",

	// Pass additional arguments to the language server.
	"haskell.serverExtraArgs": "",

	// When manageHLS is set to GHCup, this can overwrite the automatic toolchain configuration with a more specific one. When a tool is omitted, the extension will manage the version (for 'ghc' we try to figure out the version the project requires). The format is '{"tool": "version", ...}'. 'version' accepts all identifiers that 'ghcup' accepts.
	"haskell.toolchain": {},

	// Sets the log level in the client side.
	"haskell.trace.client": "info",

	// Traces the communication between VS Code and the language server.
	"haskell.trace.server": "off",

	// Whether to upgrade GHCup automatically when 'manageHLS' is set to 'GHCup'.
	"haskell.upgradeGHCup": true,

	// Points to the hlint exectuable.
	"haskell.hlint.executablePath": "hlint",

	// Which hint arguments should be used when calling hlint.
	"haskell.hlint.hints": [],

	// List of hints to be ignored
	"haskell.hlint.ignore": [],

	// Controls the verbosity of logging. Logs can be seen in the console by opening the dev tools. `log` is the most verbose and `error` will only show critical errors
	"haskell.hlint.logLevel": "error",

	// Whether the linter is run on save or on type or disabled.
	"haskell.hlint.run": "onType",

	// Set to 'false' to disable automatically increasing indent on newlines after '=', 'do', 'where' etc.
	"haskell.indentationRules.enabled": true,

	// If created classes should include default namespaces
	"csharpextensions.includeNamespaces": true,

	// Prefix for generated private member declarations
	"csharpextensions.privateMemberPrefix": "",

	// If true, the document will be reformatted after codeactions are used.
	"csharpextensions.reFormatAfterChange": true,

	// Use file scoped namespace in .NET 6.0+ projects
	"csharpextensions.useFileScopedNamespace": false,

	// Whether or not a ctor assignment of a property or variable should be prefixed with this.
	"csharpextensions.useThisForCtorAssignments": true,

	// Add execution arguments
	"miramac.node.args": null,

	// Clear output before execution
	"miramac.node.clearOutput": true,

	// Set the working directory of the Node.js process
	"miramac.node.cwd": "${execPath}",

	// Add execution environment variables
	"miramac.node.env": null,

	// Execute always the file ('file') only selected code ('selection') or both ('both')
	"miramac.node.executeFileOrSelection": "both",

	// Some code that is executed with each run
	"miramac.node.includeCode": null,

	// If true, the extention will not use new features and options.
	"miramac.node.legacyMode": true,

	// Node binary
	"miramac.node.nodeBin": "node",

	// Add execution options
	"miramac.node.options": null,

	// Output-Channel Name
	"miramac.node.outputWindowName": "Node.js",

	// File to execute (comming soon)
	"miramac.node.program": null,

	// Show start and end info
	"miramac.node.showInfo": true,

	// Show errors
	"miramac.node.showStderr": true,

	// Show console output
	"miramac.node.showStdout": true,

	// Use the integrated terminal
	"miramac.node.terminalMode": false,

	// Enable/disable default C# formatter (requires restart).
	"csharp.format.enable": true,

	// Display inline parameter name hints
	"csharp.inlayHints.parameters.enabled": false,

	// Show hints for indexers
	"csharp.inlayHints.parameters.forIndexerParameters": false,

	// Show hints for literals
	"csharp.inlayHints.parameters.forLiteralParameters": false,

	// Show hints for 'new' expressions
	"csharp.inlayHints.parameters.forObjectCreationParameters": false,

	// Show hints for everything else
	"csharp.inlayHints.parameters.forOtherParameters": false,

	// Suppress hints when parameter names differ only by suffix
	"csharp.inlayHints.parameters.suppressForParametersThatDifferOnlyBySuffix": false,

	// Suppress hints when argument matches parameter name
	"csharp.inlayHints.parameters.suppressForParametersThatMatchArgumentName": false,

	// Suppress hints when parameter name matches the method's intent
	"csharp.inlayHints.parameters.suppressForParametersThatMatchMethodIntent": false,

	// Display inline type hints
	"csharp.inlayHints.types.enabled": false,

	// Show hints for implicit object creation
	"csharp.inlayHints.types.forImplicitObjectCreation": false,

	// Show hints for variables with inferred types
	"csharp.inlayHints.types.forImplicitVariableTypes": false,

	// Show hints for lambda parameter types
	"csharp.inlayHints.types.forLambdaParameterTypes": false,

	// Specifies the maximum number of files for which diagnostics are reported for the whole workspace. If this limit is exceeded, diagnostics will be shown for currently opened files only. Specify 0 or less to disable the limit completely.
	"csharp.maxProjectFileCountForDiagnosticAnalysis": 1000,

	// Specifies whether the references CodeLens should be shown.
	"csharp.referencesCodeLens.enabled": true,

	// Array of custom symbol names for which CodeLens should be disabled.
	"csharp.referencesCodeLens.filteredSymbols": [],

	// Enable/disable Semantic Highlighting for C# files (Razor files currently unsupported). Defaults to false. Close open files for changes to take effect.
	"csharp.semanticHighlighting.enabled": true,

	// Shows the OmniSharp log in the Output pane when OmniSharp reports an error.
	"csharp.showOmnisharpLogOnError": true,

	// Suppress the notification window to add missing assets to build or debug the application.
	"csharp.suppressBuildAssetsNotification": false,

	// Suppress the warning that the .NET Core SDK is not on the path.
	"csharp.suppressDotnetInstallWarning": false,

	// Suppress the notification window to perform a 'dotnet restore' when dependencies can't be resolved.
	"csharp.suppressDotnetRestoreNotification": false,

	// Suppress 'hidden' diagnostics (such as 'unnecessary using directives') from appearing in the editor or the Problems pane.
	"csharp.suppressHiddenDiagnostics": true,

	// Suppress the warning that project.json is no longer a supported project format for .NET Core applications
	"csharp.suppressProjectJsonWarning": false,

	// Specifies whether the run and debug test CodeLens should be shown.
	"csharp.testsCodeLens.enabled": true,

	// Options to use with the debugger when launching for unit test debugging. Any launch.json option is valid here.
	"csharp.unitTestDebuggingOptions": {},

	// Only run analyzers against open files when 'enableRoslynAnalyzers' is true
	"omnisharp.analyzeOpenDocumentsOnly": false,

	// Specifies whether the OmniSharp server will be automatically started or not. If false, OmniSharp can be started with the 'Restart OmniSharp' command
	"omnisharp.autoStart": true,

	// The name of the default solution used at start up if the repo has multiple solutions. e.g.'MyAwesomeSolution.sln'. Default value is `null` which will cause the first in alphabetical order to be chosen.
	"omnisharp.defaultLaunchSolution": "",

	// Specifies whether notifications should be shown if OmniSharp encounters warnings or errors loading a project. Note that these warnings/errors are always emitted to the OmniSharp log
	"omnisharp.disableMSBuildDiagnosticWarning": false,

	// Specified the path to a dotnet installation to use when "useModernNet" is set to true, instead of the default system one. Example: "/home/username/mycustomdotnetdirectory".
	"omnisharp.dotnetPath": "",

	// (EXPERIMENTAL) Enables support for resolving completion edits asynchronously. This can speed up time to show the completion list, particularly override and partial method completion lists, at the cost of slight delays after inserting a completion item. Most completion items will have no noticeable impact with this feature, but typing immediately after inserting an override or partial method completion, before the insert is completed, can have unpredictable results.
	"omnisharp.enableAsyncCompletion": false,

	// Enables support for decompiling external references instead of viewing metadata.
	"omnisharp.enableDecompilationSupport": false,

	// Enables support for reading code style, naming convention and analyzer settings from .editorconfig.
	"omnisharp.enableEditorConfigSupport": true,

	// Enables support for showing unimported types and unimported extension methods in completion lists. When committed, the appropriate using directive will be added at the top of the current file. This option can have a negative impact on initial completion responsiveness, particularly for the first few completion sessions after opening a solution.
	"omnisharp.enableImportCompletion": false,

	// If true, MSBuild project system will only load projects for files that were opened in the editor. This setting is useful for big C# codebases and allows for faster initialization of code navigation features only for projects that are relevant to code that is being edited. With this setting enabled OmniSharp may load fewer projects and may thus display incomplete reference lists for symbols.
	"omnisharp.enableMsBuildLoadProjectsOnDemand": false,

	// Enables support for roslyn analyzers, code fixes and rulesets.
	"omnisharp.enableRoslynAnalyzers": false,

	// Specifies the level of logging output from the OmniSharp server.
	"omnisharp.loggingLevel": "information",

	// The maximum number of items that 'Go to Symbol in Workspace' operation can show. The limit is applied only when a positive number is specified here.
	"omnisharp.maxFindSymbolsItems": 1000,

	// The maximum number of projects to be shown in the 'Select Project' dropdown (maximum 250).
	"omnisharp.maxProjectResults": 250,

	// The minimum number of characters to enter before 'Go to Symbol in Workspace' operation shows any results.
	"omnisharp.minFindSymbolsFilterLength": 0,

	// Specifies the path to a mono installation to use when "useModernNet" is set to false, instead of the default system one. Example: "/Library/Frameworks/Mono.framework/Versions/Current"
	"omnisharp.monoPath": "",

	// Specifies whether 'using' directives should be grouped and sorted during document formatting.
	"omnisharp.organizeImportsOnFormat": false,

	// Specifies the path to OmniSharp. When left empty the OmniSharp version pinned to the C# Extension is used. This can be the absolute path to an OmniSharp executable, a specific version number, or "latest". If a version number or "latest" is specified, the appropriate version of OmniSharp will be downloaded on your behalf. Setting "latest" is an opt-in into latest beta releases of OmniSharp.
	"omnisharp.path": "",

	// The time Visual Studio Code will wait for the OmniSharp server to start. Time is expressed in seconds.
	"omnisharp.projectLoadTimeout": 60,

	// Specifies whether to include preview versions of the .NET SDK when determining which version to use for project loading. Applies when "useModernNet" is set to true.
	"omnisharp.sdkIncludePrereleases": true,

	// Specifies the path to a .NET SDK installation to use for project loading instead of the highest version installed. Applies when "useModernNet" is set to true. Example: "/home/username/dotnet/sdks/6.0.300".
	"omnisharp.sdkPath": "",

	// Specifies the version of the .NET SDK to use for project loading instead of the highest version installed. Applies when "useModernNet" is set to true. Example: "6.0.300".
	"omnisharp.sdkVersion": "",

	// Path to the .runsettings file which should be used when running unit tests.
	"omnisharp.testRunSettings": "",

	// Specifes whether OmniSharp should use VS Code editor settings for C# code formatting (use of tabs, indentation size).
	"omnisharp.useEditorFormattingSettings": true,

	// Use OmniSharp build for .NET 6. This version _does not_ support non-SDK-style .NET Framework projects, including Unity. SDK-style Framework, .NET Core, and .NET 5+ projects should see significant performance improvements.
	"omnisharp.useModernNet": true,

	// Pass the --debug flag when launching the OmniSharp server to allow a debugger to be attached.
	"omnisharp.waitForDebugger": false,

	// Forces the omnisharp-vscode extension to run in a mode that enables local Razor.VSCode deving.
	"razor.devmode": false,

	// Specifies whether to disable Razor language features.
	"razor.disabled": false,

	// Enable/disable default Razor formatter.
	"razor.format.enable": true,

	// Specifies whether to wait for debug attach when launching the language server.
	"razor.languageServer.debug": false,

	// Overrides the path to the Razor Language Server directory.
	"razor.languageServer.directory": "",

	// Overrides the path to the Razor plugin dll.
	"razor.plugin.path": "",

	// Specifies whether to output all messages [Verbose], some messages [Messages] or not at all [Off].
	//  - Off: Does not log messages from the Razor extension
	//  - Messages: Logs only some messages from the Razor extension
	//  - Verbose: Logs all messages from the Razor extension
	"razor.trace": "Off",

	// Lista de caminhos para bibliotecas e semelhantes que precisam ser importados pelo mecanismo de preenchimento automático. Por exemplo, ao usar o SDK do Google App, os caminhos não estão no caminho do sistema, portanto, precisam ser adicionados a esta lista.
	"python.autoComplete.extraPaths": [],

	// Caminho para o executável do Conda a ser usado para ativação (versão 4.4+).
	"python.condaPath": "",

	// O caminho para o Python padrão a ser usado quando a extensão for carregada pela primeira vez, não será mais usado depois que um intérprete for selecionado para o espaço de trabalho. Consulte https://aka.ms/AAfekmf para entender quando isso é usado
	"python.defaultInterpreterPath": "python",

	// Habilite suporte para source map para rastreamentos de pilha significativos em logs de erros.
	"python.diagnostics.sourceMapsEnabled": false,

	// Caminho absoluto para um arquivo que contém as definições de variável de ambiente.
	"python.envFile": "${workspaceFolder}/.env",

	// Habilita experimentos de testes A/B na extensão do Python. Se habilitado, você poderá ser incluído em aprimoramentos e/ou recursos propostos.
	"python.experiments.enabled": true,

	// Lista de experimentos para aceitar. Se estiver vazio, o usuário será atribuído aos grupos de experimentos padrão. Consulte https://github.com/microsoft/vscode-python/wiki/Experiments para obter mais detalhes.
	"python.experiments.optInto": [],

	// Lista de experimentos para recusar. Se estiver vazio, o usuário será atribuído aos grupos de experimentos padrão. Consulte https://github.com/microsoft/vscode-python/wiki/Experiments para obter mais detalhes.
	"python.experiments.optOutFrom": [],

	// Argumentos passados. Cada argumento é um item separado na matriz.
	"python.formatting.autopep8Args": [],

	// Caminho para o autopep8. Você pode usar uma versão personalizada do autopep8, modificando esta configuração para incluir o caminho completo.
	"python.formatting.autopep8Path": "autopep8",

	// Argumentos passados. Cada argumento é um item separado na matriz.
	"python.formatting.blackArgs": [],

	// Caminho para o Black. Você pode usar uma versão personalizada do Black, modificando esta configuração para incluir o caminho completo.
	"python.formatting.blackPath": "black",

	// Provedor para formatação. As opções possíveis incluem 'autopep8', 'black' e 'yapf'.
	"python.formatting.provider": "autopep8",

	// Argumentos passados. Cada argumento é um item separado na matriz.
	"python.formatting.yapfArgs": [],

	// Caminho para o yapf. Você pode usar uma versão personalizada do yapf, modificando esta configuração para incluir o caminho completo.
	"python.formatting.yapfPath": "yapf",

	// Se os módulos do Python devem ser instalados globalmente quando não estiverem usando um ambiente.
	"python.globalModuleInstallation": false,

	// Controla quando exibir informações do interpretador selecionado na barra de status.
	//  - never: Nunca exibir informações.
	//  - onPythonRelated: Exibir informações somente se arquivos relacionados ao Python forem abertos.
	//  - always: Sempre exibir informações.
	"python.interpreter.infoVisibility": "onPythonRelated",

	// Define o tipo do servidor de linguagem.
	//  - Default: Selecione automaticamente um servidor de linguagem: Pylance, se instalado e disponível, caso contrário, faça fallback para Jedi.
	//  - Jedi: Use o Jedi por trás do protocolo LSP (Language Server Protocol) como um servidor de linguagem.
	//  - Pylance: Use Pylance como um servidor de linguagem.
	//  - None: Desabilitar recursos do servidor de linguagem.
	"python.languageServer": "Default",

	// Argumentos passados. Cada argumento é um item separado na matriz.
	"python.linting.banditArgs": [],

	// Se for para executar o lint em arquivos Python usando bandit.
	"python.linting.banditEnabled": false,

	// Caminho para o bandit. Você pode usar uma versão personalizada do bandit, modificando esta configuração para incluir o caminho completo.
	"python.linting.banditPath": "bandit",

	// Diretório de trabalho opcional para linters.
	"python.linting.cwd": null,

	// Se for para executar o lint em arquivos Python.
	"python.linting.enabled": true,

	// Argumentos passados. Cada argumento é um item separado na matriz.
	"python.linting.flake8Args": [],

	// Gravidade do tipo de mensagem 'E' do Flake8.
	"python.linting.flake8CategorySeverity.E": "Error",

	// Gravidade do tipo de mensagem 'F' do Flake8.
	"python.linting.flake8CategorySeverity.F": "Error",

	// Gravidade do tipo de mensagem 'W' do Flake8.
	"python.linting.flake8CategorySeverity.W": "Warning",

	// Se for para executar o lint em arquivos Python usando flake8.
	"python.linting.flake8Enabled": false,

	// Caminho para o flake8. Você pode usar uma versão personalizada do flake8, modificando esta configuração para incluir o caminho completo.
	"python.linting.flake8Path": "flake8",

	// Padrões usados para excluir arquivos ou pastas de terem o lint executado.
	"python.linting.ignorePatterns": [
		"**/site-packages/**/*.py",
		".vscode/*.py"
	],

	// Se for para executar o lint em arquivos Python ao salvar.
	"python.linting.lintOnSave": true,

	// Controla o número máximo de problemas produzidos pelo servidor.
	"python.linting.maxNumberOfProblems": 100,

	// Argumentos passados. Cada argumento é um item separado na matriz.
	"python.linting.mypyArgs": [
		"--follow-imports=silent",
		"--ignore-missing-imports",
		"--show-column-numbers",
		"--no-pretty"
	],

	// Gravidade do tipo de mensagem 'Error' do Mypy.
	"python.linting.mypyCategorySeverity.error": "Error",

	// %python.linting.mypyCategorySeverity.note.description%.
	"python.linting.mypyCategorySeverity.note": "Information",

	// Se for para executar o lint em arquivos Python usando mypy.
	"python.linting.mypyEnabled": false,

	// Caminho para o mypy. Você pode usar uma versão personalizada do mypy, modificando esta configuração para incluir o caminho completo.
	"python.linting.mypyPath": "mypy",

	// Argumentos passados. Cada argumento é um item separado na matriz.
	"python.linting.prospectorArgs": [],

	// Se for para executar o lint em arquivos Python usando prospector.
	"python.linting.prospectorEnabled": false,

	// Caminho para o Prospector. Você pode usar uma versão personalizada do prospector, modificando esta configuração para incluir o caminho completo.
	"python.linting.prospectorPath": "prospector",

	// Argumentos passados. Cada argumento é um item separado na matriz.
	"python.linting.pycodestyleArgs": [],

	// Gravidade do tipo de mensagem 'E' do pycodestyle.
	"python.linting.pycodestyleCategorySeverity.E": "Error",

	// Gravidade do tipo de mensagem 'W' do pycodestyle.
	"python.linting.pycodestyleCategorySeverity.W": "Warning",

	// Se for para executar o lint em arquivos Python usando pycodestyle.
	"python.linting.pycodestyleEnabled": false,

	// Caminho para o pycodestyle. Você pode usar uma versão personalizada do pycodestyle, modificando esta configuração para incluir o caminho completo.
	"python.linting.pycodestylePath": "pycodestyle",

	// Argumentos passados. Cada argumento é um item separado na matriz.
	"python.linting.pydocstyleArgs": [],

	// Se for para executar o lint em arquivos Python usando pydocstyle.
	"python.linting.pydocstyleEnabled": false,

	// Caminho para o pydocstyle. Você pode usar uma versão personalizada do pydocstyle, modificando esta configuração para incluir o caminho completo.
	"python.linting.pydocstylePath": "pydocstyle",

	// Argumentos passados. Cada argumento é um item separado na matriz.
	"python.linting.pylamaArgs": [],

	// Se for para executar o lint em arquivos Python usando pylama.
	"python.linting.pylamaEnabled": false,

	// Caminho para o pylama. Você pode usar uma versão personalizada do pylama, modificando esta configuração para incluir o caminho completo.
	"python.linting.pylamaPath": "pylama",

	// Argumentos passados. Cada argumento é um item separado na matriz.
	"python.linting.pylintArgs": [],

	// Gravidade do tipo de mensagem 'Convention/C' do Pylint.
	"python.linting.pylintCategorySeverity.convention": "Information",

	// Gravidade do tipo de mensagem 'Error/E' do Pylint.
	"python.linting.pylintCategorySeverity.error": "Error",

	// Gravidade do tipo de mensagem 'Error/F' do Pylint.
	"python.linting.pylintCategorySeverity.fatal": "Error",

	// Gravidade do tipo de mensagem 'Refactor/R' do Pylint.
	"python.linting.pylintCategorySeverity.refactor": "Hint",

	// Gravidade do tipo de mensagem 'Warning/W' do Pylint.
	"python.linting.pylintCategorySeverity.warning": "Warning",

	// Se for para executar o lint em arquivos Python usando pylint.
	"python.linting.pylintEnabled": false,

	// Caminho para o Pylint. Você pode usar uma versão personalizada do pylint, modificando esta configuração para incluir o caminho completo.
	"python.linting.pylintPath": "pylint",

	// O nível de log no qual a extensão faz logon, o padrão é 'error'
	"python.logging.level": "error",

	// Caminho para o executável pipenv a ser usado para ativação.
	"python.pipenvPath": "pipenv",

	// Caminho para o executável poetry.
	"python.poetryPath": "poetry",

	// Determines if Pylance's experimental LSP notebooks support is used or not.
	"python.pylanceLspNotebooksEnabled": true,

	// Argumentos passados. Cada argumento é um item separado na matriz.
	"python.sortImports.args": [],

	// Caminho para o script isort, padrão usando a versão interna
	"python.sortImports.path": "",

	// Defina esta configuração para o diretório de log do TensorBoard preferencial para ignorar o prompt de diretório de log ao iniciar o TensorBoard.
	"python.tensorBoard.logDirectory": "",

	// Ativar o Ambiente Python no Terminal atual ao carregar a Extensão.
	"python.terminal.activateEnvInCurrentTerminal": false,

	// Ativar o Ambiente do Python no Terminal criado usando a Extensão.
	"python.terminal.activateEnvironment": true,

	// Ao executar um arquivo no terminal, se deve ser executado no diretório do arquivo, em vez da pasta aberta atual.
	"python.terminal.executeInFileDir": false,

	// Ao iniciar um processo Python, se o foco será no terminal.
	"python.terminal.focusAfterLaunch": false,

	// Argumentos de inicialização do Python a serem usados ao executar um arquivo no terminal.
	"python.terminal.launchArgs": [],

	// Habilite a descoberta de teste de execução automática ao salvar um arquivo de teste.
	"python.testing.autoTestDiscoverOnSaveEnabled": true,

	// Diretório de trabalho opcional para testes.
	"python.testing.cwd": null,

	// Número da porta usado para depuração de testes.
	"python.testing.debugPort": 3000,

	// Solicitar a configuração de uma estrutura de teste se os diretórios de testes potenciais estiverem descobertos.
	"python.testing.promptToConfigure": true,

	// Argumentos passados. Cada argumento é um item separado na matriz.
	"python.testing.pytestArgs": [],

	// Habilitar teste usando pytest.
	"python.testing.pytestEnabled": false,

	// Caminho para o pytest (pytest). Você pode usar uma versão personalizada do pytest, modificando esta configuração para incluir o caminho completo.
	"python.testing.pytestPath": "pytest",

	// Argumentos passados. Cada argumento é um item separado na matriz.
	"python.testing.unittestArgs": [
		"-v",
		"-s",
		".",
		"-p",
		"*test*.py"
	],

	// Habilitar o teste usando unittest.
	"python.testing.unittestEnabled": false,

	// Pastas em seu diretório base para procurar ambientes virtuais (dá suporte a pyenv, direnv e virtualenvwrapper por padrão).
	"python.venvFolders": [],

	// Caminho para a pasta com uma lista de Ambientes Virtuais (por exemplo, ~/.pyenv, ~/Envs, ~/.virtualenvs).
	"python.venvPath": "",

	// Offer auto-import completions.
	"python.analysis.autoImportCompletions": true,

	// Automatically add common search paths like 'src'.
	"python.analysis.autoSearchPaths": true,

	// Add parentheses to function completions.
	"python.analysis.completeFunctionParens": false,

	// Analysis mode for diagnostics.
	//  - openFilesOnly: Analyzes and reports errors on only open files.
	//  - workspace: Analyzes and reports errors on all files in the workspace.
	"python.analysis.diagnosticMode": "openFilesOnly",

	// Allows a user to override the severity levels for individual diagnostics.
	"python.analysis.diagnosticSeverityOverrides": {},

	// Paths of directories or files that should not be included. These override the include directories, allowing specific subdirectories to be excluded. Note that files in the exclude paths may still be included in the analysis if they are referenced (imported) by source files that are not excluded. Paths may contain wildcard characters ** (a directory or multiple levels of directories), * (a sequence of zero or more characters), or ? (a single character). If no exclude paths are specified, Pylance automatically excludes the following: `**/node_modules`, `**/__pycache__`, `.git` and any virtual environment directories.
	"python.analysis.exclude": [],

	// Allow using '.', '(' as commit characters when applicable.
	"python.analysis.extraCommitChars": true,

	// Additional import search resolution paths
	"python.analysis.extraPaths": [],

	// Paths of directories or files whose diagnostic output (errors and warnings) should be suppressed even if they are an included file or within the transitive closure of an included file. Paths may contain wildcard characters ** (a directory or multiple levels of directories), * (a sequence of zero or more characters), or ? (a single character). If no value is provided, the value of python.linting.ignorePatterns (if set) will be used.
	"python.analysis.ignore": [],

	// Defines the default format for import module.
	//  - absolute: Use absolute import format when creating new import statement.
	//  - relative: Use relative import format when creating new import statement.
	"python.analysis.importFormat": "absolute",

	// Paths of directories or files that should be included. If no paths are specified, Pylance defaults to the workspace root directory. Paths may contain wildcard characters ** (a directory or multiple levels of directories), * (a sequence of zero or more characters), or ? (a single character).
	"python.analysis.include": [],

	// Index installed third party libraries and user files for language features such as auto-import, add import, workspace symbols and etc.
	"python.analysis.indexing": true,

	// Enable/disable inlay hints for function return types:
	// ```python
	// def foo(x:int) ' -> int ':
	// 	return x
	// ```
	// 
	"python.analysis.inlayHints.functionReturnTypes": false,

	// Enable/disable inlay hints for variable types:
	// ```python
	// foo ' :list[str] ' = ["a"]
	//  
	// ```
	// 
	"python.analysis.inlayHints.variableTypes": false,

	// Specifies the level of logging for the Output panel
	"python.analysis.logLevel": "Information",

	// Used to override how many levels under installed packages to index on a per package basis. By default, only top-level modules are indexed (depth = 1). To index submodules, increase depth by 1 for each level of submodule you want to index. Accepted values are:
	// ```JSON
	// {"name": "package name (str)",
	//  "depth": "depth to scan (int)",
	//  "includeAllSymbols": "whether to include all symbols (bool)"}
	// 
	// ```
	// If `include all symbols` is set to `false`, only symbols in each package's `__all__` are included. When it's set to `true`, Pylance will index every module/top level symbol declarations in the file.  
	//   
	// Usage example: 
	// ```JSON
	// [
	// 	{"name": "sklearn", "depth": 2, "includeAllSymbols": true},
	// 	{"name": "matplotlib", "depth": 3, "includeAllSymbols": false}
	// ]
	// 
	// ```
	// 
	"python.analysis.packageIndexDepths": [
		{
			"name": "sklearn",
			"depth": 2
		},
		{
			"name": "matplotlib",
			"depth": 2
		},
		{
			"name": "scipy",
			"depth": 2
		},
		{
			"name": "django",
			"depth": 2
		}
	],

	// Path to directory containing custom type stub files.
	"python.analysis.stubPath": "typings",

	// Defines the default rule set for type checking.
	//  - off: Surfaces diagnostics for invalid syntax, unresolved imports, undefined variables.
	//  - basic: All "off" rules + basic type checking rules.
	//  - strict: All "off" rules + all type checking rules.
	"python.analysis.typeCheckingMode": "off",

	// Paths to look for typeshed modules.
	"python.analysis.typeshedPaths": [],

	// Use library implementations to extract type information when type stub is not present.
	"python.analysis.useLibraryCodeForTypes": true,

	// Depois de executar uma célula, adicione uma lente de código 'Goto' na célula. Observe que desabilitar todas as lentes de código desabilita essa lente de código também.
	"jupyter.addGotoCodeLenses": true,

	// Essa configuração foi preterida e será removida na próxima versão.
	// Permite que um usuário importe um jupyter notebook para um arquivo Python sempre que um for aberto.
	"jupyter.allowImportFromNotebook": true,

	// Essa configuração foi preterida e será removida na próxima versão.
	// Permitir a entrada do código Python diretamente no Janela interativa
	"jupyter.allowInput": true,

	// Essa configuração foi preterida porque Live Share suporte para a janela interativa não existe mais na Extensão do Jupyter.
	// Permitir que o Janela interativa seja compartilhado durante uma sessão Live Share sessão
	"jupyter.allowLiveShare": true,

	// Permitir a conexão do Janela interativa a um servidor Jupyter https que não tenha certificados válidos. Isso pode ser um risco à segurança, portanto, use somente para servidores conhecidos e confiáveis.
	"jupyter.allowUnauthorizedRemoteConnection": false,

	// Essa configuração é obsoleta. Use a configuração 'interactiveWindow.alwaysScrollOnNewCell'.
	// Role automaticamente a janela interativa para mostrar a saída da última instrução executada. Se for false, a janela interativa só rolará automaticamente se a parte inferior da célula anterior estiver visível.
	"jupyter.alwaysScrollOnNewCell": false,

	// Avisar o usuário antes de reiniciar um kernel.
	"jupyter.askForKernelRestart": true,

	// Avisar o usuário antes de tentar abrir quadros de dados muito grandes.
	"jupyter.askForLargeDataFrames": true,

	// Conjunto de comandos a serem colocados como lentes de código acima de uma célula.
	"jupyter.codeLenses": "jupyter.runcell, jupyter.runallcellsabove, jupyter.debugcell",

	// Expressão regular usada para identificar células de código. Todo o código até a próxima correspondência é considerado parte desta célula.
	"jupyter.codeRegularExpression": "^(#\\s*%%|#\\s*\\<codecell\\>|#\\s*In\\[\\d*?\\]|#\\s*In\\[ \\])",

	// Essa configuração foi preterida. Use `interactiveWindow.collapseCellInputCode`.
	// Recolha o código de entrada da célula por padrão.
	"jupyter.collapseCellInputCodeByDefault": true,

	// Essa configuração foi preterida e será removida em uma versão futura.
	// Se a cor de espiada do tema deve ou não ser usada como plano de fundo para a caixa de entrada.
	"jupyter.colorizeInputBox": true,

	// Conjunto de comandos de depuração a serem colocados como lentes de código acima de uma célula durante a depuração.
	"jupyter.debugCodeLenses": "jupyter.debugcontinue, jupyter.debugstop, jupyter.debugstepover",

	// Ao depurar, depure apenas meu código.
	"jupyter.debugJustMyCode": true,

	// Caminho para bits de depuração para depuração de células.
	"jupyter.debugpyDistPath": "",

	// Desenhe um realce atrás da célula ativa no momento.
	"jupyter.decorateCells": true,

	// Marcador de célula usado para delinear uma célula em um arquivo python.
	"jupyter.defaultCellMarker": "# %%",

	// Quando verdadeiro, desabilita o Jupyter de ser iniciado automaticamente para você. Em vez disso, você deve executar uma célula para iniciar o Jupyter.
	"jupyter.disableJupyterAutoStart": false,

	// Permite mover para a próxima célula ao clicar em uma lente de código 'Executar Célula'.
	"jupyter.enableAutoMoveToNextCell": true,

	// Habilita a lente de código para 'células' em um arquivo Python.
	"jupyter.enableCellCodeLens": true,

	// Habilita o suporte a Jedi para preenchimentos estendidos do IntelliSense na execução de kernels Jupyter (consulte esta [configuração](https://ipython.readthedocs.io/en/stable/config/options/terminal.html?highlight=use_jedi#configtrait-Completer.use_jedi)). Isso pode afetar muito o desempenho da execução da célula do notebook. Use com cuidado.
	"jupyter.enableExtendedKernelCompletions": false,

	// Essa configuração foi preterida, pois os atalhos de teclado do Jupyter foram movidos para a extensão ms-toolsai.jupyter-keymap. Se você quiser desabilitar os atalhos de teclado do Jupyter, desinstale ou desabilite essa extensão.
	// Habilita atalhos de teclado no estilo Jupyter para Notebooks.
	"jupyter.enableKeyboardShortcuts": true,

	// Essa configuração foi preterida e será removida na próxima versão.
	// Habilita a rolagem para saídas de célula grandes no Editor do Notebook. Essa configuração não se aplica à Janela Interativa.
	"jupyter.enableScrollingForCellOutputs": true,

	// Adicione PYTHONNOUSERSITE aos kernels antes de iniciar. Isso impede que pacotes de site globais/de usuário sejam usados no PYTHONPATH do kernel.
	"jupyter.excludeUserSitePackages": false,

	// Escolha o tipo de seletor de kernel a ser usado.
	//  - Stable: O selecionador de kernel de envio atual.
	//  - OnlyOneTypeOfKernel: Faz com que o selecionador mostre apenas kernels remotos ou locais, não ambos. E fornece opções para alternar entre kernels locais e remotos no seletor.
	//  - Insiders: Insiders é a mais nova versão experimental em desenvolvimento.
	"jupyter.experimental.kernelPickerType": "Stable",

	// Habilita/desabilita testes A/B.
	"jupyter.experiments.enabled": true,

	// Lista de experimentos a serem aceitos. Se estiver vazio, o usuário será atribuído aos grupos de experimentos padrão. [Saiba mais](https://github.com/microsoft/vscode-jupyter/wiki/Experiments).
	"jupyter.experiments.optInto": [],

	// Lista de experimentos para recusar. Se estiver vazio, o usuário será atribuído aos grupos de experimentos padrão. [Saiba mais](https://github.com/microsoft/vscode-jupyter/wiki/Experiments).
	"jupyter.experiments.optOutFrom": [],

	// Habilite a exportação de um arquivo python para um jupyter notebook e execute todas as células ao fazer isso.
	"jupyter.exportWithOutputEnabled": false,

	// Gerar saída SVG para gráficos de notebook. Isso permite uma melhor exibição no visualizador de gráficos às custas da velocidade de geração e do tamanho do arquivo.
	"jupyter.generateSVGPlots": false,

	// Essa configuração foi preterida e será removida na próxima versão.
	// Não use o tema VS Code no Janela interativa (requer recarregamento de VS Code). Isso força o Janela interativa usar 'Light +(default light)' e desabilita os padrões matplotlib.
	"jupyter.ignoreVscodeTheme": false,

	// Comportamento da Janela Interativa. 'perFile' criará uma nova janela interativa para cada arquivo que executa uma célula. 'single' permite uma única janela. 'multiple' permite a criação de vários.
	"jupyter.interactiveWindowMode": "multiple",

	// Onde abrir uma Janela Interativa que não está associada a um arquivo python. 'beside' abrirá a janela interativa à direita do editor ativo. 'active' abrirá a janela interativa no lugar do editor ativo. 'secondGroup' abrirá a janela interativa no segundo grupo de editores.
	"jupyter.interactiveWindowViewColumn": "secondGroup",

	// Quando um Editor do Notebook ou um servidor Jupyter de Janela Interativa for iniciado, esses argumentos serão passados para ele. Por padrão, essa lista é gerada pela Extensão do Jupyter.
	"jupyter.jupyterCommandLineArguments": [],

	// Quantidade de tempo (em ms) para aguardar uma interrupção antes de solicitar a reinicialização do kernel do Jupyter.
	"jupyter.jupyterInterruptTimeout": 10000,

	// Número de vezes para tentar se conectar ao Jupyter Notebook
	"jupyter.jupyterLaunchRetries": 3,

	// Quantidade de tempo (em ms) para aguardar a inicialização Jupyter Notebook servidor.
	"jupyter.jupyterLaunchTimeout": 60000,

	// Lista de kernels do Jupyter e/ou ambientes Python que devem ser excluídos do seletor de kernel.
	"jupyter.kernels.filter": [],

	// Enter fully qualified paths to Kernel specification files that are to be trusted. E.g. 'C:\Program Data\Jupyter\kernels\python3\kernel.json'.  
	// **Note**: Kernels can execute code with user privileges. Click [here](https://aka.ms/JupyterTrustedKernelPaths) for further details.
	"jupyter.kernels.trusted": [],

	// Essa configuração foi preterida e será removida na próxima versão.
	// Tempo de espera para que as conexões de convidado verifiquem se a Extensão do Python está instalada.
	"jupyter.liveShareConnectionTimeout": 1000,

	// O nível de log no qual a extensão faz logon.
	"jupyter.logging.level": "debug",

	// Cria painéis de saída separados para saída do console do servidor de kernels/jupyter
	"jupyter.logKernelOutputSeparately": false,

	// Remover comentários de atribuições de shell (#!), mágica de linha (#!%) e mágica de célula (#!%%) ao analisar células de código.
	"jupyter.magicCommandsAsComments": false,

	// Expressão regular usada para identificar células markdown. Todos os comentários após essa expressão são considerados parte do markdown.
	"jupyter.markdownRegularExpression": "^(#\\s*%%\\s*\\[markdown\\]|#\\s*\\<markdowncell\\>)",

	// Essa configuração foi preterida e será removida na próxima versão.
	// Tamanho máximo (em pixels) da saída de texto no Editor do Notebook antes que uma barra de rolagem seja exibida. Primeiro, habilite a rolagem para saídas de célula nas configurações.
	"jupyter.maxOutputSize": 400,

	// Acrescente uma nova célula vazia a um arquivo de janela interativa ao executar a última célula no momento.
	"jupyter.newCellOnRunLast": true,

	// Defina o diretório raiz para a execução de blocos de anotações e a Janela interativa.
	"jupyter.notebookFileRoot": "${fileDirname}",

	// Determines if Pylance manages notebook concat doc creation.
	"jupyter.pylanceHandlesNotebooks": true,

	// Caracteres que disparam o preenchimento automático em um kernel jupyter do Python.
	"jupyter.pythonCompletionTriggerCharacters": ".%'\"",

	// O método a ser usado ao exportar um notebook para um arquivo Python. 'direct' copiará o código diretamente como está. 'commentMagics' comentará linhas começando com mágicas de linha (%), mágicas de célula (%%) e comandos de shell (!). 'nbconvert' instalará o recurso e o usará para a conversão, que pode converter a sintaxe iPython na sintaxe do Python.
	"jupyter.pythonExportMethod": "direct",

	// Ao depurar uma célula, abra essa porta na caixa remota. Se -1 for especificado, será tentada uma porta aleatória entre 8889 e 9000.
	"jupyter.remoteDebuggerPort": -1,

	// Uma série de instruções do Python ou comandos mágicos do iPython. Pode ser uma matriz de cadeias de caracteres ou uma única cadeia de caracteres com comandos separados por '\n'. Os comandos serão executados silenciosamente sempre que a janela interativa for carregada. Por exemplo, defina isso como '%load_ext autoreload\n%autoreload 2' para recarregar automaticamente as alterações feitas em arquivos importados sem precisar reiniciar a sessão interativa.
	"jupyter.runStartupCommands": "",

	// Essa configuração foi preterida e será removida na próxima versão.
	// Pesquise todos os interpretadores do Python instalados para uma instalação do Jupyter ao iniciar o Janela interativa
	"jupyter.searchForJupyter": true,

	// Ao pressionar Shift+Enter, envie o código selecionado em um arquivo Python para a janela interativa do Jupyter em vez do terminal do Python.
	"jupyter.sendSelectionToInteractiveWindow": false,

	// Essa configuração foi preterida e será removida na próxima versão.
	// Mostrar código de entrada da célula.
	"jupyter.showCellInputCode": true,

	// Mostre apenas um tipo de kernel no seletor de kernel. Isso evita que kernels locais e remotos sejam mostrados ao mesmo tempo no seletor de kernel. Tem precedência sobre kernelPickerType se especificado.
	"jupyter.showOnlyOneTypeOfKernel": "false",

	// Mostrar o botão Estrutura de Tópicos na barra de ferramentas do Jupyter Notebook.
	"jupyter.showOutlineButtonInNotebookToolbar": true,

	// Abra a Exibição de Variável ao iniciar uma sessão Executar por Linha.
	"jupyter.showVariableViewWhenDebugging": true,

	// Pare de executar células se uma célula gerar uma exceção.
	"jupyter.stopOnError": true,

	// Ao depurar uma célula, pare na primeira linha.
	"jupyter.stopOnFirstLineWhileDebugging": true,

	// Essa configuração foi preterida em favor de `notebook.output.textLineLimit`. Essa configuração será removida em uma versão futura.
	// Limite a quantidade de texto na saída de texto da célula Interativa a esse valor. 0 para permitir qualquer quantidade de caracteres.
	"jupyter.textOutputLimit": 20000,

	// No tema do Editor da Janela interativa e do Notebook, matplotlib emite para corresponder ao tema do editor do VS Code.
	"jupyter.themeMatplotlibPlots": false,

	// Ao executar o Jupyter localmente, crie uma configuração do Jupyter vazia padrão para a Janela interativa
	"jupyter.useDefaultConfigForJupyter": true,

	// Tipos a serem excluídos da exibição no Gerenciador de variáveis interativas
	"jupyter.variableExplorerExclude": "module;function;builtin_function_or_method;ABCMeta;type",

	// Linguagem para mapeamento de consulta para retornar a lista de variáveis ativas em um kernel do Jupyter. Usado pelo Gerenciador de Variáveis na Janela Interativa e Notebooks. Exemplo:
	// ```
	// [
	//   {
	//     "language": "python",
	//     "query": "%who_ls",
	//     "parseExpr": "'(\\w+)'"
	//   }
	// ]
	// ```
	"jupyter.variableQueries": [],

	// Define o local e a ordem das fontes em que os arquivos de script para Widgets são baixados (por exemplo, ipywscriptst, bqplot, beakerx, ipyleaflet etc.). Não selecionar nenhuma dessas opções pode resultar em widgets que não estão sendo renderizados ou funcionam corretamente. Consulte [aqui](https://aka.ms/PVSCIPyWidgets) para obter mais informações. Depois de atualizado, você precisará reiniciar o Kernel.
	//  - jsdelivr.com: Carrega scripts de widget (javascript) de https://www.jsdelivr.com/
	//  - unpkg.com: Carrega scripts de widget (javascript) de https://unpkg.com/
	"jupyter.widgetScriptSources": [],

	// Se definido, a saída no log WSL mostra informações de depuração.
	"remote.WSL.debug": false,

	// Se definido, a sondagem é usada para a observar arquivos dentro da WSL1. A sondagem pode ter uso intensivo de CPU, mas corrige o problema da WSL1 de que as pastas não podem ser renomeadas quando vigiadas. Esta opção requer reinicialização para entrar em vigor.
	"remote.WSL.fileWatcher.polling": false,

	// O intervalo de sondagem do observador de arquivos em ms usado dentro das distros WSL1 se 'remote.WSL.fileWatcher.polling' estiver definido.
	// Esta opção requer reinicialização para entrar em vigor.
	"remote.WSL.fileWatcher.pollingInterval": 5000,

	// Use o `remote.WSL2.connectionMethod` em seu lugar.
	// Se definida, a conexão com um servidor VS Code em execução no WSL2 usará localhost (::1). Se não estiver definida, a conexão usará diretamente os endereços IP da WSL2 VNM, se acessível ou localhost, se não estiver definida.
	"remote.WSL.server.connectThroughLocalhost": false,

	// Se definidas, as janelas WSL obtêm o ambiente a partir do shell do qual foi aberto.
	"remote.WSL.useShellEnvironment": true,

	// Especifica como a extensão WSL se conectará ao servidor VS Code em execução nas distros WSL1. Esta opção requer reinicialização para entrar em vigor.
	//  - localhost: Conecta-se ao servidor em WSL através do 127.0.0.1, que está sendo compartilhado entre Windows e WSL1.
	//  - wslExeProxy: Conecta-se ao servidor em WSL através de um servidor proxy local que usa 'wsl.exe' para encaminhar a conexão ao WSL.
	"remote.WSL1.connectionMethod": "localhost",

	// Especifica como a extensão WSL se conectará ao servidor VS Code em execução nas distros WSL2. Esta opção requer reinicialização para entrar em vigor.
	//  - localhost: Conecta-se ao servidor em WSL por meio do localhost (::1) que é encaminhado para a WSL2 VM pelo Windows.
	//  - wsl2VMAddress: Conecta-se ao servidor em WSL por meio do endereço IP da WSL2 VM.
	//  - wslExeProxy: Conecta-se ao servidor em WSL através de um servidor proxy local que usa 'wsl.exe' para encaminhar a conexão ao WSL.
	"remote.WSL2.connectionMethod": "wslExeProxy",

	// Only search for references within open documents. Enable this in large workspaces if memory is limited.
	"powershell.analyzeOpenDocumentsOnly": false,

	// Specifies the URL of the GitHub project in which to generate bug reports.
	"powershell.bugReporting.project": "https://github.com/PowerShell/vscode-powershell",

	// Show buttons in the editor title-bar for moving the panel around.
	"powershell.buttons.showPanelMovementButtons": false,

	// Show the Run and Run Selection buttons in the editor title-bar.
	"powershell.buttons.showRunButtons": true,

	// Enables syntax based code folding. When disabled, the default indentation based code folding is used.
	"powershell.codeFolding.enable": true,

	// Shows the last line of a folded section similar to the default VSCode folding style. When disabled, the entire folded region is hidden.
	"powershell.codeFolding.showLastLine": true,

	// Adds a space before and after the pipeline operator ('|') if it is missing.
	"powershell.codeFormatting.addWhitespaceAroundPipe": true,

	// Align assignment statements in a hashtable or a DSC Configuration.
	"powershell.codeFormatting.alignPropertyValuePairs": true,

	// Replaces aliases with their aliased name.
	"powershell.codeFormatting.autoCorrectAliases": false,

	// Removes redundant semicolon(s) at the end of a line where a line terminator is sufficient.
	"powershell.codeFormatting.avoidSemicolonsAsLineTerminators": false,

	// Does not reformat one-line code blocks, such as "if (...) {...} else {...}".
	"powershell.codeFormatting.ignoreOneLineBlock": true,

	// Adds a newline (line break) after a closing brace.
	"powershell.codeFormatting.newLineAfterCloseBrace": true,

	// Adds a newline (line break) after an open brace.
	"powershell.codeFormatting.newLineAfterOpenBrace": true,

	// Places open brace on the same line as its associated statement.
	"powershell.codeFormatting.openBraceOnSameLine": true,

	// Multi-line pipeline style settings (default: NoIndentation).
	"powershell.codeFormatting.pipelineIndentationStyle": "NoIndentation",

	// Sets the codeformatting options to follow the given indent style in a way that is compatible with PowerShell syntax. For more information about the brace styles please refer to https://github.com/PoshCode/PowerShellPracticeAndStyle/issues/81.
	"powershell.codeFormatting.preset": "Custom",

	// Trims extraneous whitespace (more than 1 character) before and after the pipeline operator ('|').
	"powershell.codeFormatting.trimWhitespaceAroundPipe": false,

	// Use single quotes if a string is not interpolated and its value does not contain a single quote.
	"powershell.codeFormatting.useConstantStrings": false,

	// Use correct casing for cmdlets.
	"powershell.codeFormatting.useCorrectCasing": false,

	// Adds a space after a separator (',' and ';').
	"powershell.codeFormatting.whitespaceAfterSeparator": true,

	// Adds spaces before and after an operator ('=', '+', '-', etc.).
	"powershell.codeFormatting.whitespaceAroundOperator": true,

	// Please use the "powershell.codeFormatting.addWhitespaceAroundPipe" setting instead. If you've used this setting before, we have moved it for you automatically.
	// REMOVED. Please use the "powershell.codeFormatting.addWhitespaceAroundPipe" setting instead. If you've used this setting before, we have moved it for you automatically.
	"powershell.codeFormatting.whitespaceAroundPipe": true,

	// Adds a space between a keyword and its associated scriptblock expression.
	"powershell.codeFormatting.whitespaceBeforeOpenBrace": true,

	// Adds a space between a keyword (if, elseif, while, switch, etc) and its associated conditional expression.
	"powershell.codeFormatting.whitespaceBeforeOpenParen": true,

	// Removes redundant whitespace between parameters.
	"powershell.codeFormatting.whitespaceBetweenParameters": false,

	// Adds a space after an opening brace ('{') and before a closing brace ('}').
	"powershell.codeFormatting.whitespaceInsideBrace": true,

	// An explicit start path where the PowerShell Extension Terminal will be launched. Both the PowerShell process's and the shell's location will be set to this directory. A fully resolved path must be provided!
	"powershell.cwd": null,

	// Determines whether a temporary PowerShell Extension Terminal is created for each debugging session. Useful for debugging PowerShell classes and binary modules.
	"powershell.debugging.createTemporaryIntegratedConsole": false,

	// Specifies an alternate path to the folder containing modules that are bundled with the PowerShell extension (i.e. PowerShell Editor Services, PSScriptAnalyzer, Plaster)
	"powershell.developer.bundledModulesPath": "",

	// Sets the logging verbosity level for the PowerShell Editor Services host executable.  Valid values are 'Diagnostic', 'Verbose', 'Normal', 'Warning', 'Error', and 'None'
	"powershell.developer.editorServicesLogLevel": "Normal",

	// Launches the language service with the /waitForDebugger flag to force it to wait for a .NET debugger to attach before proceeding.
	"powershell.developer.editorServicesWaitForDebugger": false,

	// An array of strings that enable experimental features in the PowerShell extension.
	"powershell.developer.featureFlags": [],

	// When the PowerShell extension is starting up, it checks for a session file in order to connect to the language server. This setting determines how long until checking for the session file times out. (default is 240 seconds or 4 minutes)
	"powershell.developer.waitForSessionFileTimeoutSeconds": 240,

	// Loads user and system-wide PowerShell profiles (profile.ps1 and Microsoft.VSCode_profile.ps1) into the PowerShell session. This affects IntelliSense and interactive script execution, but it does not affect the debugger.
	"powershell.enableProfileLoading": true,

	// Displays a code lens above function definitions showing the number of times the function is referenced in the workspace. Large workspaces should disable this setting due to high performance impact.
	"powershell.enableReferencesCodeLens": true,

	// Controls the comment-based help completion behavior triggered by typing '##'. Set the generated help style with 'BlockComment' or 'LineComment'. Disable the feature with 'Disabled'.
	"powershell.helpCompletion": "BlockComment",

	// Switches focus to the console when a script selection is run or a script file is debugged. This is an accessibility feature. To disable it, set to false.
	"powershell.integratedConsole.focusConsoleOnExecute": true,

	// Use the vscode API to clear the terminal since that's the only reliable way to clear the scrollback buffer. Turn this on if you're used to 'Clear-Host' clearing scroll history as well as clear-terminal-via-lsp.
	"powershell.integratedConsole.forceClearScrollbackBuffer": false,

	// Shows the Extension Terminal when the PowerShell extension is initialized. When disabled, the pane is not opened on startup, but the Extension Terminal is still created in order to power the extension's features.
	"powershell.integratedConsole.showOnStartup": true,

	// Starts the Extension Terminal in the background. WARNING: If this is enabled, to access the terminal you must run the 'Show Extension Terminal' command, and once shown it cannot be put back into the background. This option completely hides the Extension Terminal from the terminals pane. You are probably looking for the 'showOnStartup' option instead.
	"powershell.integratedConsole.startInBackground": false,

	// Do not show the Powershell Extension Terminal banner on launch
	"powershell.integratedConsole.suppressStartupBanner": false,

	// Falls back to the legacy ReadLine experience. This will disable the use of PSReadLine in the PowerShell Extension Terminal.
	"powershell.integratedConsole.useLegacyReadLine": false,

	// This setting controls the appearance of the 'Run Tests' and 'Debug Tests' CodeLenses that appears above Pester tests.
	"powershell.pester.codeLens": true,

	// Defines the verbosity of output to be used when debugging a test or a block. For Pester 5 and newer the default value Diagnostic will print additional information about discovery, skipped and filtered tests, mocking and more.
	"powershell.pester.debugOutputVerbosity": "Diagnostic",

	// Defines the verbosity of output to be used. For Pester 5 and newer the default value FromPreference, will use the Output settings from the $PesterPreference defined in the caller context, and will default to Normal if there is none. For Pester 4 the FromPreference and Normal options map to All, and Minimal option maps to Fails.
	"powershell.pester.outputVerbosity": "FromPreference",

	// Use a CodeLens that is compatible with Pester 4. Disabling this will show 'Run Tests' on all It, Describe and Context blocks, and will correctly work only with Pester 5 and newer.
	"powershell.pester.useLegacyCodeLens": true,

	// Specifies a list of versionName / exePath pairs where exePath points to a non-standard install location for PowerShell and versionName can be used to reference this path with the powershell.powerShellDefaultVersion setting.
	"powershell.powerShellAdditionalExePaths": {},

	// Specifies the PowerShell version name, as displayed by the 'PowerShell: Show Session Menu' command, used when the extension loads e.g "Windows PowerShell (x86)" or "PowerShell Core 7 (x64)". You can specify additional PowerShell executables by using the "powershell.powerShellAdditionalExePaths" setting.
	"powershell.powerShellDefaultVersion": "",

	// Please use the "powershell.powerShellAdditionalExePaths" setting instead.
	// REMOVED: Please use the "powershell.powerShellAdditionalExePaths" setting instead.
	"powershell.powerShellExePath": "",

	// This prompt has been removed as it's no longer strictly necessary to upgrade the PackageManagement module.
	// REMOVED: Specifies whether you should be prompted to update your version of PackageManagement if it's under 1.4.6.
	"powershell.promptToUpdatePackageManagement": false,

	// Specifies whether you should be prompted to update your version of PowerShell.
	"powershell.promptToUpdatePowerShell": true,

	// Enables real-time script analysis from PowerShell Script Analyzer. Uses the newest installed version of the PSScriptAnalyzer module or the version bundled with this extension, if it is newer.
	"powershell.scriptAnalysis.enable": true,

	// Specifies the path to a PowerShell Script Analyzer settings file. To override the default settings for all projects, enter an absolute path, or enter a path relative to your workspace.
	"powershell.scriptAnalysis.settingsPath": "PSScriptAnalyzerSettings.psd1",

	// Specify array of Modules to exclude from Command Explorer listing.
	"powershell.sideBar.CommandExplorerExcludeFilter": [],

	// Specifies the visibility of the Command Explorer in the PowerShell Side Bar.
	"powershell.sideBar.CommandExplorerVisibility": true,

	// Starts the PowerShell extension's underlying PowerShell process as a login shell, if applicable.
	"powershell.startAsLoginShell.linux": false,

	// Starts the PowerShell extension's underlying PowerShell process as a login shell, if applicable.
	"powershell.startAsLoginShell.osx": true,

	// Starts PowerShell extension features automatically when a PowerShell file opens. If false, to start the extension, use the 'PowerShell: Restart Current Session' command. IntelliSense, code navigation, Extension Terminal, code formatting, and other features are not enabled until the extension starts.
	"powershell.startAutomatically": true,

	// This setting was removed when the PowerShell installation searcher was added. Please use the "powershell.powerShellAdditionalExePaths" setting instead.
	// REMOVED: Uses the 32-bit language service on 64-bit Windows. This setting has no effect on 32-bit Windows or on the PowerShell extension debugger, which has its own architecture configuration.
	"powershell.useX86Host": false,

	// Enables various accessibility features, such as audio cues about what is happening in the session.
	"liveshare.accessibility.accessibilityFeaturesEnabled": false,

	// Output device to play audio in accessibility mode.
	"liveshare.accessibility.outputDevice": "Default",

	// Enables sound effects about activity.
	"liveshare.accessibility.soundsEnabled": true,

	// Controls the volume of sound audio in accessibility mode (between 0 and 100).
	"liveshare.accessibility.soundVolume": 100,

	// Controls the rate of speech in accessibility mode.
	"liveshare.accessibility.speechRate": 2,

	// The voice used for speech in accessibility mode.
	"liveshare.accessibility.voice": "en-US-Jenny",

	// Enables spoken announcements about activity.
	"liveshare.accessibility.voiceEnabled": true,

	// Controls the volume of voice audio in accessibility mode (between 0 and 100).
	"liveshare.accessibility.voiceVolume": 100,

	// Allow guests to start and stop debugging sessions.
	"liveshare.allowGuestDebugControl": false,

	// Allow guests to run and terminate workspace tasks.
	"liveshare.allowGuestTaskControl": false,

	// Specifies who to allow session invitations from.
	"liveshare.allowInvites": "contacts",

	// Ensures that the session's host is always followed.
	"liveshare.alwaysFollowHost": false,

	// Controls how to handle join requests from anonymous guests.
	"liveshare.anonymousGuestApproval": "prompt",

	// Controls whether web servers are automatically shared, when started from the integrated terminal or well-known extensions.
	"liveshare.autoShareServers": true,

	// Controls whether terminals are automatically shared with guests (read-only).
	"liveshare.autoShareTerminals": true,

	// Controls whether to show the CodeLens for starting a collaboration session.
	"liveshare.codeLens": true,

	// Controls whether to allow comments in collaboration sessions
	"liveshare.comments": true,

	// Type of connection used for collaboration; the default (auto) mode prefers a direct connection, but may fallback to a cloud relay if the direct connection failed.
	"liveshare.connectionMode": "auto",

	// Enables the Visual Studio Live Share output channel.
	"liveshare.diagnosticLogging": false,

	// Specifies the level of logging output from Visual Studio Live Share Extension
	"liveshare.diagnosticLoggingLevel": "Warning",

	// Enables diagnostic notifications and logs.
	"liveshare.diagnosticMode": false,

	// Controls set of active features. By selecting `insiders`, you agree to the [Pre-Release Software License Terms](https://aka.ms/vsls-license-preview) and [Privacy Statement](https://aka.ms/vsls-privacy).
	"liveshare.featureSet": "stable",

	// Specifies how to respond to focus requests from other participants.
	"liveshare.focusBehavior": "accept",

	// Controls whether the host needs to explicitly approve guest requests to join collaboration sessions.
	"liveshare.guestApprovalRequired": false,

	// Increases the guest limit from 5 to 30.
	"liveshare.increasedGuestLimit": true,

	// Controls how the participant will join incoming shared debug sessions.
	"liveshare.joinDebugSessionOption": "Automatic",

	// Sets the number of seconds to wait before sending keep-alive messages in an idle session, used to detect abnormal network disconnection. Set to -1 to disable sending keep-alive messages.
	"liveshare.keepAliveInterval": 20,

	// Allow guests to run arbitrary commands via Code Actions (“Quick Fixes”) and CodeLens
	"liveshare.languages.allowGuestCommandControl": false,

	// Specifies the client to launch when clicking on a Live Share URL.
	"liveshare.launcherClient": "web",

	// Controls when to display a participant's name tag instead of just their cursor.
	"liveshare.nameTagVisibility": "Activity",

	// Allow guests to run notebook cells
	"liveshare.notebooks.allowGuestExecuteCells": false,

	// Controls whether to automatically open shared servers in your default browser.
	"liveshare.openSharedServers": true,

	// Specifies when to automatically populate your Git commit message with guest attribution (using the Git-co-author trailer).
	"liveshare.populateGitCoAuthors": "always",

	// Controls whether to publish your presence to other users, and allow in-tool invites for collaboration sessions
	"liveshare.presence": false,

	// Controls whether to publish your current workspace folder to other users
	"liveshare.publishWorkspaceInfo": false,

	// Height of shared terminal window, characters.
	"liveshare.sharedTerminalHeight": 50,

	// Width of shared terminal window, characters.
	"liveshare.sharedTerminalWidth": 120,

	// Automatically share external files opened by the host during a collaboration session.
	"liveshare.shareExternalFiles": true,

	// Show or hide the Live Share status bar items.
	"liveshare.showInStatusBar": "always",

	// Controls visibility of the cursor and highlights for read-only users.
	"liveshare.showReadOnlyUsersInEditor": "whileFollowing",

	// Controls whether to show verbose notifications, such as when a guest joins and leaves a session.
	"liveshare.showVerboseNotifications": true,

	// Align the comma at the end of the port definition
	"systemverilog.alignEndOfLine": false,

	// When aligning code leave blank lines between lines
	"systemverilog.condenseBlankLines": false,

	// The prefix to use when instantiating a new module
	"systemverilog.instancePrefix": "u_",

	// A path to the installation of Universal Ctags.
	"verilog.ctags.path": "none",

	// Select the Language Server. Currently supports `svls`.
	"verilog.languageServer": "none",

	// Add Icarus Verilog arguments here (like macros). They will be added to Icarus Verilog while linting (The command "-t null" will be added by the linter by default).
	"verilog.linting.iverilog.arguments": "",

	// If enabled, Icarus Verilog will be run at the file location for linting. Else it will be run at workspace folder. Disabled by default.
	"verilog.linting.iverilog.runAtFileLocation": false,

	// Select the verilog linter. Possible values are 'iverilog', 'verilator', xvlog' or 'none'.
	"verilog.linting.linter": "none",

	// Add Modelsim arguments here. They will be added to Modelsim while linting.
	"verilog.linting.modelsim.arguments": "",

	// If enabled, Modelsim will be run at the file location for linting. Else it will be run at workspace folder. Disabled by default.
	"verilog.linting.modelsim.runAtFileLocation": false,

	// Add Modelsim work library here.
	"verilog.linting.modelsim.work": "",

	// A path to the installation of linter.
	"verilog.linting.path": "",

	// Add Verilator arguments here (like macros). They will be added to Verilator while linting (The command "--lint-only -I<document folder>" will be added by the linter by default).
	"verilog.linting.verilator.arguments": "",

	// If enabled, Verilator will be run at the file location for linting. Else it will be run at workspace folder. Disabled by default.
	"verilog.linting.verilator.runAtFileLocation": false,

	// If enabled, run verilator in WSL.
	"verilog.linting.verilator.useWSL": false,

	// Add xvlog arguments here. They will be added to xvlog while linting.
	"verilog.linting.xvlog.arguments": "",

	// Enable logging for this extension.
	"verilog.logging.enabled": false,

	// Controls if plugin is enabled
	"color-highlight.enable": true,

	// An array of language ids which should be highlighted by Color Highlight. "*" to trigger on any language; Prepend language id with "!" to exclude the language (i.e "!typescript", "!javascript")
	"color-highlight.languages": [
		"*"
	],

	// Style of the highlight. Can be 'dot-before', 'dot-after', 'foreground', 'background', 'outline', 'underline'
	"color-highlight.markerType": "background",

	// Highlight colors on the ruler (scroll bar), true/false
	"color-highlight.markRuler": true,

	// Highlight rgb without functions like rgb() ('255, 255, 255', [255, 255, 255], '255 255 255', etc.)
	"color-highlight.matchRgbWithNoFunction": false,

	// Highlight color words in all files (grey, green, etc.)
	"color-highlight.matchWords": false,

	// An array of language ids which should be highlighted by Color Highlight with the rgbWithNoFunction pattern. "*" to trigger on any language; Prepend language id with "!" to exclude the language (i.e "!typescript", "!javascript")
	"color-highlight.rgbWithNoFunctionLanguages": [
		"*"
	],

	// Array of absolute paths to search while perform file lookups.
	"color-highlight.sass.includePaths": [],

	// Selecione um pacote de ícones que habilitam ícones específicos.
	//  - angular: Ícones para Angular.
	//  - angular_ngrx: Ícones para Angular e ngrx.
	//  - react: Ícones para React.
	//  - react_redux: Ícones para React e ngrx.
	//  - vue: Ícones para Vue.
	//  - vue_vuex: Ícones para Vue e Vuex.
	//  - nest: Ícones para NestJS.
	//  - none: Nenhum pacote de ícones ativado.
	"material-icon-theme.activeIconPack": "angular",

	// Definir ícones para associações de arquivos customizadas.
	"material-icon-theme.files.associations": {},

	// Definir ícones para associações de pastas customizadas.
	"material-icon-theme.folders.associations": {},

	// Alterar a cor dos ícones das pastas.
	"material-icon-theme.folders.color": "#90a4ae",

	// Definir o tipo dos ícones das pastas.
	//  - specific: Selecione ícones de pastas específicas.
	//  - classic: Selecione ícones de pastas clássicas.
	//  - none: Nenhum ícone de pasta.
	"material-icon-theme.folders.theme": "specific",

	// Ocultar as setas ao lado das pastas no explorador de arquivos.
	"material-icon-theme.hidesExplorerArrows": false,

	// Definir ícones para associações de idiomas customizadas.
	"material-icon-theme.languages.associations": {},

	// Alterar a opacidade dos ícones.
	"material-icon-theme.opacity": 1,

	// Change the saturation of the icons.
	"material-icon-theme.saturation": 1,

	// Mostrar mensagem da reinicialização.
	"material-icon-theme.showReloadMessage": true,

	// Mostrar mensagem de atualização após cada atualização.
	"material-icon-theme.showUpdateMessage": false,

	// Mostrar mensagem de bem-vindo após a primeira instalação.
	"material-icon-theme.showWelcomeMessage": true,

	// List of ssl certificates for hosts
	"thunder-client.certificates": [],

	// Enter full folder path to store requests data, `Suitable for storing all requests data in one fixed location`. Also supports home folder `$HOME/path`. for more details [visit here](https://github.com/rangav/thunder-client-support#team)
	"thunder-client.customLocation": "",

	// Thunder Client editor font size 
	//  - Use 0 to use default font size.
	//  - Use any other value to set custom font size.
	"thunder-client.editorFontSize": 0,

	// Comma separated Host names to exclude from proxy e.g: `abc.com,xyz.com`
	"thunder-client.excludeProxyHostList": "",

	// Follow Redirects when running Requests
	"thunder-client.followRedirects": true,

	// The http library to use to make api requests, default is `got`.
	"thunder-client.httpLibrary": "got",

	// Http Version for making the request, default is HTTP/1.1
	"thunder-client.httpVersion": "HTTP/1.1",

	// Json format indentation, select 2 or 4 spaces, default is 2 spaces
	"thunder-client.indentSize": 2,

	// Show `Reload Sidebar` alert when db file changes detected.
	"thunder-client.reloadAlert": true,

	// Select the request view layout for `request/response` sections. Please `close` request tab and `re-open` to apply new layout
	"thunder-client.requestLayout": "Left/Right",

	// Request Timeout in milliseconds, 0 means no timeout
	"thunder-client.requestTimeout": 0,

	// Response Display Limit in MB, Default is 10MB
	"thunder-client.responseLimit": 10,

	// `Save Request` when Send button is clicked in Collections. If disabled, the request will be sent without saving. Use shortcut `ctrl/cmd + s` to save the request explicitly
	"thunder-client.saveRequestOnSend": true,

	// Save OAuth 2 token based on environment, So this will allow to save `different access tokens` for `dev & prod` environments
	"thunder-client.saveTokenPerEnvironment": false,

	// Requests data will be saved and loaded automatically from current workspace folder, `Suitable for Teams with multiple projects`. The tests folder `thunder-tests` will be created at the root. for more details [visit here](https://github.com/rangav/thunder-client-support#team)
	"thunder-client.saveToWorkspace": false,

	// Show Requests executed from collection in Activity Tab
	"thunder-client.showActivityFromCollection": false,

	// Sidebar Collections tree indentation, `select 0` for default padding, `select 5 or 10` to add extra 5px or 10px padding
	"thunder-client.treeIndentation": 0,

	// Relative path to the current workspace folder, where you like to save tests data, `Save To Workspace` setting needs to be enabled first. The tests folder `thunder-tests` will be created here. for more details [visit here](https://github.com/rangav/thunder-client-support#team)
	"thunder-client.workspaceRelativePath": "",

	// 3scale user_key to access dependencyAnalytics.host
	"dependencyAnalytics.apiKey": "207c527cfc2a6b8dcf4fa43ad7a976da",

	// Host name of Dependency Analytics server.
	"dependencyAnalytics.host": "https://gw.api.openshift.io/",

	// Host name of the stack report UI.
	"dependencyAnalytics.stackReportUIHost": "https://stack-analytics-report.openshift.io/",

	// Controls the maximum number of problems produced by the server.
	"dependencyAnalyticsServer.maxNumberOfProblems": 100,

	// Traces the communication between VSCode and the dependencyAnalyticsServer service.
	"dependencyAnalyticsServer.trace.server": "off",

	// Specifies absolute path of go executable.
	"go.executable.path": "",

	// Specifies absolute path of mvn executable.
	"maven.executable.path": "",

	// Specifies absolute path of npm executable.
	"npm.executable.path": "",

	// Enable usage data and errors to be sent to Red Hat servers. Read our [privacy statement](https://developers.redhat.com/article/tool-data-collection).
	"redhat.telemetry.enabled": null,

	// Enable/disable the 'auto build'
	"java.autobuild.enabled": true,

	// Reordering of fields, enum constants, and initializers can result in semantic and runtime changes due to different initialization and persistence order. This setting prevents this from occurring.
	"java.codeAction.sortMembers.avoidVolatileChanges": true,

	// Generate method comments when generating the methods.
	"java.codeGeneration.generateComments": false,

	// Use 'instanceof' to compare types when generating the hashCode and equals methods.
	"java.codeGeneration.hashCodeEquals.useInstanceof": false,

	// Use Objects.hash and Objects.equals when generating the hashCode and equals methods. This setting only applies to Java 7 and higher.
	"java.codeGeneration.hashCodeEquals.useJava7Objects": false,

	// Specifies the insertion location of the code generated by source actions.
	//  - afterCursor: Insert the generated code after the member where the cursor is located.
	//  - beforeCursor: Insert the generated code before the member where the cursor is located.
	//  - lastMember: Insert the generated code as the last member of the target type.
	"java.codeGeneration.insertionLocation": "afterCursor",

	// The code style for generating the toString method.
	//  - STRING_CONCATENATION: String concatenation
	//  - STRING_BUILDER: StringBuilder/StringBuffer
	//  - STRING_BUILDER_CHAINED: StringBuilder/StringBuffer - chained call
	//  - STRING_FORMAT: String.format/MessageFormat
	"java.codeGeneration.toString.codeStyle": "STRING_CONCATENATION",

	// Limit number of items in arrays/collections/maps to list, if 0 then list all.
	"java.codeGeneration.toString.limitElements": 0,

	// List contents of arrays instead of using native toString().
	"java.codeGeneration.toString.listArrayContents": true,

	// Skip null values when generating the toString method.
	"java.codeGeneration.toString.skipNullValues": false,

	// The template for generating the toString method.
	"java.codeGeneration.toString.template": "${object.className} [${member.name()}=${member.value}, ${otherMembers}]",

	// Use blocks in 'if' statements when generating the methods.
	"java.codeGeneration.useBlocks": false,

	// Specify the Nonnull annotation types to be used for null analysis. If more than one annotation is specified, then the topmost annotation will be used first if it exists in your project dependencies.
	"java.compile.nullAnalysis.nonnull": [
		"javax.annotation.Nonnull",
		"org.eclipse.jdt.annotation.NonNull",
		"org.springframework.lang.NonNull"
	],

	// Specify the Nullable annotation types to be used for null analysis. If more than one annotation is specified, then the topmost annotation will be used first if it exists in your project dependencies.
	"java.compile.nullAnalysis.nullable": [
		"javax.annotation.Nullable",
		"org.eclipse.jdt.annotation.Nullable",
		"org.springframework.lang.Nullable"
	],

	// Enable/disable code completion support
	"java.completion.enabled": true,

	// Defines a list of static members or types with static members. Content assist will propose those static members even if the import is missing.
	"java.completion.favoriteStaticMembers": [
		"org.junit.Assert.*",
		"org.junit.Assume.*",
		"org.junit.jupiter.api.Assertions.*",
		"org.junit.jupiter.api.Assumptions.*",
		"org.junit.jupiter.api.DynamicContainer.*",
		"org.junit.jupiter.api.DynamicTest.*",
		"org.mockito.Mockito.*",
		"org.mockito.ArgumentMatchers.*",
		"org.mockito.Answers.*"
	],

	// Defines the type filters. All types whose fully qualified name matches the selected filter strings will be ignored in content assist or quick fix proposals and when organizing imports. For example 'java.awt.*' will hide all types from the awt packages.
	"java.completion.filteredTypes": [
		"java.awt.*",
		"com.sun.*",
		"sun.*",
		"jdk.*",
		"org.graalvm.*",
		"io.micrometer.shaded.*"
	],

	// When set to true, method arguments are guessed when a method is selected from as list of code assist proposals.
	"java.completion.guessMethodArguments": true,

	// Defines the sorting order of import statements. A package or type name prefix (e.g. 'org.eclipse') is a valid entry. An import is always added to the most specific group. As a result, the empty string (e.g. '') can be used to group all other imports. Static imports are prefixed with a '#'
	"java.completion.importOrder": [
		"#",
		"java",
		"javax",
		"org",
		"com",
		""
	],

	// Maximum number of completion results (not including snippets).
	// `0` (the default value) disables the limit, all results are returned. In case of performance problems, consider setting a sensible limit.
	"java.completion.maxResults": 0,

	// Enable/disable postfix completion support. `editor.snippetSuggestions` can be used to customize how postfix snippets are sorted.
	"java.completion.postfix.enabled": true,

	// Please use 'java.import.generatesMetadataFilesAtProjectRoot' to control whether to generate the project metadata files at the project root. And use 'files.exclude' to control whether to hide the project metadata files from the file explorer.
	// Controls whether to exclude extension-generated project settings files (.project, .classpath, .factorypath, .settings/) from the file explorer.
	"java.configuration.checkProjectSettingsExclusions": false,

	// Path to Maven's global settings.xml
	"java.configuration.maven.globalSettings": null,

	// Specifies severity if the plugin execution is not covered by Maven build lifecycle.
	"java.configuration.maven.notCoveredPluginExecutionSeverity": "warning",

	// Path to Maven's user settings.xml
	"java.configuration.maven.userSettings": null,

	// Map Java Execution Environments to local JDKs.
	"java.configuration.runtimes": [],

	// Specifies how modifications on build files update the Java classpath/configuration
	"java.configuration.updateBuildConfiguration": "interactive",

	// The number of days (if enabled) to keep unused workspace cache data. Beyond this limit, cached workspace data may be removed.
	"java.configuration.workspaceCacheLimit": 90,

	// Preferred content provider (a 3rd party decompiler id, usually)
	"java.contentProvider.preferred": null,

	// Enable/disable download of Maven source artifacts for Eclipse projects.
	"java.eclipse.downloadSources": false,

	// Specifies the severity of the message when the classpath is incomplete for a Java file
	"java.errors.incompleteClasspath.severity": "warning",

	// Enable/disable smart folding range support. If disabled, it will use the default indentation-based folding range provided by VS Code.
	"java.foldingRange.enabled": true,

	// Includes the comments during code formatting.
	"java.format.comments.enabled": true,

	// Enable/disable default Java formatter
	"java.format.enabled": true,

	// Enable/disable automatic block formatting when typing `;`, `<enter>` or `}`
	"java.format.onType.enabled": true,

	// Optional formatter profile name from the Eclipse formatter settings.
	"java.format.settings.profile": null,

	// Specifies the url or file path to the [Eclipse formatter xml settings](https://github.com/redhat-developer/vscode-java/wiki/Formatter-settings).
	"java.format.settings.url": null,

	// This setting is deprecated, please use 'java.jdt.ls.java.home' instead.
	// Specifies the folder path to the JDK (17 or more recent) used to launch the Java Language Server.
	// On Windows, backslashes must be escaped, i.e.
	// "java.home":"C:\\Program Files\\Java\\jdk-17.0_3"
	"java.home": null,

	// Enable/disable the implementations code lens.
	"java.implementationsCodeLens.enabled": false,

	// Configure glob patterns for excluding folders. Use `!` to negate patterns to allow subfolders imports. You have to include a parent directory. The order is important.
	"java.import.exclusions": [
		"**/node_modules/**",
		"**/.metadata/**",
		"**/archetype-resources/**",
		"**/META-INF/maven/**"
	],

	// Specify whether the project metadata files(.project, .classpath, .factorypath, .settings/) will be generated at the project root. Click [HERE](command:_java.metadataFilesGeneration) to learn how to change the setting to make it take effect.
	"java.import.generatesMetadataFilesAtProjectRoot": false,

	// Arguments to pass to Gradle.
	"java.import.gradle.arguments": null,

	// Enable/disable the Gradle importer.
	"java.import.gradle.enabled": true,

	// Use Gradle from the specified local installation directory or GRADLE_HOME if the Gradle wrapper is missing or disabled and no 'java.import.gradle.version' is specified.
	"java.import.gradle.home": null,

	// The location to the JVM used to run the Gradle daemon.
	"java.import.gradle.java.home": null,

	// JVM arguments to pass to Gradle.
	"java.import.gradle.jvmArguments": null,

	// Enable/disable the Gradle offline mode.
	"java.import.gradle.offline.enabled": false,

	// Setting for GRADLE_USER_HOME.
	"java.import.gradle.user.home": null,

	// Use Gradle from the specific version if the Gradle wrapper is missing or disabled.
	"java.import.gradle.version": null,

	// Use Gradle from the 'gradle-wrapper.properties' file.
	"java.import.gradle.wrapper.enabled": true,

	// Enable/disable the Maven importer.
	"java.import.maven.enabled": true,

	// Enable/disable the Maven offline mode.
	"java.import.maven.offline.enabled": false,

	// Defines allowed/disallowed SHA-256 checksums of Gradle Wrappers
	"java.imports.gradle.wrapper.checksums": [],

	// Enable/disable inlay hints for parameter names:
	// ```java
	// 
	// Integer.valueOf(/* s: */ '123', /* radix: */ 10)
	//  
	// ```
	//  `java.inlayHints.parameterNames.exclusions` can be used to disable the inlay hints for methods.
	//  - none: Disable parameter name hints
	//  - literals: Enable parameter name hints only for literal arguments
	//  - all: Enable parameter name hints for literal and non-literal arguments
	"java.inlayHints.parameterNames.enabled": "literals",

	// The patterns for the methods that will be disabled to show the inlay hints. Supported pattern examples:
	//  - `java.lang.Math.*` - All the methods from java.lang.Math.
	//  - `*.Arrays.asList` - Methods named as 'asList' in the types named as 'Arrays'.
	//  - `*.println(*)` - Methods named as 'println'.
	//  - `(from, to)` - Methods with two parameters named as 'from' and 'to'.
	//  - `(arg*)` - Methods with one parameter whose name starts with 'arg'.
	"java.inlayHints.parameterNames.exclusions": [],

	// [Experimental] Specify whether to enable Android project importing. When set to `auto`, the Android support will be enabled in Visual Studio Code - Insiders.
	// 
	// **Note:** Only works for Android Gradle Plugin `3.2.0` or higher.
	"java.jdt.ls.androidSupport.enabled": "auto",

	// Specifies the folder path to the JDK (17 or more recent) used to launch the Java Language Server. This setting will replace the Java extension's embedded JRE to start the Java Language Server. 
	// 
	// On Windows, backslashes must be escaped, i.e.
	// "java.jdt.ls.java.home":"C:\\Program Files\\Java\\jdk-17.0_3"
	"java.jdt.ls.java.home": null,

	// Whether to load lombok processors from project classpath
	"java.jdt.ls.lombokSupport.enabled": true,

	// Specify whether to automatically add Protobuf output source directories to the classpath.
	// 
	// **Note:** Only works for Gradle `com.google.protobuf` plugin `0.8.4` or higher.
	"java.jdt.ls.protobufSupport.enabled": true,

	// Specifies extra VM arguments used to launch the Java Language Server. Eg. use `-XX:+UseParallelGC -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -Dsun.zip.disableMemoryMapping=true -Xmx1G -Xms100m -Xlog:disable` to optimize memory usage with the parallel garbage collector
	"java.jdt.ls.vmargs": "-XX:+UseParallelGC -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -Dsun.zip.disableMemoryMapping=true -Xmx1G -Xms100m -Xlog:disable",

	// Enable/disable download of Maven source artifacts as part of importing Maven projects.
	"java.maven.downloadSources": false,

	// Force update of Snapshots/Releases.
	"java.maven.updateSnapshots": false,

	// Max simultaneous project builds
	"java.maxConcurrentBuilds": 1,

	// [Experimental] Enable/disable progress reports from background processes on the server.
	"java.progressReports.enabled": true,

	// Project encoding settings
	//  - ignore: Ignore project encoding settings
	//  - warning: Show warning if a project has no explicit encoding set
	//  - setDefault: Set the default workspace encoding settings
	"java.project.encoding": "ignore",

	// Enable/disable the server-mode switch information, when Java projects import is skipped on startup.
	"java.project.importHint": true,

	// Specifies whether to import the Java projects, when opening the folder in Hybrid mode for the first time.
	"java.project.importOnFirstTimeStartup": "automatic",

	// A relative path to the workspace where stores the compiled output. `Only` effective in the `WORKSPACE` scope. The setting will `NOT` affect Maven or Gradle project.
	"java.project.outputPath": "",

	// Configure glob patterns for referencing local libraries to a Java project.
	"java.project.referencedLibraries": [
		"lib/**/*.jar"
	],

	// Excludes files and folders from being refreshed by the Java Language Server, which can improve the overall performance. For example, ["node_modules","\.git"] will exclude all files and folders named 'node_modules' or '.git'. Pattern expressions must be compatible with `java.util.regex.Pattern`. Defaults to ["node_modules","\.git"].
	"java.project.resourceFilters": [
		"node_modules",
		"\\.git"
	],

	// Relative paths to the workspace where stores the source files. `Only` effective in the `WORKSPACE` scope. The setting will `NOT` affect Maven or Gradle project.
	"java.project.sourcePaths": [],

	// Show quickfixes at the problem or line level.
	"java.quickfix.showAt": "line",

	// Show the recommended Dependency Analytics extension.
	"java.recommendations.dependency.analytics.show": true,

	// Include getter, setter and builder/constructor when finding references.
	"java.references.includeAccessors": true,

	// Include the decompiled sources when finding references.
	"java.references.includeDecompiledSources": true,

	// Enable/disable the references code lens.
	"java.referencesCodeLens.enabled": false,

	// Enable/disable auto organize imports on save action
	"java.saveActions.organizeImports": false,

	// Enable/disable Smart Selection support for Java. Disabling this option will not affect the VS Code built-in word-based and bracket-based smart selection.
	"java.selectionRange.enabled": true,

	// The launch mode for the Java extension
	//  - Standard: Provides full features such as intellisense, refactoring, building, Maven/Gradle support etc.
	//  - LightWeight: Starts a syntax server with lower start-up cost. Only provides syntax features such as outline, navigation, javadoc, syntax errors.
	//  - Hybrid: Provides full features with better responsiveness. It starts a standard language server and a secondary syntax server. The syntax server provides syntax features until the standard server is ready.
	"java.server.launchMode": "Hybrid",

	// Specifies the url or file path to the workspace Java settings. See [Setting Global Preferences](https://github.com/redhat-developer/vscode-java/wiki/Settings-Global-Preferences)
	"java.settings.url": null,

	// Automatically show build status on startup.
	"java.showBuildStatusOnStart.enabled": "notification",

	// Enable/disable to show the description in signature help.
	"java.signatureHelp.description.enabled": false,

	// Enable/disable the signature help.
	"java.signatureHelp.enabled": true,

	// Specifies the number of imports added before a star-import declaration is used.
	"java.sources.organizeImports.starThreshold": 99,

	// Specifies the number of static imports added before a star-import declaration is used.
	"java.sources.organizeImports.staticStarThreshold": 99,

	// Include method declarations from source files in symbol search.
	"java.symbols.includeSourceMethodDeclarations": false,

	// Specifies the file header comment for new Java file. Supports configuring multi-line comments with an array of strings, and using ${variable} to reference the [predefined variables](command:_java.templateVariables).
	"java.templates.fileHeader": [],

	// Specifies the type comment for new Java type. Supports configuring multi-line comments with an array of strings, and using ${variable} to reference the [predefined variables](command:_java.templateVariables).
	"java.templates.typeComment": [],

	// Traces the communication between VS Code and the Java language server.
	"java.trace.server": "off",

	// Enable/disable lazy loading the content in type hierarchy. Lazy loading could save a lot of loading time but every type should be expanded manually to load its content.
	"java.typeHierarchy.lazyLoad": false,

	// Register XML catalog files. See how to configure [XML catalog with XSD](command:xml.open.docs?%5B%7B%22page%22%3A%22Validation%22%2C%22section%22%3A%22xml-catalog-with-xsd%22%7D%5D) or [XML catalog with DTD](command:xml.open.docs?%5B%7B%22page%22%3A%22Validation%22%2C%22section%22%3A%22xml-catalog-with-dtd%22%7D%5D) for more information.
	"xml.catalogs": [],

	// Enable/disable XML CodeLens. Default is `false`. See [here](command:xml.open.docs?%5B%7B%22page%22%3A%22CodeLens%22%2C%22section%22%3A%22Code%20Lens%22%7D%5D) for information about CodeLens features
	"xml.codeLens.enabled": false,

	// Enable/disable the content of an element being removed when the element start tag is turned into a self-closing tag. The default setting is to remove the content. See [here](command:xml.open.docs?%5B%7B%22page%22%3A%22Preferences%22%2C%22section%22%3A%22auto-close-removes-content%22%7D%5D) for more information.
	"xml.completion.autoCloseRemovesContent": true,

	// Enable/disable autoclosing of XML tags. Default is `true`. 
	// 
	// IMPORTANT: Turn off `editor.autoClosingTags` for this to work.
	"xml.completion.autoCloseTags": true,

	// Download external resources like referenced DTD, XSD. Default is `true`.
	"xml.downloadExternalResources.enabled": true,

	// An array of paths to JARs that should be contributed to the LemMinX classpath. The paths can include glob patterns. This is intended to be used as a tool for developing extensions to vscode-xml. See [here](command:xml.open.docs?%5B%7B%22page%22%3A%22Preferences%22%2C%22section%22%3A%22extension-jars%22%7D%5D) for more information
	"xml.extension.jars": [],

	// Allows XML schemas/ DTD to be associated to file name patterns. Please refer to [XML file association with XSD](command:xml.open.docs?%5B%7B%22page%22%3A%22Validation%22%2C%22section%22%3A%22xml-file-association-with-xsd%22%7D%5D) or [XML file association with DTD](command:xml.open.docs?%5B%7B%22page%22%3A%22Validation%22%2C%22section%22%3A%22xml-file-association-with-dtd%22%7D%5D) for more information. 
	// 
	// Example:
	// ```json
	// [{
	//   "pattern": "file1.xml",
	//   "systemId": "path/to/file.xsd"
	// },
	// {
	//   "pattern": "**/*.xsd",
	//   "systemId": "http://www.w3.org/2001/XMLSchema.xsd"
	// }]
	// ```
	"xml.fileAssociations": [],

	// Minimize the closing tag after folding. Default is `false`.
	"xml.foldings.includeClosingTagInFold": false,

	// The option to put a closing bracket on a newline when `xml.format.splitAttributes` is `true`. Default value is `false`. See [here](command:xml.open.docs?%5B%7B%22page%22%3A%22Formatting%22%2C%22section%22%3A%22xmlformatclosingbracketnewline%22%7D%5D) for more information.
	"xml.format.closingBracketNewLine": false,

	// Expand/collapse empty elements. Default is `ignore`. See [here](command:xml.open.docs?%5B%7B%22page%22%3A%22Formatting%22%2C%22section%22%3A%22xmlformatemptyelements%22%7D%5D) for more information.
	"xml.format.emptyElements": "ignore",

	// Enable/disable ability to format document. Default is `true`. See [here](command:xml.open.docs?%5B%7B%22page%22%3A%22Formatting%22%2C%22section%22%3A%22xmlformatenabled%22%7D%5D) for more information.
	"xml.format.enabled": true,

	// Enforce `preferred` quote style (set by `xml.preferences.quoteStyle`) or `ignore` quote style when formatting. Default is `ignore`. See [here](command:xml.open.docs?%5B%7B%22page%22%3A%22Formatting%22%2C%22section%22%3A%22xmlformatenforcequotestyle%22%7D%5D) for more information.
	//  - preferred: Use preferred quote style set by `xml.preferences.quoteStyle` when formatting.
	//  - ignore: Ignore quote style formatting.
	"xml.format.enforceQuoteStyle": "ignore",

	// Enable/disable experimental formatter. Default is `false`. See [here](command:xml.open.docs?%5B%7B%22page%22%3A%22Formatting%22%2C%22section%22%3A%22xmlformatexperimental%22%7D%5D) for more information.
	"xml.format.experimental": false,

	// Use Schema/DTD grammar information while formatting. Default is `true`. Supported only with experimental formatter. See [here](command:xml.open.docs?%5B%7B%22page%22%3A%22Formatting%22%2C%22section%22%3A%22xmlformatgrammarawareformatting%22%7D%5D) for more information.
	"xml.format.grammarAwareFormatting": true,

	// Set to `true` to join lines in CDATA content during formatting. Default is `false`. See [here](command:xml.open.docs?%5B%7B%22page%22%3A%22Formatting%22%2C%22section%22%3A%22xmlformatjoincdatalines%22%7D%5D) for more information.
	"xml.format.joinCDATALines": false,

	// Join comment content on format. Default is `false`. See [here](command:xml.open.docs?%5B%7B%22page%22%3A%22Formatting%22%2C%22section%22%3A%22xmlformatjoincommentlines%22%7D%5D) for more information.
	"xml.format.joinCommentLines": false,

	// Normalize the whitespace of content inside an element. Newlines and excess whitespace are removed. Default is `false`. See [here](command:xml.open.docs?%5B%7B%22page%22%3A%22Formatting%22%2C%22section%22%3A%22xmlformatjoincontentlines%22%7D%5D) for more information.
	"xml.format.joinContentLines": false,

	// Max line width. Default is `80`. Supported only with experimental formatter. See [here](command:xml.open.docs?%5B%7B%22page%22%3A%22Formatting%22%2C%22section%22%3A%22xmlformatmaxlinewidth%22%7D%5D) for more information.
	"xml.format.maxLineWidth": 80,

	// Preserve line breaks that appear before and after attributes. This setting is overridden if `xml.format.splitAttributes` is set to `true`. Default is `true`. See [here](command:xml.open.docs?%5B%7B%22page%22%3A%22Formatting%22%2C%22section%22%3A%22xmlformatpreserveattributelinebreaks%22%7D%5D) for more information.
	"xml.format.preserveAttributeLineBreaks": true,

	// Preserve new lines that separate tags. The value represents the maximum number of new lines per section. A value of 0 removes all new lines. Default is `2`. See [here](command:xml.open.docs?%5B%7B%22page%22%3A%22Formatting%22%2C%22section%22%3A%22xmlformatpreservednewlines%22%7D%5D) for more information.
	"xml.format.preservedNewlines": 2,

	// Preserve empty content/whitespace in a tag. Default is `false`. See [here](command:xml.open.docs?%5B%7B%22page%22%3A%22Formatting%22%2C%22section%22%3A%22xmlformatpreserveemptycontent%22%7D%5D) for more information.
	"xml.format.preserveEmptyContent": false,

	// Element names for which spaces will be preserved. Supported only with experimental formatter. See [here](command:xml.open.docs?%5B%7B%22page%22%3A%22Formatting%22%2C%22section%22%3A%22xmlformatpreservespace%22%7D%5D) for more information.
	"xml.format.preserveSpace": [
		"xsl:text",
		"xsl:comment",
		"xsl:processing-instruction",
		"literallayout",
		"programlisting",
		"screen",
		"synopsis",
		"pre",
		"xd:pre"
	],

	// Insert space before end of self closing tag. 
	// Example:
	//   ```<tag/> -> <tag />```. Default is `true`. See [here](command:xml.open.docs?%5B%7B%22page%22%3A%22Formatting%22%2C%22section%22%3A%22xmlformatspacebeforeemptyclosetag%22%7D%5D) for more information.
	"xml.format.spaceBeforeEmptyCloseTag": true,

	// Split multiple attributes each onto a new line. Default is `false`. See [here](command:xml.open.docs?%5B%7B%22page%22%3A%22Formatting%22%2C%22section%22%3A%22xmlformatsplitattributes%22%7D%5D) for more information.
	"xml.format.splitAttributes": false,

	// How many levels to indent the attributes by when `xml.format.splitAttributes` is `true`. Default value is `2`. See [here](command:xml.open.docs?%5B%7B%22page%22%3A%22Formatting%22%2C%22section%22%3A%22xmlformatsplitattributesindentsize%22%7D%5D) for more information
	"xml.format.splitAttributesIndentSize": 2,

	// Split `xsi:schemaLocation` content. Default is `onPair`. See [here](command:xml.open.docs?%5B%7B%22page%22%3A%22Formatting%22%2C%22section%22%3A%22xmlformatxsischemalocationsplit%22%7D%5D) for more information
	//  - onElement: Put a new line after each namespace and URI, arranging them into one column.
	//  - onPair: Put a new line after each URI, arranging the content into pairs of namespace and URI.
	//  - none: Ignore `xsi:schemaLocation` content formatting.
	"xml.format.xsiSchemaLocationSplit": "onPair",

	// Specifies the folder path to the JDK (8 or more recent) used to launch the XML Language Server if the Java server is being run.
	// On Windows, backslashes must be escaped, i.e.
	// `"xml.java.home": "C:\\Program Files\\Java\\jdk1.8.0_161"`. For more information, please refer to [this document](command:xml.open.docs?%5B%7B%22page%22%3A%22Preferences%22%2C%22section%22%3A%22java-home%22%7D%5D).
	"xml.java.home": null,

	// Enable/disable logging to the Output view. Default is `true`.
	"xml.logs.client": true,

	// Preferred quote style to use for completion: `single` quotes, `double` quotes. Default is `double`.
	"xml.preferences.quoteStyle": "double",

	// Specifies the source of the XML schema documentation displayed on hover and completion. Default is `all`. See [here](command:xml.open.docs?%5B%7B%22page%22%3A%22Preferences%22%2C%22section%22%3A%22documentation-type%22%7D%5D) for more information.
	//  - documentation: Documentation comes from the `xs:documentation` element.
	//  - appinfo: Documentation comes from the `xs:appinfo` element.
	//  - all: Documentation comes from the `xs:documentation` and `xs:appinfo` elements.
	//  - none: Displays no documentation.
	"xml.preferences.showSchemaDocumentationType": "all",

	// Command line arguments to supply to the binary server when the binary server is being used. Takes into effect after relaunching VSCode. Please refer to [this website for the available options](https://www.graalvm.org/reference-manual/native-image/HostedvsRuntimeOptions/). For example, you can increase the maximum memory that the server can use to 1 GB by adding `-Xmx1g`
	"xml.server.binary.args": "",

	// Specify the path of a custom binary version of the XML server to use. A binary will be downloaded if this is not set.
	"xml.server.binary.path": "",

	// List of the SHA256 hashes of trusted copies of the lemminx (XML language server) binary. See [here](command:xml.open.docs?%5B%7B%22page%22%3A%22Preferences%22%2C%22section%22%3A%22trusted-binary-hashes%22%7D%5D) for more information
	"xml.server.binary.trustedHashes": [],

	// By default, vscode-xml tries to run the Java version of the XML Language Server. If no Java is detected, vscode-xml runs the binary XML language server. When this setting is enabled, the binary will also be used even if Java is installed. If there are additions to the XML Language Server provided by other extensions, Java will be used (if available) even if this setting is enabled.
	"xml.server.preferBinary": false,

	// The XML Language server allows other VSCode extensions to extend its functionality. It requires Java-specific features in order to do this. If extensions to the XML language server are detected, but a binary XML language server is run, a warning will appear. This setting can be used to disable this warning.
	"xml.server.silenceExtensionWarning": false,

	// Specifies extra VM arguments used to launch the XML Language Server. Eg. use `-Xmx1G  -XX:+UseG1GC -XX:+UseStringDeduplication` to increase the heap size to 1GB and enable String deduplication with the G1 Garbage collector. Please refer to [this document](command:xml.open.docs?%5B%7B%22page%22%3A%22Preferences%22%2C%22section%22%3A%22server-vm-arguments%22%7D%5D) for more information on the Java server arguments.
	"xml.server.vmargs": "-Xmx64M",

	// Set a custom folder path for cached XML Schemas. An absolute path is expected, although the `~` prefix (for the user home directory) is supported. Default is `~/.lemminx`. Please refer to the [cache documentation](command:xml.open.docs?%5B%7B%22page%22%3A%22Preferences%22%2C%22section%22%3A%22server-cache-path%22%7D%5D) for more information.
	"xml.server.workDir": "~/.lemminx",

	// Enable/disable document symbols (Outline). Default is `true`. No symbols are given if `"xml.symbols.enabled": false`.
	"xml.symbols.enabled": true,

	// Disable document symbols (Outline) for the given file name patterns. Updating file name patterns does not automatically reload the Outline view for the relevant file(s). Each file must either be reopened or changed, in order to trigger an Outline view reload.
	// 
	// Example:
	// ```
	// [
	//  "**/*LargeFile.xml"
	// ]```.
	"xml.symbols.excluded": [],

	// Allows XML symbols filter to be associated to file name patterns. See [here](command:xml.open.docs?%5B%7B%22page%22%3A%22Symbols%22%2C%22section%22%3A%22xmlsymbolsfilters%22%7D%5D) for more information.. 
	// 
	// Example:
	// ```json
	// [
	//   {
	//     "pattern": "pom.xml",
	//     "expressions": [
	//       {
	//         "xpath": "//text()"
	//       }
	//     ]
	//   }
	// ]
	// ```
	"xml.symbols.filters": [],

	// The maximum number of outline symbols and folding regions computed (limited for performance reasons). Default is `5000`. See [here](command:xml.open.docs?%5B%7B%22page%22%3A%22Symbols%22%2C%22section%22%3A%22xmlsymbolsmaxitemscomputed%22%7D%5D) for more information.
	"xml.symbols.maxItemsComputed": 5000,

	// Show referenced grammars in the Outline. Default is `true`. See [here](command:xml.open.docs?%5B%7B%22page%22%3A%22Symbols%22%2C%22section%22%3A%22xmlsymbolsshowreferencedgrammars%22%7D%5D) for more information.
	"xml.symbols.showReferencedGrammars": true,

	// Traces the communication between VS Code and the XML language server in the Output view. Default is `off`.
	"xml.trace.server": "off",

	// Enable/disable if a fatal error is thrown if the incoming document contains a DOCTYPE declaration. Default is `false`. See [here](command:xml.open.docs?%5B%7B%22page%22%3A%22Validation%22%2C%22section%22%3A%22disallow-doc-type-declarations%22%7D%5D) for more information
	"xml.validation.disallowDocTypeDecl": false,

	// Enable/disable all validation. Default is `true`.
	"xml.validation.enabled": true,

	// 
	"xml.validation.filters": [
		{
			"pattern": "**.exsd",
			"noGrammar": "ignore",
			"schema": {
				"enabled": "never"
			}
		},
		{
			"pattern": "**{.project,.classpath,plugin.xml,feature.xml,category.xml,.target,.product}",
			"noGrammar": "ignore"
		}
	],

	// Enable/disable namespaces validation. Default is `always`. Ignored if `xml.validation.enabled` is set to `false`. See [here](command:xml.open.docs?%5B%7B%22page%22%3A%22Validation%22%2C%22section%22%3A%22xmlnamespaceschemaenabled%22%7D%5D) for more information.
	//  - always: Enable namespaces validation.
	//  - never: Disable namespaces validation.
	//  - onNamespaceEncountered: Enable namespaces validation only when the root element declares an xmlns namespace.
	"xml.validation.namespaces.enabled": "always",

	// The message severity when a document has no associated grammar. Default is `hint`.
	"xml.validation.noGrammar": "hint",

	// Enable/disable resolve of external entities. Default is `false`. See [here](command:xml.open.docs?%5B%7B%22page%22%3A%22Validation%22%2C%22section%22%3A%22resolve-external-entities%22%7D%5D) for more information. Disabled for untrusted workspaces
	"xml.validation.resolveExternalEntities": false,

	// Enable/disable schema based validation. Default is `always`. Ignored if `xml.validation.enabled` is set to `false`. See [here](command:xml.open.docs?%5B%7B%22page%22%3A%22Validation%22%2C%22section%22%3A%22xmlvalidationschemaenabled%22%7D%5D) for more information.
	//  - always: Enable schema based validation.
	//  - never: Disable schema based validation.
	//  - onValidSchema: Enable schema based validation only when the declared xsi:schemaLocation hint or xsi:noNamespaceSchemaLocation is valid for the root element.
	"xml.validation.schema.enabled": "always",

	// Note: If it is not Null, It will override CustomBrowser and ChromeDebuggingAttachment settings.
	// 
	//  Examples : 
	// chrome --incognito --headless --remote-debugging-port=9222 
	//  C:\\Program Files\\Firefox Developer Edition\\firefox.exe --private-window
	"liveServer.settings.AdvanceCustomBrowserCmdLine": null,

	// Enable Chrome Debugging Attachment to Live Server at Debuging Port 9222.
	//  NOTE: You have to install 'Debugger for Chrome' 
	// If the value is true, Select 'Attach to Chrome' from Debug Window to start debugging. 
	// 
	//  CAUTION: If it is true, 'Launch Chrome against localhost' may not work.
	"liveServer.settings.ChromeDebuggingAttachment": false,

	// Specify custom browser settings for Live Server. 
	// By Default it will open your default favorite browser.
	"liveServer.settings.CustomBrowser": null,

	// To disable information pop up messages.
	"liveServer.settings.donotShowInfoMsg": false,

	// To turn off prompt warning message if body or head or other supporting tag is missing in your HTML.
	"liveServer.settings.donotVerifyTags": false,

	// When set, serve this file (server root relative) for every 404 (useful for single-page applications)
	"liveServer.settings.file": "",

	// By Default Live Server inject CSS changes without full reloading of browser. You can change this behavior by making this setting as `true`
	"liveServer.settings.fullReload": false,

	// To switch between localhost or 127.0.0.1 or anything else. Default is 127.0.0.1
	"liveServer.settings.host": "127.0.0.1",

	// Setup https configuration
	"liveServer.settings.https": {
		"enable": false,
		"cert": "",
		"key": "",
		"passphrase": ""
	},

	// To ignore specific file changes
	"liveServer.settings.ignoreFiles": [
		".vscode/**",
		"**/*.scss",
		"**/*.sass",
		"**/*.ts"
	],

	// Mount a directory to a route. Such as [['/components', './node_modules']]
	"liveServer.settings.mount": [],

	// This the entry point of server when you're in multiroot workspace
	"liveServer.settings.multiRootWorkspaceName": null,

	// If it is true live server will start without browser opened.
	"liveServer.settings.NoBrowser": false,

	// Set Custom Port Number of Live Server. Set 0 if you want random port.
	"liveServer.settings.port": 5500,

	// To Setup Proxy
	"liveServer.settings.proxy": {
		"enable": false,
		"baseUri": "/",
		"proxyUri": "http://127.0.0.1:80"
	},

	// Set Custom root of Live Server. 
	// To change root the the server to sub folder of workspace, use '/' and relative path from workspace. 
	// Example: /subfolder1/subfolder2
	"liveServer.settings.root": "/",

	// Change this to false if you don't want the button to show in the statusbar
	"liveServer.settings.showOnStatusbar": true,

	// Use local IP as host
	"liveServer.settings.useLocalIp": false,

	// You have to install a browser extension. That will be works for your dynamic pages (like PHP).
	"liveServer.settings.useWebExt": false,

	// Delay before live reloading. Value in milliseconds. Default is 100
	"liveServer.settings.wait": 100,

	// Minimum level of debugger logs that are sent to VS Code.
	"java.debug.logLevel": "warn",

	// The specified console to launch Java program. If you want to customize the console for a specific debug session, please modify the 'console' config in launch.json.
	//  - internalConsole: VS Code debug console (input stream not supported).
	//  - integratedTerminal: VS Code integrated terminal.
	//  - externalTerminal: External terminal that can be configured in user settings.
	"java.debug.settings.console": "integratedTerminal",

	// Enable the run and debug code lens providers over main methods.
	"java.debug.settings.enableRunDebugCodeLens": true,

	// Skip the specified classes when breaking on exception. You could use the built-in variables such as '$JDK' and '$Libraries' to skip a group of classes, or add a specific class name expression, e.g. java.*, *.Foo
	"java.debug.settings.exceptionBreakpoint.skipClasses": [],

	// Force building the workspace before launching java program.
	"java.debug.settings.forceBuildBeforeLaunch": true,

	// Reload the changed Java classes during debugging. Make sure 'java.autobuild.enabled' is not disabled.
	"java.debug.settings.hotCodeReplace": "manual",

	// Experimental: Controls whether the debugger is allowed to send JDWP commands asynchronously. Async mode can improve remote debugging response speed on high-latency networks.
	"java.debug.settings.jdwp.async": "auto",

	// The maximum number of variables or fields that can be requested in one JDWP request. The higher the value, the less frequently debuggee will be requested when expanding the variable view. Also a large number can cause JDWP request timeout.
	"java.debug.settings.jdwp.limitOfVariablesPerJdwpRequest": 100,

	// The timeout (ms) of JDWP request when the debugger communicates with the target JVM.
	"java.debug.settings.jdwp.requestTimeout": 3000,

	// The maximum length of strings displayed in "Variables" or "Debug Console" viewlet, strings longer than this length will be trimmed, if 0 no trim is performed.
	"java.debug.settings.maxStringLength": 0,

	// The precision when formatting doubles in "Variables" or "Debug Console" viewlet.
	"java.debug.settings.numericPrecision": 0,

	// Force to proceed when build fails
	"java.debug.settings.onBuildFailureProceed": false,

	// Show numbers in hex format in "Variables" viewlet.
	"java.debug.settings.showHex": false,

	// Show the logical structure for the Collection and Map classes in "Variables" viewlet.
	"java.debug.settings.showLogicalStructure": true,

	// Show fully qualified class names in "Variables" viewlet.
	"java.debug.settings.showQualifiedNames": false,

	// Show static variables in "Variables" viewlet.
	"java.debug.settings.showStaticVariables": false,

	// Show 'toString()' value for all classes that override 'toString' method in "Variables" viewlet.
	"java.debug.settings.showToString": true,

	// Skip the specified classes when stepping. You could use the built-in variables such as '$JDK' and '$Libraries' to skip a group of classes, or add a specific class name expression, e.g. java.*, *.Foo
	"java.debug.settings.stepping.skipClasses": [],

	// Skip constructor methods when stepping.
	"java.debug.settings.stepping.skipConstructors": false,

	// Skip static initializer methods when stepping.
	"java.debug.settings.stepping.skipStaticInitializers": false,

	// Skip synthetic methods when stepping.
	"java.debug.settings.stepping.skipSynthetics": false,

	// The default VM arguments to launch the Java program. Eg. Use '-Xmx1G -ea' to increase the heap size to 1GB and enable assertions. If you want to customize the VM arguments for a specific debug session, please modify the 'vmArgs' config in launch.json.
	"java.debug.settings.vmArgs": "",

	// Controls whether notifications can be used to report progress. If true, use status bar to report progress instead.
	"java.silentNotification": false,

	// Synchronize Java Projects explorer with changes
	"java.dependency.autoRefresh": true,

	// Package presentation mode: flat or hierarchical
	"java.dependency.packagePresentation": "flat",

	// The delay time (ms) the auto refresh is invoked when changes are detected
	"java.dependency.refreshDelay": 2000,

	// Show the members in the explorer
	"java.dependency.showMembers": false,

	// Synchronize Java Projects explorer selection with folder explorer
	"java.dependency.syncWithFolderExplorer": true,

	// The output path of the exported jar. Leave it empty if you want to manually pick the output location.
	"java.project.exportJar.targetPath": "${workspaceFolder}/${workspaceFolderBasename}.jar",

	// Whether to send back detailed information from error logs for diagnostic purpose.
	"java.help.collectErrorLog": false,

	// Sets the default view which is presented during the first use.
	//  - auto: Automatically pick the first experience view
	//  - overview: Present the Java Overview page
	//  - gettingStarted: Present the Java Beginner Tips page
	//  - welcome: Present the Java Help Center page
	//  - none: Do not show any view
	"java.help.firstView": "auto",

	// Show release notes of Extension Pack for Java on startup.
	"java.help.showReleaseNotes": true,

	// Specify the configurations for running the tests.
	"java.test.config": {},

	// Specify the name of the default test configuration.
	"java.test.defaultConfig": "",

	// Specify whether to show diagnostics for conflict dependencies.
	"maven.dependency.enableConflictDiagnostics": "true",

	// Specifies file path pattern of folders to exclude while searching for Maven projects.
	"maven.excludedFolders": [
		"**/.*",
		"**/node_modules",
		"**/target",
		"**/bin",
		"**/archetype-resources"
	],

	// Specifies default options for all mvn commands.
	"maven.executable.options": "",

	// Specifies whether you prefer to use Maven wrapper. If true, it tries using 'mvnw' by walking up the parent folders. If false, or 'mvnw' is not found, it tries 'mvn' in PATH instead.
	"maven.executable.preferMavenWrapper": "true",

	// Format of project node name shown in Maven explorer.
	"maven.explorer.projectName": "${project.name}",

	// Specifies whether to update effective-pom automatically whenever changes detected.
	"maven.pomfile.autoUpdateEffectivePOM": false,

	// Specifies the glob pattern used to look for pom.xml files.
	"maven.pomfile.globPattern": "**/pom.xml",

	// Specifies whether to prefetch effective pom on startup.
	"maven.pomfile.prefetchEffectivePom": false,

	// Default method of opening newly created project.
	"maven.projectOpenBehavior": "Interactive",

	// Specifies the absolute path of your maven configuration file, the default value is ~/.m2/settings.xml
	"maven.settingsFile": null,

	// If this value is true, add a command to create Maven Projects in the Explorer context menu for folders.
	"maven.showInExplorerContextMenu": "true",

	// Specifies an array of environment variable names and values. These environment variable values will be added to the terminal session before Maven is first executed.
	"maven.terminal.customEnv": [],

	// Specify pre-defined favorite commands to execute.
	"maven.terminal.favorites": [],

	// If this value is true, and if the setting java.home has a value, then the environment variable JAVA_HOME will be set to the value of java.home when a new terminal window is created.
	"maven.terminal.useJavaHome": false,

	// Specifies the way of viewing Maven projects.
	"maven.view": "flat",

	// Defines which URL is opened when opening Spring Boot apps. Uses {port} and {contextPath} as placeholders.
	"spring.dashboard.openUrl": "http://localhost:{port}{contextPath}",

	// Defines which browser to use when opening Spring Boot apps.
	//  - integrated: VS Code's integrated browser
	//  - external: External default browser
	"spring.dashboard.openWith": "integrated",

	// Default value for Artifact Id.
	"spring.initializr.defaultArtifactId": "demo",

	// Default value for Group Id.
	"spring.initializr.defaultGroupId": "com.example",

	// Default Java version.
	"spring.initializr.defaultJavaVersion": "",

	// Default language.
	"spring.initializr.defaultLanguage": "",

	// Default method of opening newly generated project
	"spring.initializr.defaultOpenProjectMethod": "",

	// Default packaging.
	"spring.initializr.defaultPackaging": "",

	// Controls if a new sub-folder should be created for the newly generated project.
	//  - artifactId: Place project in a folder named after Artifact Id
	//  - none: Do not create a folder for the project
	"spring.initializr.parentFolder": "artifactId",

	// Spring Initializr Service URL(s). If more than one url is specified, it requires you to select one every time you create a project.
	"spring.initializr.serviceUrl": [
		"https://start.spring.io"
	],

	// Essa configuração permitirá que você altere o ícone de arquivo padrão para temas escuros.
	"vsicons.associations.fileDefault.file": null,

	// Essa configuração permitirá que você altere o ícone de arquivo padrão para temas claros.
	"vsicons.associations.fileDefault.file_light": null,

	// Estas associações personalizadas irão substituir as associações de arquivo de ícone padrão.
	"vsicons.associations.files": [],

	// Essa configuração permitirá que você altere o ícone de pasta padrão para temas escuros.
	"vsicons.associations.folderDefault.folder": null,

	// Essa configuração permitirá que você altere o ícone de pasta padrão para temas claros.
	"vsicons.associations.folderDefault.folder_light": null,

	// Essa configuração permitirá que você alterar o ícone de pasta raiz padrão para temas escuros.
	"vsicons.associations.folderDefault.root_folder": null,

	// Essa configuração permitirá que você alterar o ícone de pasta raiz padrão para temas claros.
	"vsicons.associations.folderDefault.root_folder_light": null,

	// Estas associações personalizadas irão substituir as associações de ícone de pasta padrão.
	"vsicons.associations.folders": [],

	// O caminho físico para a pasta superior no computador local onde as pastas de ícones personalizados estão localizados.
	"vsicons.customIconFolderPath": "",

	// Se definida como 'true', quando alterar manualmente as configurações, a mensagem de 'reiniciar' não será mostrada.
	"vsicons.dontShowConfigManuallyChangedMessage": false,

	// Se definido como 'true', a mensagem de versão nova não vai ser mais mostrada.
	"vsicons.dontShowNewVersionMessage": false,

	// Se definido como 'true', a extensão irá corresponder alguns padrões de Angular comuns.
	"vsicons.presets.angular": false,

	// Se definido como 'true', todas as pastas usarão o ícone padrão da pasta.
	"vsicons.presets.foldersAllDefaultIcon": false,

	// Se definido como 'true', a extensão irá esconder as setas de pasta no 'Explorer'.
	"vsicons.presets.hideExplorerArrows": false,

	// Se definido como 'true', todas as pastas serão ocultadas.
	"vsicons.presets.hideFolders": false,

	// Se definido como 'true', a extensão irá usar o ícone oficial de JS.
	"vsicons.presets.jsOfficial": false,

	// Se definido como 'true', a extensão irá usar o ícone oficial de JSON.
	"vsicons.presets.jsonOfficial": false,

	// Se definido como 'true', a extensão irá corresponder alguns padrões de NestJS comuns.
	"vsicons.presets.nestjs": false,

	// Se definido como 'true', a extensão irá usar o ícone oficial de TS.
	"vsicons.presets.tsOfficial": false,

	// Se definido como 'true', a extensão será reiniciada automaticamente na detecção do projeto.
	"vsicons.projectDetection.autoReload": false,

	// Se definido como 'true', a extensão irá desactivar a detecção de projeto.
	"vsicons.projectDetection.disableDetect": false,

	// Whether to exclude files from auto-completion using VS Code's `search.exclude` setting. (`node_modules`, `bower_components` and `*.code-search` are **always excluded**, not affected by this option.)
	"markdown.extension.completion.respectVscodeSearchExclude": true,

	// The root folder for path auto-completion.
	"markdown.extension.completion.root": "",

	// Use `*` or `_` to wrap italic text.
	"markdown.extension.italic.indicator": "*",

	// User-defined KaTeX macros.
	"markdown.extension.katex.macros": {},

	// List indentation scheme. (Also affects TOC generation.)
	// 
	// Whether to use different indentation sizes on different list contexts or stick to VS Code's tab size.
	//  - adaptive: Adaptive indentation size according to the context, trying to **left align the sublist with its parent's content**. For example:
	// 
	// ```markdown
	// - Parent
	//   - Sublist
	// 
	// 1. Parent
	//    1. Sublist
	// 
	// 10. Parent with longer marker
	//     1. Sublist
	// ```
	//  - inherit: Use the configured tab size of the current document (see the status bar). For example (with `tabSize: 4`):
	// 
	// ```markdown
	// - Parent
	//     - Sublist
	// 
	// 1. Parent
	//     1. Sublist
	// 
	// 10. Parent with longer marker
	//     1. Sublist
	// ```
	"markdown.extension.list.indentationSize": "adaptive",

	// Enable basic math support (Powered by KaTeX).
	"markdown.extension.math.enabled": true,

	// Auto fix ordered list markers.
	"markdown.extension.orderedList.autoRenumber": true,

	// Ordered list marker.
	//  - one: Always use `1.` as ordered list marker.
	//  - ordered: Use increasing numbers as ordered list marker.
	"markdown.extension.orderedList.marker": "ordered",

	// Auto show preview to side.
	"markdown.extension.preview.autoShowPreviewToSide": false,

	// Convert image path to absolute path.
	"markdown.extension.print.absoluteImgPath": true,

	// Convert images to base64 when printing to HTML.
	"markdown.extension.print.imgToBase64": false,

	// Include VS Code's basic Markdown styles so that the exported HTML looks similar as inside VS Code.
	"markdown.extension.print.includeVscodeStylesheets": true,

	// Print current document to HTML when file is saved.
	"markdown.extension.print.onFileSave": false,

	// Theme of the exported HTML. Only affects code blocks.
	"markdown.extension.print.theme": "light",

	// Enable/disable URL validation when printing.
	"markdown.extension.print.validateUrls": true,

	// If a file is larger than this size (in byte/B), we won't attempt to render syntax decorations.
	"markdown.extension.syntax.decorationFileSizeLimit": 50000,

	// Add syntax decorations in editors. (e.g. ~~strikethrough~~, `code span`)
	"markdown.extension.syntax.decorations": true,

	// (**Experimental**) Report issue at <https://github.com/yzhang-gh/vscode-markdown/issues/185>.
	// 
	// Only take effect when `markdown.extension.syntax.decorations` is enabled.
	"markdown.extension.syntax.plainTheme": false,

	// Enable [GitHub Flavored Markdown](https://github.github.com/gfm/) table formatter.
	"markdown.extension.tableFormatter.enabled": true,

	// Normalize table indentation to closest multiple of configured editor tab size.
	"markdown.extension.tableFormatter.normalizeIndentation": false,

	// Whether to **force** to downcase TOC links.
	"markdown.extension.toc.downcaseLink": true,

	// Range of levels for table of contents. Use `x..y` for level `x` to `y`.
	"markdown.extension.toc.levels": "1..6",

	// Lists of headings to omit by project file.
	// Example:
	// { "README.md": ["# Introduction"] }
	"markdown.extension.toc.omittedFromToc": {},

	// Use ordered list, that is:
	// 1. ...
	// 2. ...
	"markdown.extension.toc.orderedList": false,

	// Just plain text TOC, no links.
	"markdown.extension.toc.plaintext": false,

	// The method to generate heading ID. This affects **links to headings** in **TOC**, **code completion**, and **printing**.
	//  - github: GitHub
	//  - azureDevops: Azure DevOps
	//  - bitbucketCloud: Bitbucket Cloud
	//  - gitea: Gitea
	//  - gitlab: GitLab
	//  - vscode: Visual Studio Code
	"markdown.extension.toc.slugifyMode": "github",

	// Use `-`, `*`, or `+` in the table of contents (for **unordered** list).
	"markdown.extension.toc.unorderedList.marker": "-",

	// Auto update TOC on save.
	"markdown.extension.toc.updateOnSave": true,

	// Toggle bold on some scopes
	"oneDarkPro.bold": false,

	// Code highlight color, read more [docs](https://binaryify.github.io/OneDark-Pro/#/?id=highlight-color-custom)
	"oneDarkPro.color": {
		"chalky": "",
		"coral": "",
		"dark": "",
		"error": "",
		"fountainBlue": "",
		"green": "",
		"invalid": "",
		"lightDark": "",
		"lightWhite": "",
		"malibu": "",
		"purple": "",
		"whiskey": "",
		"deepRed": ""
	},

	// Switch to different editor theme
	"oneDarkPro.editorTheme": "One Dark Pro",

	// Toggle italics on some scopes
	"oneDarkPro.italic": true,

	// Toggle Markdown style
	"oneDarkPro.markdownStyle": true,

	// Toggle vivid colors
	"oneDarkPro.vivid": false,

}
